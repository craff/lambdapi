
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME natural_2Ddef.

Number_2ENatural_2Enatural : hol.type.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

HOLLight_2Emk__num : hol.term (hol.arr hol.ind Number_2ENatural_2Enatural).

HOLLight_2Edest__num : hol.term (hol.arr Number_2ENatural_2Enatural hol.ind).

Data_2EBool_2E_3F_21 : A : hol.type -> hol.term A.

Function_2Einjective : A : hol.type -> hol.term A.

Function_2Esurjective : A : hol.type -> hol.term A.

(; Constant HOLLight.IND_SUC ;)

def HOLLight_2EIND__SUC : hol.term (hol.arr hol.ind hol.ind) :=
  hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))).

(; Constant HOLLight.IND_0 ;)

def HOLLight_2EIND__0 : hol.term hol.ind :=
  hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))).

(; Constant HOLLight.NUM_REP ;)

def HOLLight_2ENUM__REP : hol.term (hol.arr hol.ind hol.bool) :=
  a_1 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (NUM__REP_27_2 a_1)).

(; Constant Number.Natural.suc ;)

def Number_2ENatural_2Esuc : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) :=
  __1912_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_1)).

(; Constant Number.Natural.zero ;)

def Number_2ENatural_2Ezero : hol.term Number_2ENatural_2Enatural :=
  HOLLight_2Emk__num HOLLight_2EIND__0.

(; axiom ;)

thm_0 : hol.proof (hol.forall hol.bool (p1_1 : hol.term hol.bool => hol.forall hol.bool (p2_2 : hol.term hol.bool => hol.forall hol.bool (q1_3 : hol.term hol.bool => hol.forall hol.bool (q2_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp p1_1 p2_2) (hol.imp q1_3 q2_4)) (hol.imp (hol.or p1_1 q1_3) (hol.or p2_2 q2_4))))))).

(; axiom ;)

thm_1 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) (q_2 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3)))))).

(; axiom ;)

thm_3 : hol.proof (hol.forall hol.bool (p1_1 : hol.term hol.bool => hol.forall hol.bool (p2_2 : hol.term hol.bool => hol.forall hol.bool (q1_3 : hol.term hol.bool => hol.forall hol.bool (q2_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp p1_1 p2_2) (hol.imp q1_3 q2_4)) (hol.imp (hol.and p1_1 q1_3) (hol.and p2_2 q2_4))))))).

(; axiom ;)

thm_4 : hol.proof hol.true.

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_7 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; defineTypeOp ;)

thm_8 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (r_1 : hol.term hol.ind => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (r_1 : hol.term hol.ind => HOLLight_2ENUM__REP r_1)).

(; defineTypeOp ;)

thm_9 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (a_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) (a_1 : hol.term Number_2ENatural_2Enatural => a_1)).

(; axiom ;)

thm_10 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_11 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_12 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_13 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_14 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_15 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)).

(; axiom ;)

thm_16 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false).

(; axiom ;)

thm_17 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true).

(; axiom ;)

thm_18 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)).

(; axiom ;)

thm_19 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)).

(; axiom ;)

thm_20 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))).

(; axiom ;)

thm_21 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_22 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or (hol.eq hol.bool t_1 hol.true) (hol.eq hol.bool t_1 hol.false))).

(; axiom ;)

thm_23 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.true t_1) hol.true)).

(; axiom ;)

thm_24 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.true) hol.true)).

(; axiom ;)

thm_25 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.false t_1) t_1)).

(; axiom ;)

thm_26 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.false) t_1)).

(; axiom ;)

thm_27 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 t_1) t_1)).

(; axiom ;)

thm_28 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_29 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_30 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_31 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_32 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_33 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 t2_2) (hol.or t2_2 t1_1)))).

(; axiom ;)

thm_34 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))))).

(; axiom ;)

thm_35 : hol.proof (hol.eq hol.bool hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1))).

(; axiom ;)

thm_36 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not (p_1 : hol.term hol.bool => hol.imp p_1 hol.false)).

(; axiom ;)

thm_37 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or t_1 (hol.not t_1))).

(; axiom ;)

thm_38 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_1 x_3) (q_2 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_1 x_3)) (hol.forall A (x_3 : hol.term A => q_2 x_3)))))).

(; axiom ;)

thm_39 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1)).

(; axiom ;)

thm_40 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2))))).

(; axiom ;)

thm_41 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2))))).

(; axiom ;)

thm_42 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))).

(; axiom ;)

thm_43 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall A (y_2 : hol.term A => hol.eq B ((x_3 : hol.term A => f_1 x_3) y_2) (f_1 y_2)))).

(; axiom ;)

thm_44 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))))).

(; axiom ;)

thm_45 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))).

(; axiom ;)

thm_46 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp t1_1 t2_2)) (hol.and t1_1 (hol.not t2_2))))).

(; axiom ;)

thm_47 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.eq hol.bool (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))).

(; axiom ;)

thm_48 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))))).

(; axiom ;)

thm_49 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (P_1 : hol.term (hol.arr A hol.bool) => hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (P_1 (hol.select A P_1))))).

(; axiom ;)

thm_50 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3)))))).

(; axiom ;)

thm_51 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3)))))).

(; axiom ;)

thm_52 : A : hol.type -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_1 (q_2 x_3))) (hol.and p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3)))))).

(; axiom ;)

thm_53 : A : hol.type -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.and p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_1 (q_2 x_3)))))).

(; axiom ;)

thm_54 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) (q_2 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3)))))).

(; axiom ;)

thm_55 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) (q_2 x_3)))))).

(; axiom ;)

thm_56 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))))).

(; axiom ;)

thm_57 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) q_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) q_2))))).

(; axiom ;)

thm_58 : A : hol.type -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.or p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_1 (q_2 x_3)))))).

(; axiom ;)

thm_59 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)))).

(; axiom ;)

thm_60 : A : hol.type -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)).

(; Theorem: |- ((= HOLLight.IND_SUC) (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_61 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  hol.REFL (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC.

(; Theorem: |- ((= HOLLight.IND_0) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) ;)

(; dict ;)

def thm_62 : hol.proof (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) :=
  hol.REFL hol.ind HOLLight_2EIND__0.

(; Theorem: |- ((= HOLLight.NUM_REP) \lambda a. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a)))) ;)

(; dict ;)

def thm_63 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) HOLLight_2ENUM__REP (a_1 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (NUM__REP_27_2 a_1)))) :=
  hol.REFL (hol.arr hol.ind hol.bool) HOLLight_2ENUM__REP.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_64 : hol.proof (hol.eq (hol.arr (hol.arr (hol.arr hol.ind hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr hol.ind hol.bool)) (hol.forall (hol.arr hol.ind hol.bool))) :=
  hol.REFL (hol.arr (hol.arr (hol.arr hol.ind hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr hol.ind hol.bool)).

(; Theorem: |- ((= \lambda NUM_REP. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))))) \lambda NUM_REP. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))))) ;)

(; dict ;)

def thm_65 : hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))))) :=
  hol.REFL (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))).

(; Theorem: |- ((= \lambda NUM_REP. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))))) \lambda NUM_REP. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))))) ;)

(; dict ;)

def thm_66 : hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))))) :=
  hol.TRANS (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) thm_65 thm_65.

(; Theorem: |- ((= (Data.Bool.! \lambda NUM_REP. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))))) (Data.Bool.! \lambda NUM_REP. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))))) ;)

(; dict ;)

def thm_67 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))))) :=
  hol.APP_THM (hol.arr (hol.arr hol.ind hol.bool) hol.bool) hol.bool (hol.forall (hol.arr hol.ind hol.bool)) (hol.forall (hol.arr hol.ind hol.bool)) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) thm_64 thm_66.

(; Theorem: |- ((= \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))) \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))) ;)

(; dict ;)

def thm_68 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))).

(; Theorem: |- ((= \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))) \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))) ;)

(; dict ;)

def thm_69 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.TRANS (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))) (thm_68 NUM__REP_1) (thm_68 NUM__REP_1).

(; Theorem: |- ((= (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))))) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))))) ;)

(; dict ;)

def thm_70 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM (hol.arr (hol.arr hol.ind hol.bool) hol.bool) hol.bool (hol.forall (hol.arr hol.ind hol.bool)) (hol.forall (hol.arr hol.ind hol.bool)) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))) thm_64 (thm_69 NUM__REP_1).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) ;)

(; dict ;)

def thm_71 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) -> hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) => hyp_1.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_72 : hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (hol.forall hol.ind) (hol.forall hol.ind)) :=
  hol.REFL (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (hol.forall hol.ind).

(; Theorem: |- ((= \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_73 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL (hol.arr hol.ind hol.bool) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))).

(; Theorem: |- ((= \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_74 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.TRANS (hol.arr hol.ind hol.bool) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (thm_73 NUM__REP_27_1 NUM__REP_2) (thm_73 NUM__REP_27_1 NUM__REP_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))) ;)

(; dict ;)

def thm_75 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) thm_72 (thm_74 NUM__REP_27_1 NUM__REP_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))) ;)

(; dict ;)

def thm_76 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))) ;)

(; dict ;)

def thm_77 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (thm_76 NUM__REP_27_1 NUM__REP_2 a_3) (thm_76 NUM__REP_27_1 NUM__REP_2 a_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool.\/ p1) q1)) ((Data.Bool.\/ p2) q2)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool.\/ p1) q1)) ((Data.Bool.\/ p2) q2)))) ;)

(; dict ;)

def thm_78 : q2_1 : hol.term hol.bool -> q1_2 : hol.term hol.bool -> p2_3 : hol.term hol.bool -> p1_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1)))) :=
  q2_1 : hol.term hol.bool => q1_2 : hol.term hol.bool => p2_3 : hol.term hol.bool => p1_4 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool.\/ p1) q1)) ((Data.Bool.\/ p2) q2)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool.\/ p1) q1)) ((Data.Bool.\/ p2) q2)))) ;)

(; dict ;)

def thm_79 : q2_1 : hol.term hol.bool -> q1_2 : hol.term hol.bool -> p2_3 : hol.term hol.bool -> p1_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1)))) :=
  q2_1 : hol.term hol.bool => q1_2 : hol.term hol.bool => p2_3 : hol.term hol.bool => p1_4 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))) (thm_78 q2_1 q1_2 p2_3 p1_4) (thm_78 q2_1 q1_2 p2_3 p1_4).

(; Theorem: |- (Data.Bool.! \lambda p2. (Data.Bool.! \lambda q1. (Data.Bool.! \lambda q2. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool.\/ p1) q1)) ((Data.Bool.\/ p2) q2)))))) ;)

(; dict ;)

def thm_80 : p1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (p2_2 : hol.term hol.bool => hol.forall hol.bool (q1_3 : hol.term hol.bool => hol.forall hol.bool (q2_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp p1_1 p2_2) (hol.imp q1_3 q2_4)) (hol.imp (hol.or p1_1 q1_3) (hol.or p2_2 q2_4)))))) :=
  p1_1 : hol.term hol.bool => thm_0 p1_1.

(; Theorem: |- (Data.Bool.! \lambda q1. (Data.Bool.! \lambda q2. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool.\/ p1) q1)) ((Data.Bool.\/ p2) q2))))) ;)

(; dict ;)

def thm_81 : p2_1 : hol.term hol.bool -> p1_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q1_3 : hol.term hol.bool => hol.forall hol.bool (q2_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp p1_2 p2_1) (hol.imp q1_3 q2_4)) (hol.imp (hol.or p1_2 q1_3) (hol.or p2_1 q2_4))))) :=
  p2_1 : hol.term hol.bool => p1_2 : hol.term hol.bool => thm_80 p1_2 p2_1.

(; Theorem: |- (Data.Bool.! \lambda q2. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool.\/ p1) q1)) ((Data.Bool.\/ p2) q2)))) ;)

(; dict ;)

def thm_82 : q1_1 : hol.term hol.bool -> p2_2 : hol.term hol.bool -> p1_3 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q2_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp p1_3 p2_2) (hol.imp q1_1 q2_4)) (hol.imp (hol.or p1_3 q1_1) (hol.or p2_2 q2_4)))) :=
  q1_1 : hol.term hol.bool => p2_2 : hol.term hol.bool => p1_3 : hol.term hol.bool => thm_81 p2_2 p1_3 q1_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool.\/ p1) q1)) ((Data.Bool.\/ p2) q2))) ;)

(; dict ;)

def thm_83 : q2_1 : hol.term hol.bool -> q1_2 : hol.term hol.bool -> p2_3 : hol.term hol.bool -> p1_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))) :=
  q2_1 : hol.term hol.bool => q1_2 : hol.term hol.bool => p2_3 : hol.term hol.bool => p1_4 : hol.term hol.bool => thm_82 q1_2 p2_3 p1_4 q2_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_84 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => (q2_1 : hol.term hol.bool => q1_2 : hol.term hol.bool => p2_3 : hol.term hol.bool => p1_4 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.or p1_4 q1_2) (hol.or p2_3 q2_1))) (thm_79 q2_1 q1_2 p2_3 p1_4) (thm_83 q2_1 q1_2 p2_3 p1_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_85 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda p. ((Data.Bool.==> p) p)) \lambda p. ((Data.Bool.==> p) p)) ;)

(; dict ;)

def thm_86 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.imp p_1 p_1) (p_1 : hol.term hol.bool => hol.imp p_1 p_1)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.imp p_1 p_1).

(; Theorem: |- ((= \lambda p. ((Data.Bool.==> p) p)) \lambda p. ((Data.Bool.==> p) p)) ;)

(; dict ;)

def thm_87 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.imp p_1 p_1) (p_1 : hol.term hol.bool => hol.imp p_1 p_1)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.imp p_1 p_1) (p_1 : hol.term hol.bool => hol.imp p_1 p_1) (p_1 : hol.term hol.bool => hol.imp p_1 p_1) thm_86 thm_86.

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((Data.Bool.==> p) p))) (Data.Bool.! \lambda p. ((Data.Bool.==> p) p))) ;)

(; dict ;)

def thm_88 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.imp p_1 p_1)) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.imp p_1 p_1))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (p_1 : hol.term hol.bool => hol.imp p_1 p_1) (p_1 : hol.term hol.bool => hol.imp p_1 p_1) thm_85 thm_87.

(; Theorem: |- p ;)

(; dict ;)

def thm_89 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- ((Data.Bool.==> p) p) ;)

(; dict ;)

def thm_90 : p_1 : hol.term hol.bool -> hol.proof (hol.imp p_1 p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_89 p_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> p) p)) ;)

(; dict ;)

def thm_91 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.imp p_1 p_1)) :=
  p_1 : hol.term hol.bool => thm_90 p_1.

(; Theorem: |- ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0)) ;)

(; dict ;)

def thm_92 : a_1 : hol.term hol.ind -> hol.proof (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (hol.eq hol.ind a_1 HOLLight_2EIND__0)) :=
  a_1 : hol.term hol.ind => hol.EQ_MP (hol.forall hol.bool (p_2 : hol.term hol.bool => hol.imp p_2 p_2)) (hol.forall hol.bool (p_2 : hol.term hol.bool => hol.imp p_2 p_2)) thm_88 thm_91 (hol.eq hol.ind a_1 HOLLight_2EIND__0).

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_93 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_94 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_95 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_93 q_1 p_2) (thm_94 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_96 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_97 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_98 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_96 p_1) (thm_97 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_99 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_100 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_1 (thm_99 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_101 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_98 p_1) (thm_100 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_102 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_103 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_101 p_2) (thm_102 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_104 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_95 q_1 p_2) (thm_103 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_105 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_106 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_104 q_1 p_2) (thm_105 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_107 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_106 q_1 p_2 hyp_1 q_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_108 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_109 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_89 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_108 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_110 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_109 q_2 p_1 hyp_1 hyp_2) (thm_89 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_111 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_110 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_112 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_111 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_113 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_107 q_2 p_1 hyp_1 (thm_112 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_114 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_104 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_115 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_116 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_115 x_2 q_3 p_1 hyp_2 (thm_89 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_117 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_116 p_2 x_3 q_1 hyp_1 hyp_3 (thm_108 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_118 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_117 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_119 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_118 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_120 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_114 q_1 p_2) (thm_119 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_121 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_120 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool./\ ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_122 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool./\ ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_123 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.PROVE_HYP (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (thm_92 a_3) (hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) => thm_122 NUM__REP_27_1 NUM__REP_2 a_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_124 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_125 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (thm_124 NUM__REP_27_1 NUM__REP_2 a_3) (thm_124 NUM__REP_27_1 NUM__REP_2 a_3).

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_126 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ;)

(; dict ;)

def thm_127 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.BETA_CONV hol.ind hol.bool (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1.

(; Theorem: |- ((= (Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i))) (Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ;)

(; dict ;)

def thm_128 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1)) (hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)) thm_126 (thm_127 i_1 NUM__REP_2 a_3).

(; Theorem: |- ((= (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i)) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))) ;)

(; dict ;)

def thm_129 : i_1 : hol.term hol.ind -> NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)) i_1) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_27_2 i_1))) :=
  i_1 : hol.term hol.ind => NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.BETA_CONV hol.ind hol.bool (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)) i_1.

(; Theorem: |- ((= ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i))) ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) ;)

(; dict ;)

def thm_130 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> a_4 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_3 i_5)) i_2) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_2)) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_2)) (NUM__REP_27_1 i_2)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => a_4 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_3 i_5)) i_2)) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2))) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_2) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_2)) (NUM__REP_27_1 i_2)) (thm_128 i_2 NUM__REP_3 a_4) (thm_129 i_2 NUM__REP_27_1 a_4).

(; Theorem: |- ((= \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i))) \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) ;)

(; dict ;)

def thm_131 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.ABS_THM hol.ind hol.bool (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (i_4 : hol.term hol.ind => thm_130 NUM__REP_27_1 i_4 NUM__REP_2 a_3).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i)))) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_132 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4))) (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) thm_72 (thm_131 NUM__REP_27_1 NUM__REP_2 a_3).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i))))) (Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_133 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4))) (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) thm_126 (thm_132 NUM__REP_27_1 NUM__REP_2 a_3).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_134 : hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool))) :=
  hol.REFL (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)).

(; Theorem: |- ((= \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ;)

(; dict ;)

def thm_135 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_3) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.ABS_THM hol.ind hol.bool (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_3) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (i_3 : hol.term hol.ind => thm_127 i_3 NUM__REP_1 a_2).

(; Theorem: |- ((= (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ;)

(; dict ;)

def thm_136 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_3) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) thm_134 (thm_135 NUM__REP_1 a_2).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)))) (Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ;)

(; dict ;)

def thm_137 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) thm_126 (thm_136 NUM__REP_1 a_2).

(; Theorem: |- ((= \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i)) \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))) ;)

(; dict ;)

def thm_138 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)) i_3) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.ABS_THM hol.ind hol.bool (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)) i_3) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)) (i_3 : hol.term hol.ind => thm_129 i_3 NUM__REP_27_1 a_2).

(; Theorem: |- ((= (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) ;)

(; dict ;)

def thm_139 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)) i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)) i_3) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)) thm_134 (thm_138 NUM__REP_27_1 a_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i))) (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i)))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_140 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (thm_137 NUM__REP_2 a_3) (thm_139 NUM__REP_27_1 a_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i)))) ((Data.Bool.==> (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i))) (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i))))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_141 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (thm_133 NUM__REP_27_1 NUM__REP_2 a_3) (thm_140 NUM__REP_27_1 NUM__REP_2 a_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (q x)))) ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (q x)))) ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ;)

(; dict ;)

def thm_142 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_2 x_3) (q_1 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_2 x_3) (q_1 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_2 x_3) (q_1 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (p i)) (q i)))) ((Data.Bool.==> (Data.Bool.? \lambda i. (p i))) (Data.Bool.? \lambda i. (q i))))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (p i)) (q i)))) ((Data.Bool.==> (Data.Bool.? \lambda i. (p i))) (Data.Bool.? \lambda i. (q i))))) ;)

(; dict ;)

def thm_143 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (i_3 : hol.term A => hol.imp (p_2 i_3) (q_1 i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => p_2 i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => q_1 i_3)))) (hol.imp (hol.forall A (i_3 : hol.term A => hol.imp (p_2 i_3) (q_1 i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => p_2 i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => q_1 i_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (hol.forall A (i_3 : hol.term A => hol.imp (p_2 i_3) (q_1 i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => p_2 i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => q_1 i_3)))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (q x)))) ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (p i)) (q i)))) ((Data.Bool.==> (Data.Bool.? \lambda i. (p i))) (Data.Bool.? \lambda i. (q i))))) ;)

(; dict ;)

def thm_144 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_2 x_3) (q_1 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.imp (hol.forall A (i_3 : hol.term A => hol.imp (p_2 i_3) (q_1 i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => p_2 i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => q_1 i_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_2 x_3) (q_1 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_2 x_3) (q_1 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.imp (hol.forall A (i_3 : hol.term A => hol.imp (p_2 i_3) (q_1 i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => p_2 i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => q_1 i_3)))) (thm_142 A q_1 p_2) (thm_143 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (q x)))) ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ;)

(; dict ;)

def thm_145 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) (q_2 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_2 A p_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (q x)))) ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) ;)

(; dict ;)

def thm_146 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_2 x_3) (q_1 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_145 A p_2 q_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (p i)) (q i)))) ((Data.Bool.==> (Data.Bool.? \lambda i. (p i))) (Data.Bool.? \lambda i. (q i)))) ;)

(; dict ;)

def thm_147 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (i_3 : hol.term A => hol.imp (p_2 i_3) (q_1 i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => p_2 i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => q_1 i_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_2 x_3) (q_1 x_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.imp (hol.forall A (i_3 : hol.term A => hol.imp (p_2 i_3) (q_1 i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => p_2 i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (i_3 : hol.term A => q_1 i_3)))) (thm_144 A q_1 p_2) (thm_146 A q_1 p_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (p i)) (q i)))) ((Data.Bool.==> (Data.Bool.? \lambda i. (p i))) (Data.Bool.? \lambda i. (q i)))) ;)

(; dict ;)

def thm_148 : q_1 : hol.term (hol.arr hol.ind hol.bool) -> p_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (p_2 i_3) (q_1 i_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => p_2 i_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => q_1 i_3)))) :=
  q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_147 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i)))) ((Data.Bool.==> (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i))) (Data.Bool.? \lambda i. (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)) i)))) ;)

(; dict ;)

def thm_149 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => (q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => thm_148 q_1 p_2) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_150 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.EQ_MP (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4) ((i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)) i_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)) i_4)))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (thm_141 NUM__REP_27_1 NUM__REP_2 a_3) (thm_149 NUM__REP_27_1 NUM__REP_2 a_3).

(; Theorem: |- ((= \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) ;)

(; dict ;)

def thm_151 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.REFL (hol.arr hol.ind hol.bool) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))).

(; Theorem: |- ((= \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) ;)

(; dict ;)

def thm_152 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.TRANS (hol.arr hol.ind hol.bool) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (thm_151 NUM__REP_27_1 NUM__REP_2 a_3) (thm_151 NUM__REP_27_1 NUM__REP_2 a_3).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_153 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))) thm_72 (thm_152 NUM__REP_27_1 NUM__REP_2 a_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i)))) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i)))) ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i)))) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i)))) ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_154 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> i_3 : hol.term hol.ind -> a_4 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => i_3 : hol.term hol.ind => a_4 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i)))) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i)))) ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i)))) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i)))) ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_155 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> i_3 : hol.term hol.ind -> a_4 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => i_3 : hol.term hol.ind => a_4 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (thm_154 NUM__REP_27_1 NUM__REP_2 i_3 a_4) (thm_154 NUM__REP_27_1 NUM__REP_2 i_3 a_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool./\ p1) q1)) ((Data.Bool./\ p2) q2)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool./\ p1) q1)) ((Data.Bool./\ p2) q2)))) ;)

(; dict ;)

def thm_156 : q2_1 : hol.term hol.bool -> q1_2 : hol.term hol.bool -> p2_3 : hol.term hol.bool -> p1_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1)))) :=
  q2_1 : hol.term hol.bool => q1_2 : hol.term hol.bool => p2_3 : hol.term hol.bool => p1_4 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool./\ p1) q1)) ((Data.Bool./\ p2) q2)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool./\ p1) q1)) ((Data.Bool./\ p2) q2)))) ;)

(; dict ;)

def thm_157 : q2_1 : hol.term hol.bool -> q1_2 : hol.term hol.bool -> p2_3 : hol.term hol.bool -> p1_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1)))) :=
  q2_1 : hol.term hol.bool => q1_2 : hol.term hol.bool => p2_3 : hol.term hol.bool => p1_4 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))) (thm_156 q2_1 q1_2 p2_3 p1_4) (thm_156 q2_1 q1_2 p2_3 p1_4).

(; Theorem: |- (Data.Bool.! \lambda p2. (Data.Bool.! \lambda q1. (Data.Bool.! \lambda q2. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool./\ p1) q1)) ((Data.Bool./\ p2) q2)))))) ;)

(; dict ;)

def thm_158 : p1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (p2_2 : hol.term hol.bool => hol.forall hol.bool (q1_3 : hol.term hol.bool => hol.forall hol.bool (q2_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp p1_1 p2_2) (hol.imp q1_3 q2_4)) (hol.imp (hol.and p1_1 q1_3) (hol.and p2_2 q2_4)))))) :=
  p1_1 : hol.term hol.bool => thm_3 p1_1.

(; Theorem: |- (Data.Bool.! \lambda q1. (Data.Bool.! \lambda q2. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool./\ p1) q1)) ((Data.Bool./\ p2) q2))))) ;)

(; dict ;)

def thm_159 : p2_1 : hol.term hol.bool -> p1_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q1_3 : hol.term hol.bool => hol.forall hol.bool (q2_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp p1_2 p2_1) (hol.imp q1_3 q2_4)) (hol.imp (hol.and p1_2 q1_3) (hol.and p2_1 q2_4))))) :=
  p2_1 : hol.term hol.bool => p1_2 : hol.term hol.bool => thm_158 p1_2 p2_1.

(; Theorem: |- (Data.Bool.! \lambda q2. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool./\ p1) q1)) ((Data.Bool./\ p2) q2)))) ;)

(; dict ;)

def thm_160 : q1_1 : hol.term hol.bool -> p2_2 : hol.term hol.bool -> p1_3 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q2_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp p1_3 p2_2) (hol.imp q1_1 q2_4)) (hol.imp (hol.and p1_3 q1_1) (hol.and p2_2 q2_4)))) :=
  q1_1 : hol.term hol.bool => p2_2 : hol.term hol.bool => p1_3 : hol.term hol.bool => thm_159 p2_2 p1_3 q1_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p1) p2)) ((Data.Bool.==> q1) q2))) ((Data.Bool.==> ((Data.Bool./\ p1) q1)) ((Data.Bool./\ p2) q2))) ;)

(; dict ;)

def thm_161 : q2_1 : hol.term hol.bool -> q1_2 : hol.term hol.bool -> p2_3 : hol.term hol.bool -> p1_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))) :=
  q2_1 : hol.term hol.bool => q1_2 : hol.term hol.bool => p2_3 : hol.term hol.bool => p1_4 : hol.term hol.bool => thm_160 q1_2 p2_3 p1_4 q2_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i)))) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i)))) ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) ;)

(; dict ;)

def thm_162 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> i_3 : hol.term hol.ind -> a_4 : hol.term hol.ind -> hol.proof (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => i_3 : hol.term hol.ind => a_4 : hol.term hol.ind => (q2_1 : hol.term hol.bool => q1_2 : hol.term hol.bool => p2_3 : hol.term hol.bool => p1_4 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))) (hol.imp (hol.and (hol.imp p1_4 p2_3) (hol.imp q1_2 q2_1)) (hol.imp (hol.and p1_4 q1_2) (hol.and p2_3 q2_1))) (thm_157 q2_1 q1_2 p2_3 p1_4) (thm_161 q2_1 q1_2 p2_3 p1_4)) (NUM__REP_27_1 i_3) (NUM__REP_2 i_3) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)).

(; Theorem: |- ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_163 : i_1 : hol.term hol.ind -> a_2 : hol.term hol.ind -> hol.proof (hol.imp (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => a_2 : hol.term hol.ind => thm_91 (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)).

(; Theorem: |- ((= ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i))) ((Data.Bool./\ ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i)))) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i)))) ;)

(; dict ;)

def thm_164 : a_1 : hol.term hol.ind -> NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) -> i_3 : hol.term hol.ind -> NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3))) -> hol.proof (hol.eq hol.bool (hol.imp (NUM__REP_4 i_3) (NUM__REP_27_2 i_3)) (hol.and (hol.imp (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_4 i_3) (NUM__REP_27_2 i_3)))) :=
  a_1 : hol.term hol.ind => NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => i_3 : hol.term hol.ind => NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.imp (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_4 i_3) (NUM__REP_27_2 i_3)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i))) ((Data.Bool./\ ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i)))) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i)))) ;)

(; dict ;)

def thm_165 : a_1 : hol.term hol.ind -> NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) -> i_3 : hol.term hol.ind -> NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (NUM__REP_4 i_3) (NUM__REP_27_2 i_3)) (hol.and (hol.imp (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_4 i_3) (NUM__REP_27_2 i_3)))) :=
  a_1 : hol.term hol.ind => NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => i_3 : hol.term hol.ind => NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.PROVE_HYP (hol.imp (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3))) (hol.eq hol.bool (hol.imp (NUM__REP_4 i_3) (NUM__REP_27_2 i_3)) (hol.and (hol.imp (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_4 i_3) (NUM__REP_27_2 i_3)))) (thm_163 i_3 a_1) (hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3))) => thm_164 a_1 NUM__REP_27_2 i_3 NUM__REP_4 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) Data.Bool.T)) ((= ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) Data.Bool.T)) ;)

(; dict ;)

def thm_166 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true)) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) Data.Bool.T)) ((= ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) Data.Bool.T)) ;)

(; dict ;)

def thm_167 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true)) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) (thm_166 NUM__REP_27_1 a_2 NUM__REP_3) (thm_166 NUM__REP_27_1 a_2 NUM__REP_3).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_168 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_169 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_168 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_170 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_169 t_1 hyp_1) thm_4.

(; Theorem: |- t ;)

(; dict ;)

def thm_171 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_172 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_171 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_4).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_173 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_170 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_172 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) ((= ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) Data.Bool.T)) ;)

(; dict ;)

def thm_174 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true)) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => (t_1 : hol.term hol.bool => thm_173 t_1) (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)).

(; Theorem: |- ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)) ;)

(; dict ;)

def thm_175 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) => thm_71 NUM__REP_27_1 NUM__REP_3 hyp_1 a_2.

(; Theorem: |- ((= ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) Data.Bool.T) ;)

(; dict ;)

def thm_176 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) => hol.EQ_MP (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) (thm_174 NUM__REP_27_1 a_2 NUM__REP_3) (thm_175 NUM__REP_27_1 a_2 NUM__REP_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i))) Data.Bool.T) ;)

(; dict ;)

def thm_177 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.eq hol.bool (hol.imp (NUM__REP_3 i_2) (NUM__REP_27_1 i_2)) hol.true) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) => (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) => hol.EQ_MP (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) (hol.eq hol.bool (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) hol.true) (thm_167 NUM__REP_27_1 a_2 NUM__REP_3) (thm_176 NUM__REP_27_1 a_2 NUM__REP_3 hyp_1)) NUM__REP_27_1 i_2 NUM__REP_3 hyp_1.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i))) ;)

(; dict ;)

def thm_178 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (NUM__REP_3 i_2) (NUM__REP_27_1 i_2))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) => hol.SYM hol.bool (hol.imp (NUM__REP_3 i_2) (NUM__REP_27_1 i_2)) hol.true (thm_177 NUM__REP_27_1 i_2 NUM__REP_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i)) ;)

(; dict ;)

def thm_179 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.imp (NUM__REP_3 i_2) (NUM__REP_27_1 i_2)) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_3 a_4) (NUM__REP_27_1 a_4))) => hol.EQ_MP hol.true (hol.imp (NUM__REP_3 i_2) (NUM__REP_27_1 i_2)) (thm_178 NUM__REP_27_1 i_2 NUM__REP_3 hyp_1) thm_4.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= a) (HOLLight.IND_SUC i))) ((= a) (HOLLight.IND_SUC i)))) ((Data.Bool.==> (NUM_REP i)) (NUM_REP' i))) ;)

(; dict ;)

def thm_180 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> i_3 : hol.term hol.ind -> a_4 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_2 a_5) (NUM__REP_27_1 a_5))) -> hol.proof (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => i_3 : hol.term hol.ind => a_4 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_2 a_5) (NUM__REP_27_1 a_5))) => hol.EQ_MP (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3)) (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (thm_165 a_4 NUM__REP_27_1 i_3 NUM__REP_2) (thm_179 NUM__REP_27_1 i_3 NUM__REP_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))) ;)

(; dict ;)

def thm_181 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> i_3 : hol.term hol.ind -> a_4 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_2 a_5) (NUM__REP_27_1 a_5))) -> hol.proof (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => i_3 : hol.term hol.ind => a_4 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_2 a_5) (NUM__REP_27_1 a_5))) => hol.EQ_MP (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3))) (hol.imp (NUM__REP_2 i_3) (NUM__REP_27_1 i_3))) (hol.imp (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (thm_155 NUM__REP_27_1 NUM__REP_2 i_3 a_4) (thm_162 NUM__REP_27_1 NUM__REP_2 i_3 a_4) (thm_180 NUM__REP_27_1 NUM__REP_2 i_3 a_4 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) ;)

(; dict ;)

def thm_182 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_1 a_4))) => i_4 : hol.term hol.ind => thm_181 NUM__REP_27_1 NUM__REP_2 i_4 a_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))) ;)

(; dict ;)

def thm_183 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_1 a_4))) => hol.EQ_MP (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (thm_125 NUM__REP_27_1 NUM__REP_2 a_3) (thm_150 NUM__REP_27_1 NUM__REP_2 a_3) (hol.EQ_MP (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (thm_153 NUM__REP_27_1 NUM__REP_2 a_3) (thm_182 NUM__REP_27_1 NUM__REP_2 a_3 hyp_1)).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((= a) HOLLight.IND_0))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_184 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_1 a_4))) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (thm_123 NUM__REP_27_1 NUM__REP_2 a_3) (thm_183 NUM__REP_27_1 NUM__REP_2 a_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_185 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_1 a_4))) -> hol.proof (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_1 a_4))) => hol.EQ_MP (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (hol.imp (hol.and (hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (hol.eq hol.ind a_3 HOLLight_2EIND__0)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (thm_77 NUM__REP_27_1 NUM__REP_2 a_3) (thm_84 NUM__REP_27_1 NUM__REP_2 a_3) (thm_184 NUM__REP_27_1 NUM__REP_2 a_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_186 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) -> hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) => a_3 : hol.term hol.ind => thm_185 NUM__REP_27_1 NUM__REP_2 a_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_187 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) -> hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) => hol.PROVE_HYP (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (thm_71 NUM__REP_27_1 NUM__REP_2 hyp_1) (hyp_2 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) => hol.EQ_MP (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) (thm_75 NUM__REP_27_1 NUM__REP_2) (thm_186 NUM__REP_27_1 NUM__REP_2 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))) ;)

(; dict ;)

def thm_188 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) => thm_187 NUM__REP_27_1 NUM__REP_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))) ;)

(; dict ;)

def thm_189 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => thm_188 NUM__REP_27_2 NUM__REP_1.

(; Theorem: |- (Data.Bool.! \lambda NUM_REP. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))))) ;)

(; dict ;)

def thm_190 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.EQ_MP (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) (thm_70 NUM__REP_1) (thm_189 NUM__REP_1).

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_191 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ;)

(; dict ;)

def thm_192 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= HOLLight.IND_0) HOLLight.IND_0)) (NUM_REP HOLLight.IND_0)) ;)

(; dict ;)

def thm_193 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) -> hol.proof (hol.imp (hol.eq hol.ind HOLLight_2EIND__0 HOLLight_2EIND__0) (NUM__REP_1 HOLLight_2EIND__0)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) => thm_192 NUM__REP_1 hyp_1 HOLLight_2EIND__0.

(; Theorem: |- ((= HOLLight.IND_0) HOLLight.IND_0) ;)

(; dict ;)

def thm_194 : hol.proof (hol.eq hol.ind HOLLight_2EIND__0 HOLLight_2EIND__0) :=
  hol.REFL hol.ind HOLLight_2EIND__0.

(; Theorem: |- (NUM_REP HOLLight.IND_0) ;)

(; dict ;)

def thm_195 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) -> hol.proof (NUM__REP_1 HOLLight_2EIND__0) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) => thm_193 NUM__REP_1 hyp_1 thm_194.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (NUM_REP HOLLight.IND_0)) ;)

(; dict ;)

def thm_196 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (NUM__REP_1 HOLLight_2EIND__0)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) => thm_195 NUM__REP_1 hyp_1.

(; Theorem: |- ((= NUM_REP) NUM_REP) ;)

(; dict ;)

def thm_197 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 NUM__REP_1) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL (hol.arr hol.ind hol.bool) NUM__REP_1.

(; Theorem: |- ((= a) HOLLight.IND_0) ;)

(; dict ;)

def thm_198 : a_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) :=
  a_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => hyp_1.

(; Theorem: |- ((= (NUM_REP a)) (NUM_REP HOLLight.IND_0)) ;)

(; dict ;)

def thm_199 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hol.proof (hol.eq hol.bool (NUM__REP_2 a_1) (NUM__REP_2 HOLLight_2EIND__0)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => hol.APP_THM hol.ind hol.bool NUM__REP_2 NUM__REP_2 a_1 HOLLight_2EIND__0 (thm_197 NUM__REP_2) (thm_198 a_1 hyp_1).

(; Theorem: |- ((= (NUM_REP HOLLight.IND_0)) (NUM_REP a)) ;)

(; dict ;)

def thm_200 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hol.proof (hol.eq hol.bool (NUM__REP_2 HOLLight_2EIND__0) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => hol.SYM hol.bool (NUM__REP_2 a_1) (NUM__REP_2 HOLLight_2EIND__0) (thm_199 a_1 NUM__REP_2 hyp_1).

(; Theorem: |- (NUM_REP HOLLight.IND_0) ;)

(; dict ;)

def thm_201 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) -> hol.proof (NUM__REP_1 HOLLight_2EIND__0) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) => hyp_1.

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_202 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (NUM__REP_2 HOLLight_2EIND__0) -> hyp_2 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_2 HOLLight_2EIND__0) => hyp_2 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => hol.EQ_MP (NUM__REP_2 HOLLight_2EIND__0) (NUM__REP_2 a_1) (thm_200 a_1 NUM__REP_2 hyp_2) (thm_201 NUM__REP_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)) ;)

(; dict ;)

def thm_203 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) -> hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) => hyp_2 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) => thm_202 a_2 NUM__REP_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ;)

(; dict ;)

def thm_204 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) => a_2 : hol.term hol.ind => hyp_2 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) => (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) => thm_203 NUM__REP_1 a_2 hyp_1) NUM__REP_1 a_2 hyp_1 (thm_198 a_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) ;)

(; dict ;)

def thm_205 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) => thm_204 NUM__REP_1 hyp_1.

(; Theorem: |- ((= (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) ;)

(; dict ;)

def thm_206 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.PROP_EXT (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) => thm_196 NUM__REP_1 (thm_192 NUM__REP_1 hyp_1)) (hyp_1 : hol.proof (NUM__REP_1 HOLLight_2EIND__0) => thm_205 NUM__REP_1 (thm_201 NUM__REP_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)) ;)

(; dict ;)

def thm_207 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) -> hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) => hyp_1.

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_208 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (NUM__REP_2 a_1)) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => hyp_2 : hol.proof (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (NUM__REP_2 a_1)) => thm_207 NUM__REP_2 a_1 hyp_2 (thm_198 a_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ;)

(; dict ;)

def thm_209 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.imp (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) => hyp_2 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) => thm_208 a_2 NUM__REP_1 hyp_2 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ;)

(; dict ;)

def thm_210 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.PROP_EXT (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) (hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) => thm_209 NUM__REP_1 a_2 (thm_207 NUM__REP_1 a_2 hyp_1)) (hyp_1 : hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) => thm_207 NUM__REP_1 a_2 hyp_1).

(; Theorem: |- ((= \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ;)

(; dict ;)

def thm_211 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.ABS_THM hol.ind hol.bool (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => thm_210 NUM__REP_1 a_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) ;)

(; dict ;)

def thm_212 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) thm_72 (thm_211 NUM__REP_1).

(; Theorem: |- ((= (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) ;)

(; dict ;)

def thm_213 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.TRANS hol.bool (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (thm_206 NUM__REP_1) (thm_212 NUM__REP_1).

(; Theorem: |- ((= (Data.Bool./\ (NUM_REP HOLLight.IND_0))) (Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))))) ;)

(; dict ;)

def thm_214 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (NUM__REP_1 HOLLight_2EIND__0)) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) thm_191 (thm_213 NUM__REP_1).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) ;)

(; dict ;)

def thm_215 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda i_1. ((Data.Bool.==> ((Data.Bool./\ ((= (HOLLight.IND_SUC i)) (HOLLight.IND_SUC i_1))) (NUM_REP i_1))) (NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_216 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_3)))) -> hol.proof (hol.forall hol.ind (i__1_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind (HOLLight_2EIND__SUC i_2) (HOLLight_2EIND__SUC i__1_3)) (NUM__REP_1 i__1_3)) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_3)))) => thm_215 NUM__REP_1 hyp_1 (HOLLight_2EIND__SUC i_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (HOLLight.IND_SUC i)) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_217 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_3)))) -> hol.proof (hol.imp (hol.and (hol.eq hol.ind (HOLLight_2EIND__SUC i_2) (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_3)))) => thm_216 NUM__REP_1 i_2 hyp_1 i_2.

(; Theorem: |- ((= (HOLLight.IND_SUC i)) (HOLLight.IND_SUC i)) ;)

(; dict ;)

def thm_218 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) :=
  i_1 : hol.term hol.ind => hol.REFL hol.ind (HOLLight_2EIND__SUC i_1).

(; Theorem: |- ((= (NUM_REP i)) ((Data.Bool./\ ((= (HOLLight.IND_SUC i)) (HOLLight.IND_SUC i))) (NUM_REP i))) ;)

(; dict ;)

def thm_219 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) -> hol.proof (hol.eq hol.bool (NUM__REP_2 i_1) (hol.and (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1) hyp_1.

(; Theorem: |- ((= (NUM_REP i)) ((Data.Bool./\ ((= (HOLLight.IND_SUC i)) (HOLLight.IND_SUC i))) (NUM_REP i))) ;)

(; dict ;)

def thm_220 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (NUM__REP_2 i_1) (hol.and (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.PROVE_HYP (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) (hol.eq hol.bool (NUM__REP_2 i_1) (hol.and (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1))) (thm_218 i_1) (hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1)) => thm_219 i_1 NUM__REP_2 hyp_1).

(; Theorem: |- (NUM_REP i) ;)

(; dict ;)

def thm_221 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (NUM__REP_2 i_1) -> hol.proof (NUM__REP_2 i_1) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_2 i_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (HOLLight.IND_SUC i)) (HOLLight.IND_SUC i))) (NUM_REP i)) ;)

(; dict ;)

def thm_222 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (NUM__REP_1 i_2) -> hol.proof (hol.and (hol.eq hol.ind (HOLLight_2EIND__SUC i_2) (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (NUM__REP_1 i_2) => hol.EQ_MP (NUM__REP_1 i_2) (hol.and (hol.eq hol.ind (HOLLight_2EIND__SUC i_2) (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (thm_220 i_2 NUM__REP_1) (thm_221 i_2 NUM__REP_1 hyp_1).

(; Theorem: |- (NUM_REP (HOLLight.IND_SUC i)) ;)

(; dict ;)

def thm_223 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (NUM__REP_2 i_1) -> hyp_2 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (NUM__REP_2 a_3)))) -> hol.proof (NUM__REP_2 (HOLLight_2EIND__SUC i_1)) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_2 i_1) => hyp_2 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (NUM__REP_2 a_3)))) => thm_217 NUM__REP_2 i_1 hyp_2 (thm_222 NUM__REP_2 i_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_224 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (NUM__REP_2 a_3)))) -> hol.proof (hol.imp (NUM__REP_2 i_1) (NUM__REP_2 (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (NUM__REP_2 a_3)))) => hyp_2 : hol.proof (NUM__REP_2 i_1) => thm_223 i_1 NUM__REP_2 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_225 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) -> hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) => i_2 : hol.term hol.ind => thm_224 i_2 NUM__REP_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a))))) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_226 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) => thm_225 NUM__REP_1 hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) ;)

(; dict ;)

def thm_227 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) -> hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_228 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_106 q_1 p_2 hyp_1 p_2.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_229 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_109 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_230 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_229 p_2 q_1 hyp_1 hyp_2) (thm_108 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_231 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_230 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_232 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_231 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_233 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_228 q_1 p_2 hyp_1 (thm_232 q_1 p_2).

(; Theorem: |- ((= a) (HOLLight.IND_SUC i)) ;)

(; dict ;)

def thm_234 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) -> hol.proof (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (NUM__REP_1 i_2) (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) hyp_1.

(; Theorem: |- ((= a) (HOLLight.IND_SUC i)) ;)

(; dict ;)

def thm_235 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) -> hol.proof (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) => hol.PROVE_HYP (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (thm_227 NUM__REP_1 i_2 a_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) => thm_234 NUM__REP_1 i_2 a_3 hyp_2).

(; Theorem: |- ((= (NUM_REP a)) (NUM_REP (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_236 : i_1 : hol.term hol.ind -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 i_1)) -> hol.proof (hol.eq hol.bool (NUM__REP_3 a_2) (NUM__REP_3 (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 i_1)) => hol.APP_THM hol.ind hol.bool NUM__REP_3 NUM__REP_3 a_2 (HOLLight_2EIND__SUC i_1) (thm_197 NUM__REP_3) (thm_235 NUM__REP_3 i_1 a_2 hyp_1).

(; Theorem: |- ((= (NUM_REP (HOLLight.IND_SUC i))) (NUM_REP a)) ;)

(; dict ;)

def thm_237 : a_1 : hol.term hol.ind -> i_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) -> hol.proof (hol.eq hol.bool (NUM__REP_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 a_1)) :=
  a_1 : hol.term hol.ind => i_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) => hol.SYM hol.bool (NUM__REP_3 a_1) (NUM__REP_3 (HOLLight_2EIND__SUC i_2)) (thm_236 i_2 a_1 NUM__REP_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_238 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) -> hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_239 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_2 i_3) (NUM__REP_2 (HOLLight_2EIND__SUC i_3)))) -> hol.proof (hol.imp (NUM__REP_2 i_1) (NUM__REP_2 (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_2 i_3) (NUM__REP_2 (HOLLight_2EIND__SUC i_3)))) => thm_238 NUM__REP_2 hyp_1 i_1.

(; Theorem: |- (NUM_REP i) ;)

(; dict ;)

def thm_240 : a_1 : hol.term hol.ind -> i_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) -> hol.proof (NUM__REP_3 i_2) :=
  a_1 : hol.term hol.ind => i_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2) hyp_1.

(; Theorem: |- (NUM_REP i) ;)

(; dict ;)

def thm_241 : a_1 : hol.term hol.ind -> i_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) -> hol.proof (NUM__REP_3 i_2) :=
  a_1 : hol.term hol.ind => i_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) => hol.PROVE_HYP (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) (NUM__REP_3 i_2) (thm_227 NUM__REP_3 i_2 a_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) => thm_240 a_1 i_2 NUM__REP_3 hyp_2).

(; Theorem: |- (NUM_REP (HOLLight.IND_SUC i)) ;)

(; dict ;)

def thm_242 : a_1 : hol.term hol.ind -> i_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (NUM__REP_3 i_4) (NUM__REP_3 (HOLLight_2EIND__SUC i_4)))) -> hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) -> hol.proof (NUM__REP_3 (HOLLight_2EIND__SUC i_2)) :=
  a_1 : hol.term hol.ind => i_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (NUM__REP_3 i_4) (NUM__REP_3 (HOLLight_2EIND__SUC i_4)))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (NUM__REP_3 i_2)) => thm_239 i_2 NUM__REP_3 hyp_1 (thm_241 a_1 i_2 NUM__REP_3 hyp_2).

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_243 : i_1 : hol.term hol.ind -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (NUM__REP_3 i_4) (NUM__REP_3 (HOLLight_2EIND__SUC i_4)))) -> hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 i_1)) -> hol.proof (NUM__REP_3 a_2) :=
  i_1 : hol.term hol.ind => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (NUM__REP_3 i_4) (NUM__REP_3 (HOLLight_2EIND__SUC i_4)))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 i_1)) => hol.EQ_MP (NUM__REP_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 a_2) (thm_237 a_2 i_1 NUM__REP_3 hyp_2) (thm_242 a_2 i_1 NUM__REP_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)) ;)

(; dict ;)

def thm_244 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (NUM__REP_1 i_4) (NUM__REP_1 (HOLLight_2EIND__SUC i_4)))) -> hol.proof (hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (NUM__REP_1 a_3)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (NUM__REP_1 i_4) (NUM__REP_1 (HOLLight_2EIND__SUC i_4)))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) => thm_243 i_2 a_3 NUM__REP_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a))) ;)

(; dict ;)

def thm_245 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_1 i_3) (NUM__REP_1 (HOLLight_2EIND__SUC i_3)))) -> hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_1 i_3) (NUM__REP_1 (HOLLight_2EIND__SUC i_3)))) => i_3 : hol.term hol.ind => hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) => (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (NUM__REP_1 i_4) (NUM__REP_1 (HOLLight_2EIND__SUC i_4)))) => thm_244 NUM__REP_1 i_2 a_3 hyp_1) NUM__REP_1 i_3 a_2 hyp_1 (thm_227 NUM__REP_1 i_3 a_2 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) ;)

(; dict ;)

def thm_246 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) => a_2 : hol.term hol.ind => thm_245 NUM__REP_1 a_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a))))) ;)

(; dict ;)

def thm_247 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) => thm_246 NUM__REP_1 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a))))) ;)

(; dict ;)

def thm_248 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.PROP_EXT (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) (hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) => thm_226 NUM__REP_1 (thm_215 NUM__REP_1 hyp_1)) (hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) => thm_247 NUM__REP_1 (thm_238 NUM__REP_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)) ;)

(; dict ;)

def thm_249 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) ;)

(; dict ;)

def thm_250 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hol.SYM hol.bool ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_2) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (thm_127 i_2 NUM__REP_1 a_3).

(; Theorem: |- (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i) ;)

(; dict ;)

def thm_251 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)) -> hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)) => hol.EQ_MP (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)) ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) (thm_250 NUM__REP_2 i_1 a_3) (thm_227 NUM__REP_2 i_1 a_3 hyp_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_252 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_253 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_254 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_252 A P_1) (thm_253 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_255 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_256 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_5 A) (thm_255 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_257 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_254 A P_1) (thm_256 A P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_258 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_257 A P_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_259 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_260 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_259 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_261 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_262 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_260 A Q_3 x_1 P_2 hyp_2 (thm_261 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_263 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_262 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_264 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_263 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_265 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_258 A P_2) (thm_264 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ;)

(; dict ;)

def thm_266 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_265 A x_1 P_2 hyp_1) hol.ind i_1 (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ;)

(; dict ;)

def thm_267 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)) => hol.PROVE_HYP ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (thm_251 i_1 NUM__REP_2 a_3 hyp_1) (hyp_2 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) => thm_266 i_1 NUM__REP_2 a_3 hyp_2).

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_268 : i_1 : hol.term hol.ind -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 i_1)) -> hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_3 i_4))) (NUM__REP_3 a_2)) -> hol.proof (NUM__REP_3 a_2) :=
  i_1 : hol.term hol.ind => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 i_1)) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_3 i_4))) (NUM__REP_3 a_2)) => thm_249 NUM__REP_3 a_2 hyp_2 (thm_267 i_1 NUM__REP_3 a_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)) ;)

(; dict ;)

def thm_269 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)) -> hol.proof (hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (NUM__REP_1 a_3)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) => thm_268 i_2 a_3 NUM__REP_1 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a))) ;)

(; dict ;)

def thm_270 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) -> hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) => i_3 : hol.term hol.ind => thm_269 NUM__REP_1 i_3 a_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) ;)

(; dict ;)

def thm_271 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) => thm_270 NUM__REP_1 a_2 hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_272 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_273 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_272 q_2 p_1 hyp_2) (thm_89 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_274 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_273 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_275 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_274 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_276 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_275 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_277 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_276 A P_1 (thm_257 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_278 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_279 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_277 A P_1 (thm_278 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_280 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_279 A P_2 hyp_1 Q_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_281 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_280 A Q_2 P_1 hyp_2 (thm_259 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_282 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_281 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_283 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_282 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) x)) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a))))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a)))) ;)

(; dict ;)

def thm_284 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.imp (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.imp ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) x_3) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_2))) (NUM__REP_1 a_2)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_283 A Q_1 P_2) hol.ind (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (NUM__REP_1 a_2)) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)).

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a))) ;)

(; dict ;)

def thm_285 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) -> hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)) ;)

(; dict ;)

def thm_286 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_3))) -> hol.proof (hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (NUM__REP_1 a_3)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_3))) => thm_285 NUM__REP_1 a_3 hyp_1 i_2.

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_287 : i_1 : hol.term hol.ind -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_3 i_4)) (NUM__REP_3 a_2))) -> hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 i_1)) -> hol.proof (NUM__REP_3 a_2) :=
  i_1 : hol.term hol.ind => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_3 i_4)) (NUM__REP_3 a_2))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_1)) (NUM__REP_3 i_1)) => thm_286 NUM__REP_3 i_1 a_2 hyp_1 (thm_227 NUM__REP_3 i_1 a_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a)) ;)

(; dict ;)

def thm_288 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)) -> hol.proof (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (NUM__REP_2 a_3))) (NUM__REP_2 a_3)) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_1)) (NUM__REP_2 i_1)) => hyp_2 : hol.proof (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (NUM__REP_2 a_3))) => thm_287 i_1 a_3 NUM__REP_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a))) ;)

(; dict ;)

def thm_289 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hol.proof (hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_3))) (NUM__REP_1 a_3))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) => thm_288 i_2 NUM__REP_1 a_3 hyp_1.

(; Theorem: |- (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i) ;)

(; dict ;)

def thm_290 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) -> hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) ;)

(; dict ;)

def thm_291 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> i_2 : hol.term hol.ind -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_2) -> hol.proof (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => i_2 : hol.term hol.ind => a_3 : hol.term hol.ind => hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_2) => hol.EQ_MP ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_2) (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_2)) (NUM__REP_1 i_2)) (thm_127 i_2 NUM__REP_1 a_3) (thm_290 i_2 NUM__REP_1 a_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a)) ;)

(; dict ;)

def thm_292 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) -> hol.proof (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (NUM__REP_2 a_3))) (NUM__REP_2 a_3)) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) => thm_289 NUM__REP_2 i_1 a_3 (thm_291 NUM__REP_2 i_1 a_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a))) ;)

(; dict ;)

def thm_293 : i_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.imp ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) (NUM__REP_2 a_3))) (NUM__REP_2 a_3))) :=
  i_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)) i_1) => thm_292 i_1 NUM__REP_2 a_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)) i)) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a)))) ;)

(; dict ;)

def thm_294 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp ((i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) i_3) (hol.imp (hol.forall hol.ind (i_4 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)) (NUM__REP_1 a_2))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => i_3 : hol.term hol.ind => thm_293 i_3 NUM__REP_1 a_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a))) ;)

(; dict ;)

def thm_295 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => thm_284 NUM__REP_1 a_2 (thm_294 NUM__REP_1 a_2).

(; Theorem: |- (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) ;)

(; dict ;)

def thm_296 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) (NUM_REP a)) ;)

(; dict ;)

def thm_297 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) -> hol.proof (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) => thm_295 NUM__REP_1 a_2 (thm_296 NUM__REP_1 a_2 hyp_1).

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_298 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (NUM__REP_2 a_1))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)) (NUM__REP_2 a_1))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) => thm_297 NUM__REP_2 a_1 hyp_2 (thm_285 NUM__REP_2 a_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)) ;)

(; dict ;)

def thm_299 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) => thm_298 a_2 NUM__REP_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))) ;)

(; dict ;)

def thm_300 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) => thm_299 NUM__REP_1 a_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))) ;)

(; dict ;)

def thm_301 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.PROP_EXT (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) (hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) => thm_271 NUM__REP_1 a_2 (thm_249 NUM__REP_1 a_2 hyp_1)) (hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) => thm_300 NUM__REP_1 a_2 (thm_285 NUM__REP_1 a_2 hyp_1)).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a)))) \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))) ;)

(; dict ;)

def thm_302 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.ABS_THM hol.ind hol.bool (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => thm_301 NUM__REP_1 a_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))) (NUM_REP a))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)))) ;)

(; dict ;)

def thm_303 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2))) (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) thm_72 (thm_302 NUM__REP_1).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)))) ;)

(; dict ;)

def thm_304 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.TRANS hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)) (NUM__REP_1 a_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) (thm_248 NUM__REP_1) (thm_303 NUM__REP_1).

(; Theorem: |- ((= ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ;)

(; dict ;)

def thm_305 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (NUM__REP_1 HOLLight_2EIND__0)) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) (thm_214 NUM__REP_1) (thm_304 NUM__REP_1).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_306 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_307 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_306 A x_1) (thm_306 A x_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_308 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_309 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_310 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_309 A) (thm_309 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_311 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_308 A) (thm_310 A).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_312 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_173 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_313 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_6 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_314 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_312 A x_1) (thm_313 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_315 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_306 A x_1) (thm_314 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_316 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_1 x_1) hol.true) :=
  x_1 : hol.term hol.bool => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_307 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_311 A) (thm_315 A) x_1)) hol.bool x_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)))))) Data.Bool.T) ;)

(; dict ;)

def thm_317 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) hol.true) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)))))) ;)

(; dict ;)

def thm_318 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) hol.true (thm_317 NUM__REP_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ;)

(; dict ;)

def thm_319 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.EQ_MP hol.true (hol.eq hol.bool (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) (thm_318 NUM__REP_1) thm_4.

(; Theorem: |- ((= ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ;)

(; dict ;)

def thm_320 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.TRANS hol.bool (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (thm_305 NUM__REP_1) (thm_319 NUM__REP_1).

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_321 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_322 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_323 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_321 Q_1 P_2) (thm_322 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_324 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_325 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_326 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_324 P_1) (thm_325 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_327 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_328 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_7 (thm_327 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_329 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_326 P_1) (thm_328 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_330 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_331 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_329 P_2) (thm_330 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_332 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_323 Q_1 P_2) (thm_331 Q_1 P_2).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ((Data.Bool.\/ P) Q)) ;)

(; dict ;)

def thm_333 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (hol.or P_2 Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.SYM hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_332 Q_1 P_2).

(; Theorem: |- ((Data.Bool.==> P) t) ;)

(; dict ;)

def thm_334 : t_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 t_1) -> hol.proof (hol.imp P_2 t_1) :=
  t_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 t_1) => hyp_1.

(; Theorem: |- P ;)

(; dict ;)

def thm_335 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_1.

(; Theorem: |- t ;)

(; dict ;)

def thm_336 : P_1 : hol.term hol.bool -> t_2 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hyp_2 : hol.proof (hol.imp P_1 t_2) -> hol.proof t_2 :=
  P_1 : hol.term hol.bool => t_2 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_2 : hol.proof (hol.imp P_1 t_2) => thm_334 t_2 P_1 hyp_2 (thm_335 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) t)) t) ;)

(; dict ;)

def thm_337 : P_1 : hol.term hol.bool -> t_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hyp_2 : hol.proof (hol.imp P_1 t_2) -> hol.proof (hol.imp (hol.imp Q_3 t_2) t_2) :=
  P_1 : hol.term hol.bool => t_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_2 : hol.proof (hol.imp P_1 t_2) => hyp_3 : hol.proof (hol.imp Q_3 t_2) => thm_336 P_1 t_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) t)) ((Data.Bool.==> ((Data.Bool.==> Q) t)) t)) ;)

(; dict ;)

def thm_338 : Q_1 : hol.term hol.bool -> t_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof P_3 -> hol.proof (hol.imp (hol.imp P_3 t_2) (hol.imp (hol.imp Q_1 t_2) t_2)) :=
  Q_1 : hol.term hol.bool => t_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof P_3 => hyp_2 : hol.proof (hol.imp P_3 t_2) => thm_337 P_3 t_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool.==> P) t)) ((Data.Bool.==> ((Data.Bool.==> Q) t)) t))) ;)

(; dict ;)

def thm_339 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof P_2 -> hol.proof (hol.forall hol.bool (t_3 : hol.term hol.bool => hol.imp (hol.imp P_2 t_3) (hol.imp (hol.imp Q_1 t_3) t_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof P_2 => t_3 : hol.term hol.bool => thm_338 Q_1 t_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_340 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof P_2 -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof P_2 => hol.EQ_MP (hol.forall hol.bool (t_3 : hol.term hol.bool => hol.imp (hol.imp P_2 t_3) (hol.imp (hol.imp Q_1 t_3) t_3))) (hol.or P_2 Q_1) (thm_333 Q_1 P_2) (thm_339 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ;)

(; dict ;)

def thm_341 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) -> hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof P_2 => thm_340 Q_1 P_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (hol.eq hol.ind a_2 HOLLight_2EIND__0) hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ;)

(; dict ;)

def thm_342 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) -> hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) => hol.PROVE_HYP (hol.eq hol.ind a_2 HOLLight_2EIND__0) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (thm_198 a_2 hyp_1) (hyp_2 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) => thm_341 NUM__REP_1 a_2 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a))) ;)

(; dict ;)

def thm_343 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)) ;)

(; dict ;)

def thm_344 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (NUM__REP_1 a_3))) -> hol.proof (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (NUM__REP_1 a_3))) => thm_343 NUM__REP_1 hyp_1 a_2.

(; Theorem: |- ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ;)

(; dict ;)

def thm_345 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) -> hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) => hyp_1.

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_346 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) -> hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) => hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => thm_344 NUM__REP_2 a_1 hyp_1 (thm_345 NUM__REP_2 a_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) (NUM_REP a)) ;)

(; dict ;)

def thm_347 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) -> hol.proof (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => hyp_2 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) => thm_346 a_1 NUM__REP_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) (NUM_REP a)) ;)

(; dict ;)

def thm_348 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hol.proof (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => hol.PROVE_HYP (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) (NUM__REP_2 a_1)) (thm_342 NUM__REP_2 a_1 hyp_1) (hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => thm_347 a_1 NUM__REP_2 hyp_2).

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_349 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) -> hyp_2 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) => hyp_2 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => thm_348 a_1 NUM__REP_2 hyp_2 (thm_343 NUM__REP_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)) ;)

(; dict ;)

def thm_350 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (NUM__REP_1 a_3))) -> hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (NUM__REP_1 a_3))) => hyp_2 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) => thm_349 a_2 NUM__REP_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ;)

(; dict ;)

def thm_351 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => a_2 : hol.term hol.ind => thm_350 NUM__REP_1 a_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ;)

(; dict ;)

def thm_352 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ;)

(; dict ;)

def thm_353 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => hol.PROVE_HYP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) (thm_351 NUM__REP_1 hyp_1) (hyp_2 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) => thm_352 NUM__REP_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> Q) t) ;)

(; dict ;)

def thm_354 : t_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 t_1) -> hol.proof (hol.imp Q_2 t_1) :=
  t_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 t_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_355 : Q_1 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hol.proof Q_1 :=
  Q_1 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => hyp_1.

(; Theorem: |- t ;)

(; dict ;)

def thm_356 : Q_1 : hol.term hol.bool -> t_2 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hyp_2 : hol.proof (hol.imp Q_1 t_2) -> hol.proof t_2 :=
  Q_1 : hol.term hol.bool => t_2 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => hyp_2 : hol.proof (hol.imp Q_1 t_2) => thm_354 t_2 Q_1 hyp_2 (thm_355 Q_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) t)) t) ;)

(; dict ;)

def thm_357 : t_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof Q_2 -> hol.proof (hol.imp (hol.imp Q_2 t_1) t_1) :=
  t_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof Q_2 => hyp_2 : hol.proof (hol.imp Q_2 t_1) => thm_356 Q_2 t_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) t)) ((Data.Bool.==> ((Data.Bool.==> Q) t)) t)) ;)

(; dict ;)

def thm_358 : Q_1 : hol.term hol.bool -> t_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hol.proof (hol.imp (hol.imp P_3 t_2) (hol.imp (hol.imp Q_1 t_2) t_2)) :=
  Q_1 : hol.term hol.bool => t_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => hyp_2 : hol.proof (hol.imp P_3 t_2) => thm_357 t_2 Q_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool.==> P) t)) ((Data.Bool.==> ((Data.Bool.==> Q) t)) t))) ;)

(; dict ;)

def thm_359 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hol.proof (hol.forall hol.bool (t_3 : hol.term hol.bool => hol.imp (hol.imp P_2 t_3) (hol.imp (hol.imp Q_1 t_3) t_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => t_3 : hol.term hol.bool => thm_358 Q_1 t_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_360 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof Q_1 -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => hol.EQ_MP (hol.forall hol.bool (t_3 : hol.term hol.bool => hol.imp (hol.imp P_2 t_3) (hol.imp (hol.imp Q_1 t_3) t_3))) (hol.or P_2 Q_1) (thm_333 Q_1 P_2) (thm_359 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ;)

(; dict ;)

def thm_361 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) -> hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof Q_1 => thm_360 Q_1 P_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (hol.eq hol.ind a_2 HOLLight_2EIND__0) hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ;)

(; dict ;)

def thm_362 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) -> hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (thm_296 NUM__REP_1 a_2 hyp_1) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) => thm_361 NUM__REP_1 a_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) (NUM_REP a)) ;)

(; dict ;)

def thm_363 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) -> hol.proof (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) => hol.PROVE_HYP (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) (NUM__REP_2 a_1)) (thm_362 NUM__REP_2 a_1 hyp_1) (hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => thm_347 a_1 NUM__REP_2 hyp_2).

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_364 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_2 a_3))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) => thm_363 a_1 NUM__REP_2 hyp_2 (thm_343 NUM__REP_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)) ;)

(; dict ;)

def thm_365 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (NUM__REP_1 a_3))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (NUM__REP_1 a_3))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) => thm_364 a_2 NUM__REP_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))) ;)

(; dict ;)

def thm_366 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => a_2 : hol.term hol.ind => thm_365 NUM__REP_1 a_2 hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)))) ;)

(; dict ;)

def thm_367 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) -> hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => hol.EQ_MP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (thm_353 NUM__REP_1 hyp_1) (thm_366 NUM__REP_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) ;)

(; dict ;)

def thm_368 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => thm_367 NUM__REP_1 hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)))) ;)

(; dict ;)

def thm_369 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) -> hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))) ;)

(; dict ;)

def thm_370 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))) ;)

(; dict ;)

def thm_371 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => hol.PROVE_HYP (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) (thm_369 NUM__REP_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => thm_370 NUM__REP_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a)) ;)

(; dict ;)

def thm_372 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)))) => thm_371 NUM__REP_1 hyp_1 a_2.

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_373 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) => thm_372 NUM__REP_2 a_1 hyp_2 (thm_296 NUM__REP_2 a_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (NUM_REP a)) ;)

(; dict ;)

def thm_374 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) => thm_373 a_1 NUM__REP_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (NUM_REP a))) ;)

(; dict ;)

def thm_375 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) => thm_374 a_2 NUM__REP_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ;)

(; dict ;)

def thm_376 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a))) ;)

(; dict ;)

def thm_377 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => hol.PROVE_HYP (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (thm_369 NUM__REP_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => thm_376 NUM__REP_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)) ;)

(; dict ;)

def thm_378 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)))) -> hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)))) => thm_377 NUM__REP_1 hyp_1 a_2.

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_379 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) => thm_378 NUM__REP_2 a_1 hyp_2 (thm_198 a_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (NUM_REP a)) ;)

(; dict ;)

def thm_380 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq hol.ind a_1 HOLLight_2EIND__0) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) => thm_379 a_1 NUM__REP_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((= a) HOLLight.IND_0)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (NUM_REP a))) ;)

(; dict ;)

def thm_381 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.ind a_2 HOLLight_2EIND__0) => thm_380 a_2 NUM__REP_1 hyp_1.

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_382 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_383 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_332 Q_1 P_2) (thm_382 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_384 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_383 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_385 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_386 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_384 Q_3 R_2 P_1 hyp_2 (thm_385 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_387 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_388 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_386 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_387 R_3 Q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (NUM_REP a)) ;)

(; dict ;)

def thm_389 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.eq hol.ind a_1 HOLLight_2EIND__0) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (NUM_REP a)) ;)

(; dict ;)

def thm_390 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => hol.PROVE_HYP (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) (thm_345 NUM__REP_2 a_1 hyp_3) (hyp_4 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => thm_389 a_1 NUM__REP_2 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (NUM_REP a)) ;)

(; dict ;)

def thm_391 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) -> hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) => hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) (thm_381 NUM__REP_2 a_1) (hyp_3 : hol.proof (hol.imp (hol.eq hol.ind a_1 HOLLight_2EIND__0) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) => thm_390 a_1 NUM__REP_2 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (NUM_REP a)) ;)

(; dict ;)

def thm_392 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => hol.PROVE_HYP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1)) (thm_375 NUM__REP_2 a_1) (hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))) (hol.imp (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) (NUM__REP_2 a_1))) => thm_391 a_1 NUM__REP_2 hyp_2 hyp_1).

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_393 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) -> hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4))) (NUM__REP_2 a_3)))) => hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => thm_392 a_1 NUM__REP_2 hyp_2 (thm_369 NUM__REP_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)) ;)

(; dict ;)

def thm_394 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)))) -> hol.proof (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_3 HOLLight_2EIND__0) (NUM__REP_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4))) (NUM__REP_1 a_3)))) => hyp_2 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) => thm_393 a_2 NUM__REP_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a))) ;)

(; dict ;)

def thm_395 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => a_2 : hol.term hol.ind => thm_394 NUM__REP_1 a_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ;)

(; dict ;)

def thm_396 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => thm_395 NUM__REP_1 hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((= a) HOLLight.IND_0)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) (NUM_REP a))))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ;)

(; dict ;)

def thm_397 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.PROP_EXT (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => thm_368 NUM__REP_1 (thm_343 NUM__REP_1 hyp_1)) (hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) => thm_396 NUM__REP_1 (thm_369 NUM__REP_1 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ;)

(; dict ;)

def thm_398 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.TRANS hol.bool (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.eq hol.ind a_2 HOLLight_2EIND__0) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))) (NUM__REP_1 a_2)))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (thm_320 NUM__REP_1) (thm_397 NUM__REP_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_399 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.SYM hol.bool (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (thm_398 NUM__REP_1).

(; Theorem: |- ((= (= (NUM_REP a))) (= (NUM_REP a))) ;)

(; dict ;)

def thm_400 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (NUM__REP_2 a_1)) (hol.eq hol.bool (NUM__REP_2 a_1))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (NUM__REP_2 a_1)).

(; Theorem: |- ((= (\lambda a. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a))) a)) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a_1. ((Data.Bool.==> ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a_1)))) (NUM_REP' a)))) ;)

(; dict ;)

def thm_401 : a_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool ((a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2))) a_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a__1_3))) (NUM__REP_27_2 a_1)))) :=
  a_1 : hol.term hol.ind => hol.BETA_CONV hol.ind hol.bool (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2))) a_1.

(; Theorem: |- ((= ((= (NUM_REP a)) (\lambda a. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a))) a))) ((= (NUM_REP a)) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a_1. ((Data.Bool.==> ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a_1)))) (NUM_REP' a))))) ;)

(; dict ;)

def thm_402 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (NUM__REP_2 a_1) ((a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3))) a_1)) (hol.eq hol.bool (NUM__REP_2 a_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a__1_4))) (NUM__REP_27_3 a_1))))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (NUM__REP_2 a_1)) (hol.eq hol.bool (NUM__REP_2 a_1)) ((a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3))) a_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a__1_4))) (NUM__REP_27_3 a_1))) (thm_400 a_1 NUM__REP_2) (thm_401 a_1).

(; Theorem: |- ((= NUM_REP) \lambda a. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a)))) ;)

(; dict ;)

def thm_403 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hyp_1.

(; Theorem: |- ((= a) a) ;)

(; dict ;)

def thm_404 : a_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind a_1 a_1) :=
  a_1 : hol.term hol.ind => hol.REFL hol.ind a_1.

(; Theorem: |- ((= (NUM_REP a)) (\lambda a. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a))) a)) ;)

(; dict ;)

def thm_405 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.eq hol.bool (NUM__REP_2 a_1) ((a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3))) a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => hol.APP_THM hol.ind hol.bool NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3))) a_1 a_1 (thm_403 NUM__REP_2 hyp_1) (thm_404 a_1).

(; Theorem: |- ((= (NUM_REP a)) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a_1. ((Data.Bool.==> ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a_1)))) (NUM_REP' a)))) ;)

(; dict ;)

def thm_406 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.eq hol.bool (NUM__REP_2 a_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a__1_4))) (NUM__REP_27_3 a_1)))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => hol.EQ_MP (hol.eq hol.bool (NUM__REP_2 a_1) ((a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3))) a_1)) (hol.eq hol.bool (NUM__REP_2 a_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a__1_4))) (NUM__REP_27_3 a_1)))) (thm_402 a_1 NUM__REP_2) (thm_405 a_1 NUM__REP_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (NUM_REP a)) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a_1. ((Data.Bool.==> ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a_1)))) (NUM_REP' a))))) ;)

(; dict ;)

def thm_407 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a__1_4))) (NUM__REP_27_3 a_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => a_2 : hol.term hol.ind => thm_406 a_2 NUM__REP_1 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a_1. ((Data.Bool.==> ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a_1)))) (NUM_REP' a)))) (NUM_REP a)) ;)

(; dict ;)

def thm_408 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a__1_4))) (NUM__REP_27_3 a_2))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => hol.SYM hol.bool (NUM__REP_1 a_2) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a__1_4))) (NUM__REP_27_3 a_2))) (thm_407 NUM__REP_1 hyp_1 a_2).

(; Theorem: |- ((Data.Bool.==> q) r) ;)

(; dict ;)

def thm_409 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_2 r_1) -> hol.proof (hol.imp q_2 r_1) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_2 r_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_410 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_411 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_2) => thm_410 q_2 p_1 hyp_2 (thm_89 p_1 hyp_1).

(; Theorem: |- r ;)

(; dict ;)

def thm_412 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> r_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hyp_3 : hol.proof (hol.imp q_1 r_3) -> hol.proof r_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => r_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof (hol.imp p_2 q_1) => hyp_3 : hol.proof (hol.imp q_1 r_3) => thm_409 r_3 q_1 hyp_3 (thm_411 p_2 q_1 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> p) r) ;)

(; dict ;)

def thm_413 : q_1 : hol.term hol.bool -> r_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 q_1) -> hyp_2 : hol.proof (hol.imp q_1 r_2) -> hol.proof (hol.imp p_3 r_2) :=
  q_1 : hol.term hol.bool => r_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 q_1) => hyp_2 : hol.proof (hol.imp q_1 r_2) => hyp_3 : hol.proof p_3 => thm_412 q_1 p_3 r_2 hyp_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) r)) ((Data.Bool.==> p) r)) ;)

(; dict ;)

def thm_414 : p_1 : hol.term hol.bool -> r_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_1 q_3) -> hol.proof (hol.imp (hol.imp q_3 r_2) (hol.imp p_1 r_2)) :=
  p_1 : hol.term hol.bool => r_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_1 q_3) => hyp_2 : hol.proof (hol.imp q_3 r_2) => thm_413 q_3 r_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) q)) ((Data.Bool.==> ((Data.Bool.==> q) r)) ((Data.Bool.==> p) r))) ;)

(; dict ;)

def thm_415 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.imp p_3 q_2) (hol.imp (hol.imp q_2 r_1) (hol.imp p_3 r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 q_2) => thm_414 p_3 r_1 q_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP' a)))) ;)

(; dict ;)

def thm_416 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hol.proof (hol.imp (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) (hol.imp (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (NUM__REP_27_1 a_3)) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_27_1 a_3)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => (r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => thm_415 r_1 q_2 p_3) (NUM__REP_27_1 a_3) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))).

(; Theorem: |- (Data.Bool.! \lambda NUM_REP. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))))) ;)

(; dict ;)

def thm_417 : hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))))) :=
  hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4))))))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))) ;)

(; dict ;)

def thm_418 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => thm_417 hyp_1 NUM__REP_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))))) ;)

(; dict ;)

def thm_419 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) -> hol.proof (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) => thm_418 NUM__REP_2 hyp_1 NUM__REP_27_1.

(; Theorem: |- ((Data.Bool.==> ((= (NUM_REP a)) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a))))) ((Data.Bool.==> (NUM_REP a)) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a))))) ;)

(; dict ;)

def thm_420 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (NUM__REP_2 a_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_1)))) (hol.imp (NUM__REP_2 a_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_1))))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_275 q_1 p_2) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_1))) (NUM__REP_2 a_1).

(; Theorem: |- ((Data.Bool.==> (NUM_REP a)) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a)))) ;)

(; dict ;)

def thm_421 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.imp (NUM__REP_2 a_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_1)))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => thm_420 a_1 NUM__REP_2 (thm_406 a_1 NUM__REP_2 hyp_1).

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_422 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (NUM__REP_2 a_1) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_2 a_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a))) ;)

(; dict ;)

def thm_423 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (NUM__REP_1 a_2) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (NUM__REP_1 a_2) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => thm_421 a_2 NUM__REP_1 hyp_2 (thm_422 a_2 NUM__REP_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a_1. ((Data.Bool.==> ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a_1)))) (NUM_REP' a)) ;)

(; dict ;)

def thm_424 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (NUM__REP_1 a_2) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) -> hol.proof (hol.imp (hol.forall hol.ind (a__1_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a__1_4))) (NUM__REP_27_3 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_1 a_2) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) => thm_423 NUM__REP_1 a_2 hyp_1 hyp_2 NUM__REP_27_3.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a))) ;)

(; dict ;)

def thm_425 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (NUM__REP_27_1 a_2))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (NUM__REP_27_1 a_2))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (NUM__REP_27_1 a_2))) => hyp_1.

(; Theorem: |- (NUM_REP' a) ;)

(; dict ;)

def thm_426 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (NUM__REP_1 a_2) -> hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) -> hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) -> hol.proof (NUM__REP_27_3 a_2) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (NUM__REP_1 a_2) => hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) => hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) => thm_424 NUM__REP_1 a_2 NUM__REP_27_3 hyp_1 hyp_3 (thm_425 NUM__REP_27_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)) ;)

(; dict ;)

def thm_427 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)))) (NUM__REP_27_1 a_4))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_3 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) -> hol.proof (hol.imp (NUM__REP_3 a_2) (NUM__REP_27_1 a_2)) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)))) (NUM__REP_27_1 a_4))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_3 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) => hyp_3 : hol.proof (NUM__REP_3 a_2) => thm_426 NUM__REP_3 a_2 NUM__REP_27_1 hyp_3 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))) ;)

(; dict ;)

def thm_428 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (NUM__REP_27_1 a_3))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (NUM__REP_27_1 a_3))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => a_3 : hol.term hol.ind => thm_427 NUM__REP_27_1 a_3 NUM__REP_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) ;)

(; dict ;)

def thm_429 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => hyp_2 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) => thm_428 NUM__REP_27_2 NUM__REP_1 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))))) ;)

(; dict ;)

def thm_430 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => thm_429 NUM__REP_1 NUM__REP_27_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))) ;)

(; dict ;)

def thm_431 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) -> hyp_2 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (NUM__REP_27_1 a_3))) -> hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) => hyp_2 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (NUM__REP_27_1 a_3))) => hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => thm_419 NUM__REP_27_1 NUM__REP_2 hyp_1 (thm_430 NUM__REP_2 hyp_3 NUM__REP_27_1 (thm_425 NUM__REP_27_1 hyp_2)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) ;)

(; dict ;)

def thm_432 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) -> hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)))) (NUM__REP_27_1 a_4))) -> hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) -> hol.proof (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) => hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)))) (NUM__REP_27_1 a_4))) => hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) => thm_431 NUM__REP_27_1 NUM__REP_2 hyp_1 hyp_2 hyp_3 a_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP' a))) ;)

(; dict ;)

def thm_433 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) -> hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_2 i_5)))) (NUM__REP_27_2 a_4))) -> hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) -> hol.proof (hol.imp (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3)) (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) (NUM__REP_27_2 a_3))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) => hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_2 i_5)))) (NUM__REP_27_2 a_4))) => hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) => thm_416 NUM__REP_27_2 NUM__REP_1 a_3 (thm_432 NUM__REP_27_2 NUM__REP_1 a_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)) ;)

(; dict ;)

def thm_434 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (NUM__REP_27_1 a_3))) -> hol.proof (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (NUM__REP_27_1 a_2)) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_1 i_4)))) (NUM__REP_27_1 a_3))) => thm_425 NUM__REP_27_1 hyp_1 a_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP' a)) ;)

(; dict ;)

def thm_435 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> a_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) -> hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)))) (NUM__REP_27_1 a_4))) -> hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) -> hol.proof (hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (NUM__REP_27_1 a_3)) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => a_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) => hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_1 i_5)))) (NUM__REP_27_1 a_4))) => hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) => thm_433 NUM__REP_2 NUM__REP_27_1 a_3 hyp_1 hyp_2 hyp_3 (thm_434 NUM__REP_27_1 a_3 hyp_2).

(; Theorem: |- (NUM_REP' a) ;)

(; dict ;)

def thm_436 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) -> hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) -> hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) -> hyp_4 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) -> hol.proof (NUM__REP_27_3 a_2) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) => hyp_2 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) => hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) => hyp_4 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) => thm_435 NUM__REP_27_3 NUM__REP_1 a_2 hyp_1 hyp_2 hyp_3 (thm_345 NUM__REP_1 a_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a)) ;)

(; dict ;)

def thm_437 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) -> hol.proof (hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_4 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (NUM__REP_4 a_6) (NUM__REP_27_5 a_6))) (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_4 i_7)))) (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_4 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_5 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_6 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_6 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_7 : hol.term hol.ind => hol.and (hol.eq hol.ind a_6 (HOLLight_2EIND__SUC i_7)) (NUM__REP_27_5 i_7)))) (NUM__REP_27_5 a_6))) (NUM__REP_27_5 a_4)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) => hyp_4 : hol.proof (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) => thm_436 NUM__REP_1 a_2 NUM__REP_27_3 hyp_1 hyp_4 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a))) ;)

(; dict ;)

def thm_438 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) => NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => thm_437 NUM__REP_1 a_2 NUM__REP_27_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (NUM_REP a) ;)

(; dict ;)

def thm_439 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) -> hol.proof (NUM__REP_2 a_1) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => hol.EQ_MP (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_1))) (NUM__REP_2 a_1) (thm_408 NUM__REP_2 a_1 hyp_2) (thm_438 NUM__REP_2 a_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)) ;)

(; dict ;)

def thm_440 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) => thm_439 a_2 NUM__REP_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a))) ;)

(; dict ;)

def thm_441 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => a_2 : hol.term hol.ind => thm_440 NUM__REP_1 a_2 hyp_1 hyp_2.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))))) ;)

(; dict ;)

def thm_442 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))))) ;)

(; dict ;)

def thm_443 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.PROVE_HYP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.eq hol.bool (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))))) (thm_441 NUM__REP_1 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) => thm_442 NUM__REP_1 hyp_3).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ;)

(; dict ;)

def thm_444 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ;)

(; dict ;)

def thm_445 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.PROVE_HYP (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) (thm_430 NUM__REP_1 hyp_1) (hyp_2 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) => thm_444 NUM__REP_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.==> (NUM_REP a))) (Data.Bool.==> (NUM_REP a))) ;)

(; dict ;)

def thm_446 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (NUM__REP_2 a_1)) (hol.imp (NUM__REP_2 a_1))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (NUM__REP_2 a_1)).

(; Theorem: |- ((= (= (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) (= (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) ;)

(; dict ;)

def thm_447 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)).

(; Theorem: |- ((= (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ;)

(; dict ;)

def thm_448 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.BETA_CONV hol.ind hol.bool (a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1.

(; Theorem: |- ((= ((= (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) ((= (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_449 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) (thm_447 a_1 NUM__REP_2) (thm_448 a_1 NUM__REP_2).

(; Theorem: |- ((= \lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) \lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ;)

(; dict ;)

def thm_450 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_2 : hol.term hol.ind => hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (a_2 : hol.term hol.ind => hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL (hol.arr hol.ind hol.bool) (a_2 : hol.term hol.ind => hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))).

(; Theorem: |- ((= (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) ;)

(; dict ;)

def thm_451 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.ind hol.bool (a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) (a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1 a_1 (thm_450 NUM__REP_2) (thm_404 a_1).

(; Theorem: |- ((= ((Data.Bool.==> (NUM_REP a)) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) ((Data.Bool.==> (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_452 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (NUM__REP_2 a_1) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) (hol.imp (NUM__REP_2 a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool hol.bool (hol.imp (NUM__REP_2 a_1)) (hol.imp (NUM__REP_2 a_1)) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) (thm_446 a_1 NUM__REP_2) (hol.EQ_MP (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) (hol.eq hol.bool ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))))) (thm_449 a_1 NUM__REP_2) (thm_451 a_1 NUM__REP_2)).

(; Theorem: |- ((= \lambda a. ((Data.Bool.==> (NUM_REP a)) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) \lambda a. ((Data.Bool.==> (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_453 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)) (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.ABS_THM hol.ind hol.bool (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)) (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))) (a_2 : hol.term hol.ind => thm_452 a_2 NUM__REP_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ;)

(; dict ;)

def thm_454 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)) (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))) thm_72 (thm_453 NUM__REP_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)))) ;)

(; dict ;)

def thm_455 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.imp (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => thm_430 NUM__REP_1 hyp_1 (a_2 : hol.term hol.ind => hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i)))))) (Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i)))))) ;)

(; dict ;)

def thm_456 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3))))) (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_457 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)) (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3))))) (hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3))))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (thm_456 NUM__REP_1 a_2) (thm_448 a_2 NUM__REP_1).

(; Theorem: |- ((= \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_458 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.ABS_THM hol.ind hol.bool (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))) (a_2 : hol.term hol.ind => thm_457 NUM__REP_1 a_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ;)

(; dict ;)

def thm_459 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))) thm_72 (thm_458 NUM__REP_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)))) ;)

(; dict ;)

def thm_460 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.SYM hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (thm_459 NUM__REP_1).

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i)))))))) ;)

(; dict ;)

def thm_461 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) ((a_5 : hol.term hol.ind => hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_1 i_6)))) i_4)))) (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => thm_417 hyp_1 (a_2 : hol.term hol.ind => hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (\lambda a_1. ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a_1. ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i_1. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i_1))) (NUM_REP i_1)))) i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ;)

(; dict ;)

def thm_462 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hol.proof (hol.imp (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp ((a__1_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a__1_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a__1_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i__1_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i__1_5)) (NUM__REP_1 i__1_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => thm_461 NUM__REP_1 hyp_1 NUM__REP_1.

(; Theorem: |- ((= (Data.Bool.==> (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) (Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_463 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) (hol.imp (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) thm_126 (thm_448 a_1 NUM__REP_2).

(; Theorem: |- ((= (NUM_REP a)) (NUM_REP a)) ;)

(; dict ;)

def thm_464 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (NUM__REP_2 a_1) (NUM__REP_2 a_1)) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL hol.bool (NUM__REP_2 a_1).

(; Theorem: |- ((= ((Data.Bool.==> (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (NUM_REP a))) ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a))) ;)

(; dict ;)

def thm_465 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1) (NUM__REP_2 a_1)) (hol.imp (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) (NUM__REP_2 a_1))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool hol.bool (hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_2 i_4)))) a_1)) (hol.imp (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))))) (NUM__REP_2 a_1) (NUM__REP_2 a_1) (thm_463 a_1 NUM__REP_2) (thm_464 a_1 NUM__REP_2).

(; Theorem: |- ((= \lambda a. ((Data.Bool.==> (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (NUM_REP a))) \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a))) ;)

(; dict ;)

def thm_466 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_2 : hol.term hol.ind => hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.ABS_THM hol.ind hol.bool (a_2 : hol.term hol.ind => hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => thm_465 a_2 NUM__REP_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ;)

(; dict ;)

def thm_467 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (a_2 : hol.term hol.ind => hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2)) (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2)) thm_72 (thm_466 NUM__REP_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (NUM_REP a)))) ;)

(; dict ;)

def thm_468 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.SYM hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (thm_467 NUM__REP_1).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a)) (NUM_REP a))) ;)

(; dict ;)

def thm_469 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2) (NUM__REP_1 a_2))) (thm_468 NUM__REP_1) (thm_441 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a_1. ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i_1. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i_1))) (NUM_REP i_1)))) i))))) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_470 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a__1_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i__1_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i__1_5)) (NUM__REP_1 i__1_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => thm_462 NUM__REP_1 hyp_1 (thm_469 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) i))))) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) ;)

(; dict ;)

def thm_471 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a__1_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a__1_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i__1_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_4 (HOLLight_2EIND__SUC i__1_5)) (NUM__REP_1 i__1_5)))) i_3)))) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) ((a_4 : hol.term hol.ind => hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_1 i_5)))) i_3)))) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2))) (thm_460 NUM__REP_1) (thm_470 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (\lambda a. ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) a))) ;)

(; dict ;)

def thm_472 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => thm_455 NUM__REP_1 hyp_2 (thm_471 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_473 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) ((a_3 : hol.term hol.ind => hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_1 i_4)))) a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (thm_454 NUM__REP_1) (thm_472 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ;)

(; dict ;)

def thm_474 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.imp (NUM__REP_2 a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => thm_473 NUM__REP_2 hyp_1 hyp_2 a_1.

(; Theorem: |- ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))) ;)

(; dict ;)

def thm_475 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> a_2 : hol.term hol.ind -> hyp_1 : hol.proof (NUM__REP_1 a_2) -> hyp_2 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) -> hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => a_2 : hol.term hol.ind => hyp_1 : hol.proof (NUM__REP_1 a_2) => hyp_2 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) => hyp_3 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => thm_474 a_2 NUM__REP_1 hyp_2 hyp_3 (thm_422 a_2 NUM__REP_1 hyp_1).

(; Theorem: |- ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) ;)

(; dict ;)

def thm_476 : a_1 : hol.term hol.ind -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) -> hol.proof (hol.eq hol.bool (NUM__REP_2 a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3))))) :=
  a_1 : hol.term hol.ind => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_3 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (NUM__REP_3 a_5) (NUM__REP_27_4 a_5))) (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_3 i_6)))) (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_2 (a_3 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_4 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_5 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_5 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_6 : hol.term hol.ind => hol.and (hol.eq hol.ind a_5 (HOLLight_2EIND__SUC i_6)) (NUM__REP_27_4 i_6)))) (NUM__REP_27_4 a_5))) (NUM__REP_27_4 a_3)))) => hol.PROP_EXT (NUM__REP_2 a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) (hyp_3 : hol.proof (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_3)) (NUM__REP_2 i_3)))) => thm_439 a_1 NUM__REP_2 hyp_1 hyp_2 hyp_3) (hyp_3 : hol.proof (NUM__REP_2 a_1) => thm_475 NUM__REP_2 a_1 hyp_3 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))) ;)

(; dict ;)

def thm_477 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => a_2 : hol.term hol.ind => thm_476 a_2 NUM__REP_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ;)

(; dict ;)

def thm_478 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (thm_445 NUM__REP_1 hyp_2) (thm_477 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a)))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ;)

(; dict ;)

def thm_479 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) (thm_443 NUM__REP_1 hyp_1 hyp_2) (thm_478 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a))) ;)

(; dict ;)

def thm_480 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))) (NUM_REP a))) ;)

(; dict ;)

def thm_481 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.PROVE_HYP (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (thm_479 NUM__REP_1 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.and (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) => thm_480 NUM__REP_1 hyp_3).

(; Theorem: |- ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_482 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))) (NUM__REP_1 a_2))) (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (thm_399 NUM__REP_1) (thm_481 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ((Data.Bool./\ ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))))) ;)

(; dict ;)

def thm_483 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.and (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ((Data.Bool./\ ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))))) ;)

(; dict ;)

def thm_484 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.and (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.PROVE_HYP (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.eq hol.bool (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.and (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))))) (thm_482 NUM__REP_1 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) => thm_483 NUM__REP_1 hyp_3).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_485 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (NUM__REP_27_1 a_2))) (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2)))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => thm_399 NUM__REP_1) NUM__REP_27_1.

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a))))) (Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i))))))) ;)

(; dict ;)

def thm_486 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (NUM__REP_27_1 a_2)))) (hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_27_1 i_3)))) (NUM__REP_27_1 a_2))) (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) thm_126 (thm_485 NUM__REP_27_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))) ;)

(; dict ;)

def thm_487 : NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3)))) :=
  NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.REFL hol.bool (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_2 a_3) (NUM__REP_27_1 a_3))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))))) ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))))) ;)

(; dict ;)

def thm_488 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3)))) (hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3)))) (hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))) (thm_486 NUM__REP_27_2) (thm_487 NUM__REP_27_2 NUM__REP_1).

(; Theorem: |- ((= \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))))) \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))))) ;)

(; dict ;)

def thm_489 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3)))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.ABS_THM (hol.arr hol.ind hol.bool) hol.bool (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3)))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3)))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => thm_488 NUM__REP_1 NUM__REP_27_2).

(; Theorem: |- ((= (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) ;)

(; dict ;)

def thm_490 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3)))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hol.APP_THM (hol.arr (hol.arr hol.ind hol.bool) hol.bool) hol.bool (hol.forall (hol.arr hol.ind hol.bool)) (hol.forall (hol.arr hol.ind hol.bool)) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3)))) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3)))) thm_64 (thm_489 NUM__REP_1).

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))))) ;)

(; dict ;)

def thm_491 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))))) ;)

(; dict ;)

def thm_492 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.PROVE_HYP (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (thm_478 NUM__REP_1 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) => thm_491 NUM__REP_1 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a))))) ;)

(; dict ;)

def thm_493 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a_3))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (thm_490 NUM__REP_1) (thm_492 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ;)

(; dict ;)

def thm_494 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ;)

(; dict ;)

def thm_495 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.PROVE_HYP (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) (thm_493 NUM__REP_1 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) => thm_494 NUM__REP_1 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))) ;)

(; dict ;)

def thm_496 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (thm_495 NUM__REP_1 hyp_1 hyp_2) (thm_477 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ;)

(; dict ;)

def thm_497 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) -> hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.and (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => hyp_2 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.EQ_MP (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))) (hol.and (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) (thm_484 NUM__REP_1 hyp_1 hyp_2) (thm_496 NUM__REP_1 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i)))))))) ;)

(; dict ;)

def thm_498 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) -> hol.proof (hol.and (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => hol.PROVE_HYP (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) (hol.and (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3)))))))) (hol.EQ_MP (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) thm_67 thm_190) (hyp_2 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_2 : hol.term (hol.arr hol.ind hol.bool) => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (NUM__REP_2 a_4) (NUM__REP_27_3 a_4))) (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_2 i_5)))) (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5))))))))) => thm_497 NUM__REP_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= NUM_REP) \lambda a. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a)))) (NUM_REP' a))))) ((Data.Bool./\ ((Data.Bool./\ (NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP i)) (NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (NUM_REP i))))))))) ;)

(; dict ;)

def thm_499 : NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.imp (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) (hol.and (hol.and (NUM__REP_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_1 i_2) (NUM__REP_1 (HOLLight_2EIND__SUC i_2))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_2 HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (NUM__REP_27_2 i_3) (NUM__REP_27_2 (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (NUM__REP_1 a_3) (NUM__REP_27_2 a_3))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.eq hol.bool (NUM__REP_1 a_2) (hol.or (hol.eq hol.ind a_2 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_3 : hol.term hol.ind => hol.and (hol.eq hol.ind a_2 (HOLLight_2EIND__SUC i_3)) (NUM__REP_1 i_3))))))))) :=
  NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => thm_498 NUM__REP_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= HOLLight.NUM_REP) \lambda a. (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> (Data.Bool.! \lambda a_1. ((Data.Bool.==> ((Data.Bool.\/ ((= a_1) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a_1) (HOLLight.IND_SUC i))) (NUM_REP' i))))) (NUM_REP' a_1)))) (NUM_REP' a))))) ((Data.Bool./\ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (HOLLight.NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (HOLLight.NUM_REP i))))))))) ;)

(; dict ;)

def thm_500 : hol.proof (hol.imp (hol.eq (hol.arr hol.ind hol.bool) HOLLight_2ENUM__REP (a_1 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_2 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a__1_3 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a__1_3 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_4 : hol.term hol.ind => hol.and (hol.eq hol.ind a__1_3 (HOLLight_2EIND__SUC i_4)) (NUM__REP_27_2 i_4)))) (NUM__REP_27_2 a__1_3))) (NUM__REP_27_2 a_1)))) (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))))) :=
  (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) NUM__REP_1 (a_2 : hol.term hol.ind => hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_3 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.forall hol.ind (a_4 : hol.term hol.ind => hol.imp (hol.or (hol.eq hol.ind a_4 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_5 : hol.term hol.ind => hol.and (hol.eq hol.ind a_4 (HOLLight_2EIND__SUC i_5)) (NUM__REP_27_3 i_5)))) (NUM__REP_27_3 a_4))) (NUM__REP_27_3 a_2)))) => (NUM__REP_1 : hol.term (hol.arr hol.ind hol.bool) => thm_499 NUM__REP_1) NUM__REP_1 (thm_403 NUM__REP_1 hyp_1)) HOLLight_2ENUM__REP.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (HOLLight.NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (HOLLight.NUM_REP i)))))))) ;)

(; dict ;)

def thm_501 : hol.proof (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) :=
  thm_500 thm_63.

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_502 : hyp_1 : hol.proof (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) -> hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) :=
  hyp_1 : hol.proof (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_503 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) :=
  hol.PROVE_HYP (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) thm_501 (hyp_1 : hol.proof (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) => thm_502 hyp_1).

(; Theorem: |- (HOLLight.NUM_REP HOLLight.IND_0) ;)

(; dict ;)

def thm_504 : hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (HOLLight_2ENUM__REP HOLLight_2EIND__0) :=
  hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (HOLLight_2ENUM__REP HOLLight_2EIND__0) hyp_1.

(; Theorem: |- (HOLLight.NUM_REP HOLLight.IND_0) ;)

(; dict ;)

def thm_505 : hol.proof (HOLLight_2ENUM__REP HOLLight_2EIND__0) :=
  hol.PROVE_HYP (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (HOLLight_2ENUM__REP HOLLight_2EIND__0) thm_503 (hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => thm_504 hyp_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.dest_num a))) a) ;)

(; dict ;)

def thm_506 : a_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1) :=
  a_1 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.eq Number_2ENatural_2Enatural ((a_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_1) ((a_2 : hol.term Number_2ENatural_2Enatural => a_2) a_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1) (hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural ((a_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1))) ((a_2 : hol.term Number_2ENatural_2Enatural => a_2) a_1) a_1 (hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) ((a_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_1) (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) (hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural)) (hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_1)) (hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => a_2) a_1)) (hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) (a_2 : hol.term Number_2ENatural_2Enatural => a_2) a_1 a_1 thm_9 (hol.REFL Number_2ENatural_2Enatural a_1)).

(; Theorem: |- ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) ;)

(; dict ;)

def thm_507 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) :=
  r_1 : hol.term hol.ind => hol.SYM hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1) (hol.EQ_MP (hol.eq hol.bool ((r_2 : hol.term hol.ind => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2) r_1) ((r_2 : hol.term hol.ind => HOLLight_2ENUM__REP r_2) r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((r_2 : hol.term hol.ind => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2) r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) ((r_2 : hol.term hol.ind => HOLLight_2ENUM__REP r_2) r_1) (HOLLight_2ENUM__REP r_1) (hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((r_2 : hol.term hol.ind => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2) r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool)) (hol.BETA_CONV hol.ind hol.bool (r_2 : hol.term hol.ind => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2) r_1)) (hol.BETA_CONV hol.ind hol.bool (r_2 : hol.term hol.ind => HOLLight_2ENUM__REP r_2) r_1)) (hol.APP_THM hol.ind hol.bool (r_2 : hol.term hol.ind => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2) (r_2 : hol.term hol.ind => HOLLight_2ENUM__REP r_2) r_1 r_1 thm_8 (hol.REFL hol.ind r_1))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_508 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural).

(; Theorem: |- ((= Data.Bool.~) Data.Bool.~) ;)

(; dict ;)

def thm_509 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not hol.not) :=
  hol.REFL (hol.arr hol.bool hol.bool) hol.not.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_510 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural).

(; Theorem: |- ((= Number.Natural.suc) \lambda _1912. (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num _1912)))) ;)

(; dict ;)

def thm_511 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Esuc (__1912_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_1)))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Esuc.

(; Theorem: |- ((= ((= (Number.Natural.suc n)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (Number.Natural.suc n)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_512 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))).

(; Theorem: |- ((= ((= (Number.Natural.suc n)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (Number.Natural.suc n)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_513 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (thm_512 n_1) (thm_512 n_1).

(; Theorem: |- ((= _1912) _1912) ;)

(; dict ;)

def thm_514 : __1912_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __1912_1 __1912_1) :=
  __1912_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __1912_1.

(; Theorem: |- ((= (Number.Natural.suc _1912)) (\lambda _1912. (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num _1912))) _1912)) ;)

(; dict ;)

def thm_515 : __1912_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc __1912_1) ((__1912_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_2))) __1912_1)) :=
  __1912_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural Number_2ENatural_2Esuc (__1912_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_2))) __1912_1 __1912_1 thm_511 (thm_514 __1912_1).

(; Theorem: |- ((= (\lambda _1912. (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num _1912))) _1912)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num _1912)))) ;)

(; dict ;)

def thm_516 : __1912_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural ((__1912_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_2))) __1912_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_1)))) :=
  __1912_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (__1912_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_2))) __1912_1.

(; Theorem: |- ((= (Number.Natural.suc _1912)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num _1912)))) ;)

(; dict ;)

def thm_517 : __1912_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc __1912_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_1)))) :=
  __1912_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Esuc __1912_1) ((__1912_2 : hol.term Number_2ENatural_2Enatural => HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_2))) __1912_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_1))) (thm_515 __1912_1) (thm_516 __1912_1).

(; Theorem: |- (Data.Bool.! \lambda _1912. ((= (Number.Natural.suc _1912)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num _1912))))) ;)

(; dict ;)

def thm_518 : hol.proof (hol.forall Number_2ENatural_2Enatural (__1912_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc __1912_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num __1912_1))))) :=
  __1912_1 : hol.term Number_2ENatural_2Enatural => thm_517 __1912_1.

(; Theorem: |- ((= (Number.Natural.suc n)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_519 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (__1912_1 : hol.term Number_2ENatural_2Enatural => thm_518 __1912_1) n_1.

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_520 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_521 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.SYM Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_520 n_1).

(; Theorem: |- ((= (Number.Natural.suc n)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_522 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_519 n_1) (thm_521 n_1).

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Number.Natural.suc n)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_523 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => thm_522 n_1.

(; Theorem: |- ((= (= (Number.Natural.suc n))) (= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_524 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) thm_510 (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (thm_513 n_1) (thm_523 n_1)).

(; Theorem: |- ((= Number.Natural.zero) (HOLLight.mk_num HOLLight.IND_0)) ;)

(; dict ;)

def thm_525 : hol.proof (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) :=
  hol.REFL Number_2ENatural_2Enatural Number_2ENatural_2Ezero.

(; Theorem: |- ((= ((= Number.Natural.zero) (HOLLight.mk_num HOLLight.IND_0))) ((= Number.Natural.zero) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_526 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)).

(; Theorem: |- ((= ((= Number.Natural.zero) (HOLLight.mk_num HOLLight.IND_0))) ((= Number.Natural.zero) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_527 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) thm_526 thm_526.

(; Theorem: |- ((= ((= (Number.Natural.suc n)) Number.Natural.zero)) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_528 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0) (thm_524 n_1) (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) thm_527 thm_525).

(; Theorem: |- ((= (Data.Bool.~ ((= (Number.Natural.suc n)) Number.Natural.zero))) (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_529 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero)) (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) thm_509 (thm_528 n_1).

(; Theorem: |- ((= \lambda n. (Data.Bool.~ ((= (Number.Natural.suc n)) Number.Natural.zero))) \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_530 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) (n_1 : hol.term Number_2ENatural_2Enatural => thm_529 n_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. (Data.Bool.~ ((= (Number.Natural.suc n)) Number.Natural.zero)))) (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))) ;)

(; dict ;)

def thm_531 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) thm_508 thm_530.

(; Theorem: |- ((= (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))) (Data.Bool.! \lambda n. (Data.Bool.~ ((= (Number.Natural.suc n)) Number.Natural.zero)))) ;)

(; dict ;)

def thm_532 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero)))) :=
  hol.SYM hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) thm_531.

(; Theorem: |- ((= ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ;)

(; dict ;)

def thm_533 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false))) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)).

(; Theorem: |- ((= ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ;)

(; dict ;)

def thm_534 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (thm_533 p_1) (thm_533 p_1).

(; Theorem: |- ((= (= p)) (= p)) ;)

(; dict ;)

def thm_535 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool p_1) (hol.eq hol.bool p_1)) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_536 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_537 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_536 t_1) (thm_536 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_538 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_539 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_538 thm_538.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_540 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_85 thm_539.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_541 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_542 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_541 t_1) (thm_541 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_543 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_10 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_544 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_545 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_542 t_1) (thm_543 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_544 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_546 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_547 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_546 t_1) (thm_546 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_548 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_11 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_549 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_550 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_547 t_1) (thm_548 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_549 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_551 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_552 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_551 t_1) (thm_551 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_553 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_12 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_554 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_555 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_552 t_1) (thm_553 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_554 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_556 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_557 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_556 t_1) (thm_556 t_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_558 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_559 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_558 thm_558.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_560 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_85 thm_559.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_561 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_562 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_173 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_563 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_13 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_564 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_562 t_1) (thm_563 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_565 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_561 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_556 t_1) (thm_564 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_566 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_567 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_565 t_1) thm_566.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_568 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_567 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_569 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_568 t_1) thm_566.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_570 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_571 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_557 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_560 thm_569 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_570 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_572 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_14 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_573 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_571 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_536 t_1) (thm_572 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_574 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_555 t_1) (thm_573 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_575 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_550 t_1) (thm_574 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_576 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_545 t_1) (thm_575 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_577 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_576 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_578 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_579 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_540 thm_577 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_578 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_580 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_581 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_579 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => thm_580 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_582 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_583 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_581 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => thm_582 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_584 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_585 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_583 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) => thm_584 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F)) (Data.Bool.~ (Data.Bool.~ p))) ;)

(; dict ;)

def thm_586 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) hol.false) (hol.not (hol.not p_1))) :=
  p_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_537 t_1) (thm_585 t_1)) (hol.not p_1).

(; Theorem: |- ((= ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ((= p) (Data.Bool.~ (Data.Bool.~ p)))) ;)

(; dict ;)

def thm_587 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.not (hol.not p_1)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool p_1) (hol.eq hol.bool p_1) (hol.imp (hol.not p_1) hol.false) (hol.not (hol.not p_1)) (thm_535 p_1) (thm_586 p_1).

(; Theorem: |- ((= ((= p) (Data.Bool.~ (Data.Bool.~ p)))) ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ;)

(; dict ;)

def thm_588 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false))) :=
  p_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (thm_587 p_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_589 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_590 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (thm_589 t_1) (thm_589 t_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)))) ;)

(; dict ;)

def thm_591 : hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) :=
  hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)))) ;)

(; dict ;)

def thm_592 : hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) :=
  hol.PROVE_HYP (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) thm_15 (hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) => thm_591 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_593 : hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_594 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.PROVE_HYP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) thm_16 (hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => thm_593 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_595 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) thm_594 thm_17.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_596 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.EQ_MP (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) thm_592 thm_595.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_597 : hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_598 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  hol.PROVE_HYP (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) thm_596 (hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) => thm_597 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ t))) t) ;)

(; dict ;)

def thm_599 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) :=
  t_1 : hol.term hol.bool => thm_598 t_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ p))) p) ;)

(; dict ;)

def thm_600 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not p_1)) p_1) :=
  p_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (thm_590 t_1) (thm_599 t_1)) p_1.

(; Theorem: |- ((= ((= p) (Data.Bool.~ (Data.Bool.~ p)))) ((= p) p)) ;)

(; dict ;)

def thm_601 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (hol.eq hol.bool p_1 p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool p_1) (hol.eq hol.bool p_1) (hol.not (hol.not p_1)) p_1 (thm_535 p_1) (thm_600 p_1).

(; Theorem: |- ((= ((= p) p)) Data.Bool.T) ;)

(; dict ;)

def thm_602 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 p_1) hol.true) :=
  p_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_316 x_1) p_1.

(; Theorem: |- ((= ((= p) (Data.Bool.~ (Data.Bool.~ p)))) Data.Bool.T) ;)

(; dict ;)

def thm_603 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) hol.true) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (hol.eq hol.bool p_1 p_1) hol.true (thm_601 p_1) (thm_602 p_1).

(; Theorem: |- ((= Data.Bool.T) ((= p) (Data.Bool.~ (Data.Bool.~ p)))) ;)

(; dict ;)

def thm_604 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool p_1 (hol.not (hol.not p_1)))) :=
  p_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) hol.true (thm_603 p_1).

(; Theorem: |- ((= p) (Data.Bool.~ (Data.Bool.~ p))) ;)

(; dict ;)

def thm_605 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (thm_604 p_1) thm_4.

(; Theorem: |- ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F)) ;)

(; dict ;)

def thm_606 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (thm_588 p_1) (thm_605 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) Data.Bool.F)) ;)

(; dict ;)

def thm_607 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) hol.false)) :=
  (p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (thm_534 p_1) (thm_606 p_1)) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) Data.Bool.F)) (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))) ;)

(; dict ;)

def thm_608 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) hol.false) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) :=
  hol.SYM hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) hol.false) thm_607.

(; Theorem: |- (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))) ;)

(; dict ;)

def thm_609 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_610 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) :=
  hol.REFL hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_611 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) :=
  hol.SYM hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) thm_610.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))))) ;)

(; dict ;)

def thm_612 : hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))))) :=
  hol.REFL hol.bool (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))))) ;)

(; dict ;)

def thm_613 : hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))))) :=
  hol.TRANS hol.bool (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) thm_612 thm_612.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_614 : hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) -> hol.proof (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) :=
  hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_615 : hyp_1 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) -> hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) :=
  hyp_1 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_616 : hyp_1 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) -> hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) -> hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) :=
  hyp_1 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) => hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) => thm_614 hyp_2 (thm_615 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_617 : hyp_1 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) -> hol.proof (hol.imp (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) :=
  hyp_1 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) => hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) => thm_616 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))))) ;)

(; dict ;)

def thm_618 : hol.proof (hol.imp (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))))) :=
  hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) => hyp_2 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) => thm_617 hyp_2 (thm_614 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_619 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) :=
  hyp_1 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) => thm_615 hyp_1.

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))))) (Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))))) ;)

(; dict ;)

def thm_620 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))))).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))))) (Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))))) ;)

(; dict ;)

def thm_621 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_622 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a)))) (Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a)))) ;)

(; dict ;)

def thm_623 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))) ;)

(; dict ;)

def thm_624 : hol.proof (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))) :=
  (t_1 : hol.term hol.bool => thm_572 t_1) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))))) ;)

(; dict ;)

def thm_625 : hol.proof (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))) :=
  hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1))) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))) thm_623 thm_624.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))) ;)

(; dict ;)

def thm_626 : hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))) :=
  hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))) thm_622 thm_625.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))))))) ;)

(; dict ;)

def thm_627 : hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) :=
  hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))) thm_621 thm_626.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))))) ;)

(; dict ;)

def thm_628 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))))) :=
  hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))) thm_620 thm_627.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))))) ;)

(; dict ;)

def thm_629 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))))) :=
  hol.REFL hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))))) ;)

(; dict ;)

def thm_630 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))))) :=
  hol.TRANS hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) thm_628 thm_629.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))))) ;)

(; dict ;)

def thm_631 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))))) :=
  hol.TRANS hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) thm_630 thm_629.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))))) ;)

(; dict ;)

def thm_632 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))))) :=
  hol.TRANS hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) thm_631 thm_629.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))))) ;)

(; dict ;)

def thm_633 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))))) :=
  hol.TRANS hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) thm_632 thm_629.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_634 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) :=
  hol.SYM hol.bool (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) thm_633.

(; Theorem: |- ((= (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) ;)

(; dict ;)

def thm_635 : x_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) :=
  x_1 : hol.term hol.ind => hol.REFL hol.bool (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) ;)

(; dict ;)

def thm_636 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) :=
  hol.ABS_THM hol.ind hol.bool (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) (x_1 : hol.term hol.ind => thm_635 x_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ;)

(; dict ;)

def thm_637 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) thm_72 thm_636.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ;)

(; dict ;)

def thm_638 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) :=
  hol.TRANS hol.bool (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) thm_637 thm_637.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) ;)

(; dict ;)

def thm_639 : hyp_1 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_1.

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.dest_num a))) a)) ((= (HOLLight.mk_num (HOLLight.dest_num a))) a)) ;)

(; dict ;)

def thm_640 : a_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) :=
  a_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1).

(; Theorem: |- ((= \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a)) \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a)) ;)

(; dict ;)

def thm_641 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1) (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1) (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1) (a_1 : hol.term Number_2ENatural_2Enatural => thm_640 a_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ;)

(; dict ;)

def thm_642 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1) (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1) thm_508 thm_641.

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ;)

(; dict ;)

def thm_643 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1))) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) thm_642 thm_642.

(; Theorem: |- (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a)) ;)

(; dict ;)

def thm_644 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) -> hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) Data.Bool.F)) ;)

(; dict ;)

def thm_645 : hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (x_1 : hol.term Number_2ENatural_2Enatural => hol.imp ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) x_1) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) hol.false)) :=
  (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_283 A Q_1 P_2) Number_2ENatural_2Enatural hol.false (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)).

(; Theorem: |- ((= (= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_646 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) thm_510 (thm_520 n_1).

(; Theorem: |- ((= HOLLight.mk_num) HOLLight.mk_num) ;)

(; dict ;)

def thm_647 : hol.proof (hol.eq (hol.arr hol.ind Number_2ENatural_2Enatural) HOLLight_2Emk__num HOLLight_2Emk__num) :=
  hol.REFL (hol.arr hol.ind Number_2ENatural_2Enatural) HOLLight_2Emk__num.

(; Theorem: |- ((= (HOLLight.mk_num HOLLight.IND_0)) (HOLLight.mk_num HOLLight.IND_0)) ;)

(; dict ;)

def thm_648 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) (HOLLight_2Emk__num HOLLight_2EIND__0)) :=
  hol.APP_THM hol.ind Number_2ENatural_2Enatural HOLLight_2Emk__num HOLLight_2Emk__num HOLLight_2EIND__0 HOLLight_2EIND__0 thm_647 thm_194.

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_649 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Emk__num HOLLight_2EIND__0) (HOLLight_2Emk__num HOLLight_2EIND__0) (thm_646 n_1) thm_648.

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)) ;)

(; dict ;)

def thm_650 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_651 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_652 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_651 p_1) (thm_651 p_1).

(; Theorem: |- ((= (= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p))) (= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p))) ;)

(; dict ;)

def thm_653 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)).

(; Theorem: |- ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) Data.Bool.F)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_654 : hol.proof (hol.eq hol.bool ((__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1) hol.false) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) :=
  hol.BETA_CONV hol.bool hol.bool (__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1) hol.false.

(; Theorem: |- ((= ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) Data.Bool.F))) ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_655 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (thm_653 p_1) thm_654.

(; Theorem: |- ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_656 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1.

(; Theorem: |- ((= (= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p))) (= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p))) ;)

(; dict ;)

def thm_657 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) thm_561 (thm_656 p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_658 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false).

(; Theorem: |- ((= ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F))) ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_659 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (thm_657 p_1) thm_658.

(; Theorem: |- ((= ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) Data.Bool.F))) ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_660 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) (thm_655 p_1) (thm_659 p_1).

(; Theorem: |- ((= \lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618)) \lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618)) ;)

(; dict ;)

def thm_661 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1) (__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1).

(; Theorem: |- ((= p) Data.Bool.F) ;)

(; dict ;)

def thm_662 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool p_1 hol.false) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) Data.Bool.F)) ;)

(; dict ;)

def thm_663 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) (__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1 hol.false thm_661 (thm_662 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_664 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) (thm_660 p_1) (thm_663 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_665 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (thm_664 p_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_666 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_667 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_666 t_1) (thm_666 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_668 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_669 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_668 thm_668.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_670 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_85 thm_669.

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_671 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_672 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_671 t_1) (thm_671 t_1).

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_673 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_18 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_674 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_675 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_672 t_1) (thm_673 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => thm_674 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_676 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_677 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_676 t_1) (thm_676 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_678 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_19 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_679 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_680 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_677 t_1) (thm_678 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => thm_679 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_681 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_682 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_681 t_1) (thm_681 t_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_683 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_20 t_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_684 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_685 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_682 t_1) (thm_683 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => thm_684 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_686 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_21 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_687 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_685 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_666 t_1) (thm_686 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_688 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (thm_680 t_1) (thm_687 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_689 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (thm_675 t_1) (thm_688 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_690 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => thm_689 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_691 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_692 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) thm_670 thm_690 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => thm_691 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_693 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_694 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_692 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => thm_693 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_695 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_696 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_694 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => thm_695 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) (Data.Bool.~ ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_697 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.not (hol.imp (hol.not hol.false) hol.false))) :=
  (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_667 t_1) (thm_696 t_1)) (hol.imp (hol.not hol.false) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) (Data.Bool.~ (Data.Bool.~ Data.Bool.F))) ;)

(; dict ;)

def thm_698 : hol.proof (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) (hol.not (hol.not hol.false))) :=
  (t_1 : hol.term hol.bool => thm_572 t_1) (hol.not hol.false).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ Data.Bool.F))) Data.Bool.F) ;)

(; dict ;)

def thm_699 : hol.proof (hol.eq hol.bool (hol.not (hol.not hol.false)) hol.false) :=
  (t_1 : hol.term hol.bool => thm_599 t_1) hol.false.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_700 : hol.proof (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) :=
  hol.TRANS hol.bool (hol.imp (hol.not hol.false) hol.false) (hol.not (hol.not hol.false)) hol.false thm_698 thm_699.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_701 : hol.proof (hol.eq hol.bool (hol.not (hol.imp (hol.not hol.false) hol.false)) (hol.not hol.false)) :=
  hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.imp (hol.not hol.false) hol.false) hol.false thm_509 thm_700.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_702 : hol.proof (hol.eq hol.bool (hol.not (hol.imp (hol.not hol.false) hol.false)) hol.true) :=
  hol.TRANS hol.bool (hol.not (hol.imp (hol.not hol.false) hol.false)) (hol.not hol.false) hol.true thm_701 thm_17.

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_703 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) hol.true) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.not (hol.imp (hol.not hol.false) hol.false)) hol.true thm_697 thm_702.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_704 : hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) :=
  hol.SYM hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) hol.true thm_703.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_705 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_665 p_1 hyp_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) thm_704 thm_4).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_706 : p_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => thm_705 p_1 hyp_1.

(; Theorem: |- ((= (= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p))) (= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p))) ;)

(; dict ;)

def thm_707 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)).

(; Theorem: |- ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_708 : hol.proof (hol.eq hol.bool ((__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1) hol.true) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) :=
  hol.BETA_CONV hol.bool hol.bool (__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1) hol.true.

(; Theorem: |- ((= ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) Data.Bool.T))) ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_709 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (thm_707 p_1) thm_708.

(; Theorem: |- ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_710 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1.

(; Theorem: |- ((= (= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p))) (= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p))) ;)

(; dict ;)

def thm_711 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) thm_561 (thm_710 p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_712 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true).

(; Theorem: |- ((= ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T))) ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_713 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (thm_711 p_1) thm_712.

(; Theorem: |- ((= ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) Data.Bool.T))) ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_714 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) (thm_709 p_1) (thm_713 p_1).

(; Theorem: |- ((= \lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616)) \lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616)) ;)

(; dict ;)

def thm_715 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1) (__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1).

(; Theorem: |- ((= p) Data.Bool.T) ;)

(; dict ;)

def thm_716 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool p_1 hol.true) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) Data.Bool.T)) ;)

(; dict ;)

def thm_717 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) (__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1 hol.true thm_715 (thm_716 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_718 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) (thm_714 p_1) (thm_717 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_719 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (thm_718 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_720 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.imp (hol.not hol.true) hol.true)) :=
  (t_1 : hol.term hol.bool => thm_678 t_1) (hol.imp (hol.not hol.true) hol.true).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_721 : hol.proof (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_548 t_1) (hol.not hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_722 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) hol.true) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.imp (hol.not hol.true) hol.true) hol.true thm_720 thm_721.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_723 : hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) :=
  hol.SYM hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) hol.true thm_722.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_724 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_719 p_1 hyp_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) thm_723 thm_4).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_725 : p_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => thm_724 p_1 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= p) Data.Bool.T)) ((= p) Data.Bool.F)) ;)

(; dict ;)

def thm_726 : p_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) :=
  p_1 : hol.term hol.bool => thm_22 p_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_727 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_728 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_726 p_1) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) => thm_727 p_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_729 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_725 p_1) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => thm_728 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_730 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_706 p_1) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => thm_729 p_1 hyp_1).

(; Theorem: |- ((= Data.Bool.F) Data.Bool.F) ;)

(; dict ;)

def thm_731 : hol.proof (hol.eq hol.bool hol.false hol.false) :=
  hol.REFL hol.bool hol.false.

(; Theorem: |- ((= Data.Bool.F) Data.Bool.F) ;)

(; dict ;)

def thm_732 : hol.proof (hol.eq hol.bool hol.false hol.false) :=
  hol.TRANS hol.bool hol.false hol.false hol.false thm_731 thm_731.

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0)) Data.Bool.F)) ((Data.Bool.==> ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0)) Data.Bool.F)) ;)

(; dict ;)

def thm_733 : __1917_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false)) :=
  __1917_1 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0)) Data.Bool.F)) ((Data.Bool.==> ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0)) Data.Bool.F)) ;)

(; dict ;)

def thm_734 : __1917_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false)) :=
  __1917_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (thm_733 __1917_1) (thm_733 __1917_1).

(; Theorem: |- ((= (Data.Bool.~ ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0))) (Data.Bool.~ ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0))) ;)

(; dict ;)

def thm_735 : __1917_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0))) :=
  __1917_1 : hol.term hol.ind => hol.REFL hol.bool (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)).

(; Theorem: |- ((= ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ;)

(; dict ;)

def thm_736 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false))) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)).

(; Theorem: |- ((= ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ;)

(; dict ;)

def thm_737 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (thm_736 p_1) (thm_736 p_1).

(; Theorem: |- ((= (= (Data.Bool.~ p))) (= (Data.Bool.~ p))) ;)

(; dict ;)

def thm_738 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not p_1)) (hol.eq hol.bool (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not p_1)).

(; Theorem: |- ((= ((Data.Bool.==> p) Data.Bool.F)) (Data.Bool.~ p)) ;)

(; dict ;)

def thm_739 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp p_1 hol.false) (hol.not p_1)) :=
  p_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_572 t_1) p_1.

(; Theorem: |- ((= ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ((= (Data.Bool.~ p)) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_740 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not p_1)) (hol.eq hol.bool (hol.not p_1)) (hol.imp p_1 hol.false) (hol.not p_1) (thm_738 p_1) (thm_739 p_1).

(; Theorem: |- ((= ((= (Data.Bool.~ p)) (Data.Bool.~ p))) Data.Bool.T) ;)

(; dict ;)

def thm_741 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.not p_1)) hol.true) :=
  p_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.not p_1).

(; Theorem: |- ((= ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_742 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) hol.true) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.not p_1)) hol.true (thm_740 p_1) (thm_741 p_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ;)

(; dict ;)

def thm_743 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false))) :=
  p_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) hol.true (thm_742 p_1).

(; Theorem: |- ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F)) ;)

(; dict ;)

def thm_744 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) :=
  p_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (thm_743 p_1) thm_4.

(; Theorem: |- ((= (Data.Bool.~ ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0))) ((Data.Bool.==> ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0)) Data.Bool.F)) ;)

(; dict ;)

def thm_745 : __1917_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false)) :=
  __1917_1 : hol.term hol.ind => (p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (thm_737 p_1) (thm_744 p_1)) (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0).

(; Theorem: |- ((= (Data.Bool.~ ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0))) ((Data.Bool.==> ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0)) Data.Bool.F)) ;)

(; dict ;)

def thm_746 : __1917_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false)) :=
  __1917_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (thm_735 __1917_1) (thm_745 __1917_1).

(; Theorem: |- (Data.Bool.~ ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0)) ;)

(; dict ;)

def thm_747 : __1917_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hol.proof (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) :=
  __1917_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => thm_639 hyp_1 __1917_1.

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.IND_SUC _1917)) HOLLight.IND_0)) Data.Bool.F) ;)

(; dict ;)

def thm_748 : __1917_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hol.proof (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) :=
  __1917_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hol.EQ_MP (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (thm_746 __1917_1) (hol.EQ_MP (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0)) (thm_735 __1917_1) (thm_747 __1917_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0)) Data.Bool.F) ;)

(; dict ;)

def thm_749 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hol.proof (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) hol.false) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => (__1917_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hol.EQ_MP (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (hol.imp (hol.eq hol.ind (HOLLight_2EIND__SUC __1917_1) HOLLight_2EIND__0) hol.false) (thm_734 __1917_1) (thm_748 __1917_1 hyp_1)) (HOLLight_2Edest__num n_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0))) ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0))) ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_750 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0).

(; Theorem: |- ((= ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0)) ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_751 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0).

(; Theorem: |- ((= ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0)) ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_752 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) (thm_751 n_1) (thm_751 n_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= x) z))) ((= y) z))) ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_753 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= x) z))) ((= y) z))) ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_754 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (thm_753 z_1 y_2 x_3) (thm_753 z_1 y_2 x_3).

(; Theorem: |- ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_755 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_756 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_755 b_1 a_2) (thm_755 b_1 a_2).

(; Theorem: |- ((= (= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a))) (= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a))) ;)

(; dict ;)

def thm_757 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)).

(; Theorem: |- ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) Data.Bool.F)) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ;)

(; dict ;)

def thm_758 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2)) hol.false) (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2)) hol.false.

(; Theorem: |- ((= ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) Data.Bool.F))) ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)))) ;)

(; dict ;)

def thm_759 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false)) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (thm_757 a_1 b_2) (thm_758 b_2).

(; Theorem: |- ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_760 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1.

(; Theorem: |- ((= (= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a))) (= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)))) ;)

(; dict ;)

def thm_761 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) thm_561 (thm_760 a_1 b_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ;)

(; dict ;)

def thm_762 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)).

(; Theorem: |- ((= ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)))) ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)))) ;)

(; dict ;)

def thm_763 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false))) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (thm_761 a_1 b_2) (thm_762 b_2).

(; Theorem: |- ((= ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) Data.Bool.F))) ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)))) ;)

(; dict ;)

def thm_764 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false)) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false))) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false))) (thm_759 a_1 b_2) (thm_763 a_1 b_2).

(; Theorem: |- ((= \lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606))) \lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606))) ;)

(; dict ;)

def thm_765 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2)) (__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2)).

(; Theorem: |- ((= a) Data.Bool.F) ;)

(; dict ;)

def thm_766 : a_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool a_1 hol.false) :=
  a_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) Data.Bool.F)) ;)

(; dict ;)

def thm_767 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.APP_THM hol.bool hol.bool (__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) (__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1 hol.false (thm_765 b_2) (thm_766 a_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ;)

(; dict ;)

def thm_768 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_1) (hol.imp (hol.not b_1) __606_3)) a_2) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_1) (hol.imp (hol.not b_1) __606_3)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) (thm_764 a_2 b_1) (thm_767 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_769 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (thm_768 b_2 a_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_770 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_771 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_770 t_1) (thm_770 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_772 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_773 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_772 thm_772.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) ;)

(; dict ;)

def thm_774 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_85 thm_773.

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_775 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_776 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_775 t_1) (thm_775 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_777 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_23 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_778 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_779 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_776 t_1) (thm_777 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => thm_778 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_780 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_781 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_780 t_1) (thm_780 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_782 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_24 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_783 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_784 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_781 t_1) (thm_782 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => thm_783 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_785 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_25 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_786 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_787 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_770 t_1) (thm_785 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => thm_786 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_788 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_789 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_788 t_1) (thm_788 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.F)) t) ;)

(; dict ;)

def thm_790 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) :=
  t_1 : hol.term hol.bool => thm_26 t_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_791 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_792 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_789 t_1) (thm_790 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => thm_791 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_793 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_794 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_793 t_1) (thm_793 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) t)) t) ;)

(; dict ;)

def thm_795 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_27 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_796 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (thm_792 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_794 t_1) (thm_795 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_797 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_787 t_1) (thm_796 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_798 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (thm_784 t_1) (thm_797 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_799 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (thm_779 t_1) (thm_798 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_800 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_799 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_801 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_802 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) thm_774 thm_800 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => thm_801 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_803 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_804 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_802 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) => thm_803 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_805 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.eq hol.bool (hol.or hol.false t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_806 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_804 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) => thm_805 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) b)) b) ;)

(; dict ;)

def thm_807 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false b_1) b_1) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_771 t_1) (thm_806 t_1)) b_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ Data.Bool.F) b))) (= b)) ;)

(; dict ;)

def thm_808 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or hol.false b_1)) (hol.eq hol.bool b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or hol.false b_1) b_1 thm_561 (thm_807 b_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)) (Data.Bool.~ (Data.Bool.~ b))) ;)

(; dict ;)

def thm_809 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not b_1) hol.false) (hol.not (hol.not b_1))) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_572 t_1) (hol.not b_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ b))) b) ;)

(; dict ;)

def thm_810 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not b_1)) b_1) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_599 t_1) b_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)) b) ;)

(; dict ;)

def thm_811 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not b_1) hol.false) b_1) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.not b_1) hol.false) (hol.not (hol.not b_1)) b_1 (thm_809 b_1) (thm_810 b_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ((= b) b)) ;)

(; dict ;)

def thm_812 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (hol.eq hol.bool b_1 b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or hol.false b_1)) (hol.eq hol.bool b_1) (hol.imp (hol.not b_1) hol.false) b_1 (thm_808 b_1) (thm_811 b_1).

(; Theorem: |- ((= ((= b) b)) Data.Bool.T) ;)

(; dict ;)

def thm_813 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool b_1 b_1) hol.true) :=
  b_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_316 x_1) b_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_814 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (hol.eq hol.bool b_1 b_1) hol.true (thm_812 b_1) (thm_813 b_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ;)

(; dict ;)

def thm_815 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) hol.true (thm_814 b_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)) ;)

(; dict ;)

def thm_816 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (thm_815 b_1) thm_4.

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_817 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_769 a_2 b_1 hyp_1) (thm_816 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.F)) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_818 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => thm_817 b_1 a_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a))) (= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a))) ;)

(; dict ;)

def thm_819 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)).

(; Theorem: |- ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ;)

(; dict ;)

def thm_820 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2)) hol.true) (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2)) hol.true.

(; Theorem: |- ((= ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) Data.Bool.T))) ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)))) ;)

(; dict ;)

def thm_821 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true)) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (thm_819 a_1 b_2) (thm_820 b_2).

(; Theorem: |- ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_822 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1.

(; Theorem: |- ((= (= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a))) (= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)))) ;)

(; dict ;)

def thm_823 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) thm_561 (thm_822 a_1 b_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ;)

(; dict ;)

def thm_824 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)).

(; Theorem: |- ((= ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)))) ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)))) ;)

(; dict ;)

def thm_825 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true))) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (thm_823 a_1 b_2) (thm_824 b_2).

(; Theorem: |- ((= ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) Data.Bool.T))) ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)))) ;)

(; dict ;)

def thm_826 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true)) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true))) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true))) (thm_821 a_1 b_2) (thm_825 a_1 b_2).

(; Theorem: |- ((= \lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604))) \lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604))) ;)

(; dict ;)

def thm_827 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2)) (__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2)).

(; Theorem: |- ((= a) Data.Bool.T) ;)

(; dict ;)

def thm_828 : a_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool a_1 hol.true) :=
  a_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) Data.Bool.T)) ;)

(; dict ;)

def thm_829 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.APP_THM hol.bool hol.bool (__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) (__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1 hol.true (thm_827 b_2) (thm_828 a_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ;)

(; dict ;)

def thm_830 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_1) (hol.imp (hol.not b_1) __604_3)) a_2) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_1) (hol.imp (hol.not b_1) __604_3)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) (thm_826 a_2 b_1) (thm_829 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_831 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (thm_830 b_2 a_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) b)) Data.Bool.T) ;)

(; dict ;)

def thm_832 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true b_1) hol.true) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_777 t_1) b_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ Data.Bool.T) b))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_833 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or hol.true b_1)) (hol.eq hol.bool hol.true)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or hol.true b_1) hol.true thm_561 (thm_832 b_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_834 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not b_1) hol.true) hol.true) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_548 t_1) (hol.not b_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_835 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (hol.eq hol.bool hol.true hol.true)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or hol.true b_1)) (hol.eq hol.bool hol.true) (hol.imp (hol.not b_1) hol.true) hol.true (thm_833 b_1) (thm_834 b_1).

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_836 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_673 t_1) hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) Data.Bool.T) ;)

(; dict ;)

def thm_837 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (hol.eq hol.bool hol.true hol.true) hol.true (thm_835 b_1) thm_836.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ;)

(; dict ;)

def thm_838 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) hol.true (thm_837 b_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)) ;)

(; dict ;)

def thm_839 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (thm_838 b_1) thm_4.

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_840 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_831 a_2 b_1 hyp_1) (thm_839 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.T)) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_841 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => thm_840 b_1 a_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= a) Data.Bool.T)) ((= a) Data.Bool.F)) ;)

(; dict ;)

def thm_842 : a_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool a_1 hol.true) (hol.eq hol.bool a_1 hol.false)) :=
  a_1 : hol.term hol.bool => thm_22 a_1.

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_843 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_844 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_842 a_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => thm_843 b_1 a_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_845 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_841 b_1 a_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => thm_844 b_1 a_2 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_846 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_818 b_1 a_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => thm_845 b_1 a_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((= y) z))) ;)

(; dict ;)

def thm_847 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) (hol.imp (hol.not (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) (hol.eq hol.ind y_3 z_2))) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => y_3 : hol.term hol.ind => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_756 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_755 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_755 b_1 a_2) (thm_846 b_1 a_2)))) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2))) (hol.eq hol.ind y_3 z_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_848 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_849 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_848 b_1 a_2) (thm_848 b_1 a_2).

(; Theorem: |- ((= (= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a))) (= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a))) ;)

(; dict ;)

def thm_850 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)).

(; Theorem: |- ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_851 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1))) hol.false) (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) Data.Bool.F))) ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_852 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false)) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (thm_850 a_1 b_2) (thm_851 b_2).

(; Theorem: |- ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_853 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1.

(; Theorem: |- ((= (= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a))) (= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_854 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) thm_561 (thm_853 a_1 b_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_855 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))).

(; Theorem: |- ((= ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))))) ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_856 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (thm_854 a_1 b_2) (thm_855 b_2).

(; Theorem: |- ((= ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) Data.Bool.F))) ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_857 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false)) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2)))) (thm_852 a_1 b_2) (thm_856 a_1 b_2).

(; Theorem: |- ((= \lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b)))) \lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_858 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1))) (__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1))).

(; Theorem: |- ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) Data.Bool.F)) ;)

(; dict ;)

def thm_859 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.APP_THM hol.bool hol.bool (__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) (__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1 hol.false (thm_858 b_2) (thm_766 a_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_860 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_1)) (hol.and (hol.not __610_3) (hol.not b_1))) a_2) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_1)) (hol.and (hol.not __610_3) (hol.not b_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) (thm_857 a_2 b_1) (thm_859 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_861 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (thm_860 b_2 a_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) (Data.Bool.~ b)) ;)

(; dict ;)

def thm_862 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.not b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.or hol.false b_1) b_1 thm_509 (thm_807 b_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b)))) (= (Data.Bool.~ b))) ;)

(; dict ;)

def thm_863 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.or hol.false b_1))) (hol.eq hol.bool (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.or hol.false b_1)) (hol.not b_1) thm_561 (thm_862 b_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.~ Data.Bool.F))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_864 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.not hol.false)) (hol.and hol.true)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.not hol.false) hol.true thm_191 thm_17.

(; Theorem: |- ((= (Data.Bool.~ b)) (Data.Bool.~ b)) ;)

(; dict ;)

def thm_865 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not b_1) (hol.not b_1)) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.not b_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_866 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.false) (hol.not b_1)) (hol.and hol.true (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.not hol.false)) (hol.and hol.true) (hol.not b_1) (hol.not b_1) thm_864 (thm_865 b_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_867 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_868 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_867 t_1) (thm_867 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_869 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_870 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_869 thm_869.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_871 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_85 thm_870.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_872 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_28 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_873 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_874 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_867 t_1) (thm_872 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_873 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_875 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_876 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_875 t_1) (thm_875 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_877 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_29 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_878 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_879 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_876 t_1) (thm_877 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_878 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_880 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_881 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_880 t_1) (thm_880 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_882 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_30 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_883 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_884 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_881 t_1) (thm_882 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_883 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_885 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_886 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_885 t_1) (thm_885 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_887 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_31 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_888 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_889 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_886 t_1) (thm_887 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_888 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_890 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_891 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_890 t_1) (thm_890 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_892 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_32 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_893 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_889 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_891 t_1) (thm_892 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_894 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_884 t_1) (thm_893 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_895 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_879 t_1) (thm_894 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_896 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_874 t_1) (thm_895 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_897 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_896 t_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_898 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_899 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_871 thm_897 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_898 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ b))) (Data.Bool.~ b)) ;)

(; dict ;)

def thm_900 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.not b_1)) (hol.not b_1)) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_868 t_1) (thm_899 t_1)) (hol.not b_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))) (Data.Bool.~ b)) ;)

(; dict ;)

def thm_901 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.false) (hol.not b_1)) (hol.not b_1)) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.not hol.false) (hol.not b_1)) (hol.and hol.true (hol.not b_1)) (hol.not b_1) (thm_866 b_1) (thm_900 b_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ((= (Data.Bool.~ b)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_902 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (hol.eq hol.bool (hol.not b_1) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1))) (hol.eq hol.bool (hol.not b_1)) (hol.and (hol.not hol.false) (hol.not b_1)) (hol.not b_1) (thm_863 b_1) (thm_901 b_1).

(; Theorem: |- ((= ((= (Data.Bool.~ b)) (Data.Bool.~ b))) Data.Bool.T) ;)

(; dict ;)

def thm_903 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not b_1) (hol.not b_1)) hol.true) :=
  b_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.not b_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) Data.Bool.T) ;)

(; dict ;)

def thm_904 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (hol.eq hol.bool (hol.not b_1) (hol.not b_1)) hol.true (thm_902 b_1) (thm_903 b_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_905 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) hol.true (thm_904 b_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_906 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (thm_905 b_1) thm_4.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_907 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_861 a_2 b_1 hyp_1) (thm_906 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_908 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => thm_907 b_1 a_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a))) (= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a))) ;)

(; dict ;)

def thm_909 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)).

(; Theorem: |- ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_910 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1))) hol.true) (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) Data.Bool.T))) ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_911 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true)) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (thm_909 a_1 b_2) (thm_910 b_2).

(; Theorem: |- ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_912 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1.

(; Theorem: |- ((= (= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a))) (= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_913 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) thm_561 (thm_912 a_1 b_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_914 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))).

(; Theorem: |- ((= ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))))) ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_915 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (thm_913 a_1 b_2) (thm_914 b_2).

(; Theorem: |- ((= ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) Data.Bool.T))) ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_916 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true)) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2)))) (thm_911 a_1 b_2) (thm_915 a_1 b_2).

(; Theorem: |- ((= \lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b)))) \lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_917 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1))) (__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1))).

(; Theorem: |- ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) Data.Bool.T)) ;)

(; dict ;)

def thm_918 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.APP_THM hol.bool hol.bool (__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) (__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1 hol.true (thm_917 b_2) (thm_828 a_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_919 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_1)) (hol.and (hol.not __608_3) (hol.not b_1))) a_2) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_1)) (hol.and (hol.not __608_3) (hol.not b_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) (thm_916 a_2 b_1) (thm_918 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_920 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (thm_919 b_2 a_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) (Data.Bool.~ Data.Bool.T)) ;)

(; dict ;)

def thm_921 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.not hol.true)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.or hol.true b_1) hol.true thm_509 (thm_832 b_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) Data.Bool.F) ;)

(; dict ;)

def thm_922 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) hol.false) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.not (hol.or hol.true b_1)) (hol.not hol.true) hol.false (thm_921 b_1) thm_16.

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b)))) (= Data.Bool.F)) ;)

(; dict ;)

def thm_923 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.or hol.true b_1))) (hol.eq hol.bool hol.false)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.or hol.true b_1)) hol.false thm_561 (thm_922 b_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.~ Data.Bool.T))) (Data.Bool./\ Data.Bool.F)) ;)

(; dict ;)

def thm_924 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.not hol.true)) (hol.and hol.false)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.not hol.true) hol.false thm_191 thm_16.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_925 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.true) (hol.not b_1)) (hol.and hol.false (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.not hol.true)) (hol.and hol.false) (hol.not b_1) (hol.not b_1) thm_924 (thm_865 b_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ b))) Data.Bool.F) ;)

(; dict ;)

def thm_926 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.not b_1)) hol.false) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_882 t_1) (hol.not b_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))) Data.Bool.F) ;)

(; dict ;)

def thm_927 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.true) (hol.not b_1)) hol.false) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.not hol.true) (hol.not b_1)) (hol.and hol.false (hol.not b_1)) hol.false (thm_925 b_1) (thm_926 b_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ((= Data.Bool.F) Data.Bool.F)) ;)

(; dict ;)

def thm_928 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (hol.eq hol.bool hol.false hol.false)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1))) (hol.eq hol.bool hol.false) (hol.and (hol.not hol.true) (hol.not b_1)) hol.false (thm_923 b_1) (thm_927 b_1).

(; Theorem: |- ((= ((= Data.Bool.F) Data.Bool.F)) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_929 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false hol.false) (hol.not hol.false)) :=
  (t_1 : hol.term hol.bool => thm_683 t_1) hol.false.

(; Theorem: |- ((= ((= Data.Bool.F) Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_930 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false hol.false) hol.true) :=
  hol.TRANS hol.bool (hol.eq hol.bool hol.false hol.false) (hol.not hol.false) hol.true thm_929 thm_17.

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) Data.Bool.T) ;)

(; dict ;)

def thm_931 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (hol.eq hol.bool hol.false hol.false) hol.true (thm_928 b_1) thm_930.

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_932 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) hol.true (thm_931 b_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_933 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (thm_932 b_1) thm_4.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_934 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_920 a_2 b_1 hyp_1) (thm_933 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_935 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => thm_934 b_1 a_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_936 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_937 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_842 a_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => thm_936 b_1 a_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_938 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_935 b_1 a_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => thm_937 b_1 a_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_939 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_908 b_1 a_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => thm_938 b_1 a_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((Data.Bool./\ (Data.Bool.~ (Data.Bool.~ ((= x) y)))) (Data.Bool.~ (Data.Bool.~ ((= x) z))))) ;)

(; dict ;)

def thm_940 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.and (hol.not (hol.not (hol.eq hol.ind x_3 y_2))) (hol.not (hol.not (hol.eq hol.ind x_3 z_1))))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_849 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_848 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_848 b_1 a_2) (thm_939 b_1 a_2)))) (hol.not (hol.eq hol.ind x_3 z_1)) (hol.not (hol.eq hol.ind x_3 y_2)).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ;)

(; dict ;)

def thm_941 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1)) :=
  a_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ;)

(; dict ;)

def thm_942 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1)) :=
  a_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (thm_941 a_1) (thm_941 a_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ a))) a) ;)

(; dict ;)

def thm_943 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) :=
  a_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_599 t_1) a_1.

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.~ a)))) (= a)) ;)

(; dict ;)

def thm_944 : a_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.not a_1))) (hol.eq hol.bool a_1)) :=
  a_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.not a_1)) a_1 thm_561 (thm_943 a_1).

(; Theorem: |- ((= a) a) ;)

(; dict ;)

def thm_945 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool a_1 a_1) :=
  a_1 : hol.term hol.bool => hol.REFL hol.bool a_1.

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ((= a) a)) ;)

(; dict ;)

def thm_946 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool a_1 a_1)) :=
  a_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.not a_1))) (hol.eq hol.bool a_1) a_1 a_1 (thm_944 a_1) (thm_945 a_1).

(; Theorem: |- ((= ((= a) a)) Data.Bool.T) ;)

(; dict ;)

def thm_947 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool a_1 a_1) hol.true) :=
  a_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_316 x_1) a_1.

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ a))) a)) Data.Bool.T) ;)

(; dict ;)

def thm_948 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) hol.true) :=
  a_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool a_1 a_1) hol.true (thm_946 a_1) (thm_947 a_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ;)

(; dict ;)

def thm_949 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.not a_1)) a_1)) :=
  a_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) hol.true (thm_948 a_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= x) y)))) ((= x) y)) ;)

(; dict ;)

def thm_950 : y_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq hol.ind x_2 y_1))) (hol.eq hol.ind x_2 y_1)) :=
  y_1 : hol.term hol.ind => x_2 : hol.term hol.ind => (a_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (thm_942 a_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (thm_949 a_1) thm_4)) (hol.eq hol.ind x_2 y_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.~ (Data.Bool.~ ((= x) y))))) (Data.Bool./\ ((= x) y))) ;)

(; dict ;)

def thm_951 : y_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.not (hol.not (hol.eq hol.ind x_2 y_1)))) (hol.and (hol.eq hol.ind x_2 y_1))) :=
  y_1 : hol.term hol.ind => x_2 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.not (hol.not (hol.eq hol.ind x_2 y_1))) (hol.eq hol.ind x_2 y_1) thm_191 (thm_950 y_1 x_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= x) z)))) ((= x) z)) ;)

(; dict ;)

def thm_952 : z_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq hol.ind x_2 z_1))) (hol.eq hol.ind x_2 z_1)) :=
  z_1 : hol.term hol.ind => x_2 : hol.term hol.ind => (a_1 : hol.term hol.bool => thm_943 a_1) (hol.eq hol.ind x_2 z_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ (Data.Bool.~ ((= x) y)))) (Data.Bool.~ (Data.Bool.~ ((= x) z))))) ((Data.Bool./\ ((= x) y)) ((= x) z))) ;)

(; dict ;)

def thm_953 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.and (hol.not (hol.not (hol.eq hol.ind x_3 y_2))) (hol.not (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.and (hol.not (hol.not (hol.eq hol.ind x_3 y_2)))) (hol.and (hol.eq hol.ind x_3 y_2)) (hol.not (hol.not (hol.eq hol.ind x_3 z_1))) (hol.eq hol.ind x_3 z_1) (thm_951 y_2 x_3) (thm_952 z_1 x_3).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((Data.Bool./\ ((= x) y)) ((= x) z))) ;)

(; dict ;)

def thm_954 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.not (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.and (hol.not (hol.not (hol.eq hol.ind x_3 y_2))) (hol.not (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (thm_940 z_1 y_2 x_3) (thm_953 z_1 y_2 x_3).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z)))))) (Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= x) z)))) ;)

(; dict ;)

def thm_955 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) thm_126 (thm_954 z_1 y_2 x_3).

(; Theorem: |- ((= ((= y) z)) ((= y) z)) ;)

(; dict ;)

def thm_956 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind y_2 z_1) (hol.eq hol.ind y_2 z_1)) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => hol.REFL hol.bool (hol.eq hol.ind y_2 z_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((= y) z))) ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_957 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.eq hol.ind y_2 z_1)) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1))) (hol.eq hol.ind y_2 z_1) (hol.eq hol.ind y_2 z_1) (thm_955 z_1 y_2 x_3) (thm_956 z_1 y_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_958 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) (hol.imp (hol.and (hol.eq hol.ind x_1 y_3) (hol.eq hol.ind x_1 z_2)) (hol.eq hol.ind y_3 z_2))) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => y_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) (hol.imp (hol.not (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) (hol.eq hol.ind y_3 z_2)) (hol.imp (hol.and (hol.eq hol.ind x_1 y_3) (hol.eq hol.ind x_1 z_2)) (hol.eq hol.ind y_3 z_2)) (thm_847 x_1 z_2 y_3) (thm_957 z_2 y_3 x_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((= x) y)))) (Data.Bool.\/ (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_959 : y_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.eq hol.ind x_2 y_1))) (hol.or (hol.not (hol.eq hol.ind x_2 y_1)))) :=
  y_1 : hol.term hol.ind => x_2 : hol.term hol.ind => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.eq hol.ind x_2 y_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ;)

(; dict ;)

def thm_960 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ;)

(; dict ;)

def thm_961 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (thm_960 q_1 p_2) (thm_960 q_1 p_2).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) ;)

(; dict ;)

def thm_962 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) ;)

(; dict ;)

def thm_963 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) thm_962 thm_962.

(; Theorem: |- ((= (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))))) ;)

(; dict ;)

def thm_964 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) thm_85 thm_963.

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) ;)

(; dict ;)

def thm_965 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))).

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) ;)

(; dict ;)

def thm_966 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) :=
  p_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (thm_965 p_1) (thm_965 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) ;)

(; dict ;)

def thm_967 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) thm_85 (thm_966 p_1).

(; Theorem: |- ((= \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_968 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))).

(; Theorem: |- ((= \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_969 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (thm_968 q_1 p_2) (thm_968 q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) ;)

(; dict ;)

def thm_970 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))))))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) thm_85 (thm_969 q_1 p_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ;)

(; dict ;)

def thm_971 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ;)

(; dict ;)

def thm_972 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (thm_971 t2_1 t1_2) (thm_971 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ;)

(; dict ;)

def thm_973 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 t2_2) (hol.or t2_2 t1_1))) :=
  t1_1 : hol.term hol.bool => thm_33 t1_1.

(; Theorem: |- ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1)) ;)

(; dict ;)

def thm_974 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_973 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p)) ;)

(; dict ;)

def thm_975 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (thm_972 t2_1 t1_2) (thm_974 t2_1 t1_2)) q_1 p_2.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_976 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_977 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))))) (thm_975 q_2 p_3) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) => thm_976 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ;)

(; dict ;)

def thm_978 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1)))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ;)

(; dict ;)

def thm_979 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1)))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (thm_978 t3_1 t2_2 t1_3) (thm_978 t3_1 t2_2 t1_3).

(; Theorem: |- (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))))) ;)

(; dict ;)

def thm_980 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) :=
  t1_1 : hol.term hol.bool => thm_34 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ;)

(; dict ;)

def thm_981 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_980 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ;)

(; dict ;)

def thm_982 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_981 t2_2 t1_3 t3_1.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ;)

(; dict ;)

def thm_983 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (thm_979 t3_1 t2_2 t1_3) (thm_982 t3_1 t2_2 t1_3)) r_1 q_2 p_3.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ;)

(; dict ;)

def thm_984 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ;)

(; dict ;)

def thm_985 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) (thm_983 r_1 q_2 p_3) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) => thm_984 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_986 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_987 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (thm_986 r_1 q_2 p_3) (thm_986 r_1 q_2 p_3).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) ;)

(; dict ;)

def thm_988 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) ;)

(; dict ;)

def thm_989 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) thm_988 thm_988.

(; Theorem: |- ((= (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))))) ;)

(; dict ;)

def thm_990 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) thm_85 thm_989.

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) ;)

(; dict ;)

def thm_991 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))).

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) ;)

(; dict ;)

def thm_992 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) :=
  p_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (thm_991 p_1) (thm_991 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) ;)

(; dict ;)

def thm_993 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) thm_85 (thm_992 p_1).

(; Theorem: |- ((= \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_994 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))).

(; Theorem: |- ((= \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_995 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (thm_994 q_1 p_2) (thm_994 q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) ;)

(; dict ;)

def thm_996 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3)))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) thm_85 (thm_995 q_1 p_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_997 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_998 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (thm_997 t3_1 t2_2 t1_3) (thm_997 t3_1 t2_2 t1_3).

(; Theorem: |- ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ;)

(; dict ;)

def thm_999 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) -> hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ;)

(; dict ;)

def thm_1000 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) -> hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) => hol.SYM hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1) (thm_999 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ;)

(; dict ;)

def thm_1001 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) -> hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ;)

(; dict ;)

def thm_1002 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) -> hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) => hol.SYM hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1)) (thm_1001 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_1003 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.PROP_EXT (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) => thm_1000 t3_1 t2_2 t1_3 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) => thm_1002 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_1004 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3)) (t3_3 : hol.term hol.bool => thm_1003 t3_3 t2_1 t1_2).

(; Theorem: |- ((= (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))))) (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1005 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3)))) (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3)) thm_85 (thm_1004 t2_1 t1_2).

(; Theorem: |- ((= \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))))) \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1006 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))) :=
  t1_1 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))) (t2_2 : hol.term hol.bool => thm_1005 t2_2 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))))) (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1007 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))))) :=
  t1_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))) thm_85 (thm_1006 t1_1).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))))) \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1008 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))))) :=
  hol.ABS_THM hol.bool hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))) (t1_1 : hol.term hol.bool => thm_1007 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)))))) ;)

(; dict ;)

def thm_1009 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))) thm_85 thm_1008.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1010 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))))) :=
  hol.EQ_MP (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))))) thm_1009 thm_34.

(; Theorem: |- (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1011 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))) :=
  t1_1 : hol.term hol.bool => thm_1010 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_1012 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1011 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ;)

(; dict ;)

def thm_1013 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_1012 t2_2 t1_3 t3_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ;)

(; dict ;)

def thm_1014 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or (hol.or p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (thm_998 t3_1 t2_2 t1_3) (thm_1013 t3_1 t2_2 t1_3)) r_1 q_2 p_3.

(; Theorem: |- ((= (= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) (= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r))) ;)

(; dict ;)

def thm_1015 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1))) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or p_3 (hol.or q_2 r_1)) (hol.or (hol.or p_3 q_2) r_1) thm_561 (thm_1014 r_1 q_2 p_3).

(; Theorem: |- ((= ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))) ((Data.Bool.\/ ((Data.Bool.\/ q) p)) r)) ;)

(; dict ;)

def thm_1016 : r_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or q_3 (hol.or p_2 r_1)) (hol.or (hol.or q_3 p_2) r_1)) :=
  r_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_1013 t3_1 t2_2 t1_3) r_1 p_2 q_3.

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ ((Data.Bool.\/ q) p)) r))) ;)

(; dict ;)

def thm_1017 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1))) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1)) (hol.or q_2 (hol.or p_3 r_1)) (hol.or (hol.or q_2 p_3) r_1) (thm_1015 r_1 q_2 p_3) (thm_1016 r_1 p_3 q_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ ((Data.Bool.\/ q) p)) r))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_1018 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1)) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1)) (thm_1017 r_1 q_2 p_3).

(; Theorem: |- ((= Data.Bool.\/) Data.Bool.\/) ;)

(; dict ;)

def thm_1019 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or hol.or) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or.

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool.\/ p) q))) (Data.Bool.\/ ((Data.Bool.\/ q) p))) ;)

(; dict ;)

def thm_1020 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.or p_2 q_1)) (hol.or (hol.or q_1 p_2))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.or p_2 q_1) (hol.or q_1 p_2) thm_1019 (thm_975 q_1 p_2).

(; Theorem: |- ((= r) r) ;)

(; dict ;)

def thm_1021 : r_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool r_1 r_1) :=
  r_1 : hol.term hol.bool => hol.REFL hol.bool r_1.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ ((Data.Bool.\/ q) p)) r)) ;)

(; dict ;)

def thm_1022 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.or p_3 q_2)) (hol.or (hol.or q_2 p_3)) r_1 r_1 (thm_1020 q_2 p_3) (thm_1021 r_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))) ;)

(; dict ;)

def thm_1023 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1)) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (thm_1018 r_1 q_2 p_3) (thm_1022 r_1 q_2 p_3).

(; Theorem: |- (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_1024 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => r_3 : hol.term hol.bool => thm_1023 r_3 q_1 p_2.

(; Theorem: |- (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) ;)

(; dict ;)

def thm_1025 : p_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (thm_996 q_2 p_1) (thm_1024 q_2 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) ;)

(; dict ;)

def thm_1026 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (thm_993 p_1) (thm_1025 p_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ;)

(; dict ;)

def thm_1027 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ;)

(; dict ;)

def thm_1028 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.EQ_MP (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (thm_987 r_1 q_2 p_3) (hol.EQ_MP (hol.forall hol.bool (p_4 : hol.term hol.bool => hol.forall hol.bool (q_5 : hol.term hol.bool => hol.forall hol.bool (r_6 : hol.term hol.bool => hol.eq hol.bool (hol.or p_4 (hol.or q_5 r_6)) (hol.or q_5 (hol.or p_4 r_6)))))) (hol.forall hol.bool (p_4 : hol.term hol.bool => hol.forall hol.bool (q_5 : hol.term hol.bool => hol.forall hol.bool (r_6 : hol.term hol.bool => hol.eq hol.bool (hol.or p_4 (hol.or q_5 r_6)) (hol.or q_5 (hol.or p_4 r_6)))))) thm_990 thm_1026 p_3 q_2 r_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) => thm_1027 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) p)) p) ;)

(; dict ;)

def thm_1029 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_1 p_1) p_1) :=
  p_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_795 t_1) p_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_1030 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_2 p_2) p_2) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_2 p_2) p_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_1031 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))) (thm_1029 p_2) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_2 p_2) p_2) => thm_1030 q_1 p_2 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_1032 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_1033 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (thm_1032 q_1 p_2) (thm_1032 q_1 p_2).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_1034 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_1035 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) thm_1034 thm_1034.

(; Theorem: |- ((= (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ;)

(; dict ;)

def thm_1036 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) thm_85 thm_1035.

(; Theorem: |- ((= \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_1037 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)).

(; Theorem: |- ((= \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_1038 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) :=
  p_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (thm_1037 p_1) (thm_1037 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_1039 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) thm_85 (thm_1038 p_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q)) ;)

(; dict ;)

def thm_1040 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or (hol.or p_2 p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_1013 t3_1 t2_2 t1_3) q_1 p_2 p_2.

(; Theorem: |- ((= (= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q)))) (= ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q))) ;)

(; dict ;)

def thm_1041 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1))) (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or p_2 (hol.or p_2 q_1)) (hol.or (hol.or p_2 p_2) q_1) thm_561 (thm_1040 q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ p) q)) ;)

(; dict ;)

def thm_1042 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 q_1) (hol.or p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.or p_2 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((= ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q)) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_1043 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1))) (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1)) (hol.or p_2 q_1) (hol.or p_2 q_1) (thm_1041 q_1 p_2) (thm_1042 q_1 p_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q)) ((Data.Bool.\/ p) q))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_1044 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1)) (thm_1043 q_1 p_2).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool.\/ p) p))) (Data.Bool.\/ p)) ;)

(; dict ;)

def thm_1045 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.or p_1 p_1)) (hol.or p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.or p_1 p_1) p_1 thm_1019 (thm_1029 p_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q)) ((Data.Bool.\/ p) q)) ;)

(; dict ;)

def thm_1046 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.or p_2 p_2)) (hol.or p_2) q_1 q_1 (thm_1045 p_2) (thm_102 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)) ;)

(; dict ;)

def thm_1047 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (thm_1044 q_1 p_2) (thm_1046 q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_1048 : p_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => thm_1047 q_2 p_1.

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_1049 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (thm_1039 p_1) (thm_1048 p_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_1050 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) (thm_1031 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (thm_1033 q_1 p_2) (hol.EQ_MP (hol.forall hol.bool (p_3 : hol.term hol.bool => hol.forall hol.bool (q_4 : hol.term hol.bool => hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_4)) (hol.or p_3 q_4)))) (hol.forall hol.bool (p_3 : hol.term hol.bool => hol.forall hol.bool (q_4 : hol.term hol.bool => hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_4)) (hol.or p_3 q_4)))) thm_1036 thm_1049 p_2 q_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_1051 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (thm_1028 r_1 q_2 p_3) (thm_1050 q_2 p_3).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ;)

(; dict ;)

def thm_1052 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (thm_985 r_1 q_2 p_3) (thm_1051 r_1 q_2 p_3).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ;)

(; dict ;)

def thm_1053 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) (thm_977 r_1 q_2 p_3) (thm_1052 r_1 q_2 p_3).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_1054 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => r_3 : hol.term hol.bool => thm_1053 r_3 q_1 p_2.

(; Theorem: |- (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) ;)

(; dict ;)

def thm_1055 : p_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (thm_970 q_2 p_1) (thm_1054 q_2 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) ;)

(; dict ;)

def thm_1056 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (thm_967 p_1) (thm_1055 p_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p)) ;)

(; dict ;)

def thm_1057 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) -> hol.proof (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p)) ;)

(; dict ;)

def thm_1058 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) (hol.witness hol.bool)) (hol.or p_2 (hol.or q_1 (hol.witness hol.bool)))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 (hol.witness hol.bool))) (hol.or q_1 (hol.or p_2 (hol.witness hol.bool)))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.EQ_MP (hol.forall hol.bool (p_3 : hol.term hol.bool => hol.forall hol.bool (q_4 : hol.term hol.bool => hol.forall hol.bool (r_5 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_3 q_4) (hol.or q_4 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_4) r_5) (hol.or p_3 (hol.or q_4 r_5))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_4 r_5)) (hol.or q_4 (hol.or p_3 r_5))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_4)) (hol.or p_3 q_4))))))))) (hol.forall hol.bool (p_3 : hol.term hol.bool => hol.forall hol.bool (q_4 : hol.term hol.bool => hol.forall hol.bool (r_5 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_3 q_4) (hol.or q_4 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_4) r_5) (hol.or p_3 (hol.or q_4 r_5))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_4 r_5)) (hol.or q_4 (hol.or p_3 r_5))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_4)) (hol.or p_3 q_4))))))))) thm_964 thm_1056 p_2 q_1 (hol.witness hol.bool)) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) (hol.witness hol.bool)) (hol.or p_2 (hol.or q_1 (hol.witness hol.bool)))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 (hol.witness hol.bool))) (hol.or q_1 (hol.or p_2 (hol.witness hol.bool)))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) => thm_1057 (hol.witness hol.bool) q_1 p_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ((Data.Bool.\/ ((= y) z)) (Data.Bool.~ ((= x) z)))) ;)

(; dict ;)

def thm_1059 : y_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 z_2)) (hol.eq hol.ind y_1 z_2)) (hol.or (hol.eq hol.ind y_1 z_2) (hol.not (hol.eq hol.ind x_3 z_2)))) :=
  y_1 : hol.term hol.ind => z_2 : hol.term hol.ind => x_3 : hol.term hol.ind => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (thm_961 q_1 p_2) (thm_1058 q_1 p_2)) (hol.eq hol.ind y_1 z_2) (hol.not (hol.eq hol.ind x_3 z_2)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ ((= y) z)) (Data.Bool.~ ((= x) z))))) ;)

(; dict ;)

def thm_1060 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.eq hol.ind y_2 z_1) (hol.not (hol.eq hol.ind x_3 z_1))))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2))) (hol.or (hol.not (hol.eq hol.ind x_3 y_2))) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (hol.or (hol.eq hol.ind y_2 z_1) (hol.not (hol.eq hol.ind x_3 z_1))) (thm_959 y_2 x_3) (thm_1059 y_2 z_1 x_3).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ ((= y) z)) (Data.Bool.~ ((= x) z))))) ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ;)

(; dict ;)

def thm_1061 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.eq hol.ind y_2 z_1) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => (r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => thm_1023 r_1 q_2 p_3) (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1) (hol.not (hol.eq hol.ind x_3 y_2)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ;)

(; dict ;)

def thm_1062 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.eq hol.ind y_2 z_1) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (thm_1060 z_1 y_2 x_3) (thm_1061 z_1 y_2 x_3).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))))) (= ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z)))))) ;)

(; dict ;)

def thm_1063 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)))) (hol.eq hol.bool (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) thm_561 (thm_1062 z_1 y_2 x_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ;)

(; dict ;)

def thm_1064 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2))))) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => y_3 : hol.term hol.ind => hol.REFL hol.bool (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z)))))) ((= ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z)))))) ;)

(; dict ;)

def thm_1065 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) (hol.eq hol.bool (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)))) (hol.eq hol.bool (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (thm_1063 z_1 y_2 x_3) (thm_1064 x_3 z_1 y_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z))))) ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z)))))) Data.Bool.T) ;)

(; dict ;)

def thm_1066 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2))))) hol.true) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => y_3 : hol.term hol.ind => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z)))))) Data.Bool.T) ;)

(; dict ;)

def thm_1067 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) hol.true) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) (hol.eq hol.bool (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) hol.true (thm_1065 z_1 y_2 x_3) (thm_1066 x_3 z_1 y_2).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z)))))) ;)

(; dict ;)

def thm_1068 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.SYM hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1))))) hol.true (thm_1067 z_1 y_2 x_3).

(; Theorem: |- ((= (Data.Bool./\ ((= x) x))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1069 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A x_1 x_1)) (hol.and hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq A x_1 x_1) hol.true thm_191 (thm_314 A x_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1070 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.REFL hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) x)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))))) ((Data.Bool./\ Data.Bool.T) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))))) ;)

(; dict ;)

def thm_1071 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.and hol.true (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A x_3 x_3)) (hol.and hol.true) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1069 A x_3) (thm_1070 A z_1 y_2 x_3).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))))) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1072 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => (t_1 : hol.term hol.bool => thm_872 t_1) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) x)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))))) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1073 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.TRANS hol.bool (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.and hol.true (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1071 A z_1 y_2 x_3) (thm_1072 A z_1 y_2 x_3).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool./\ ((= x) x)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))))) ;)

(; dict ;)

def thm_1074 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.SYM hol.bool (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1073 A z_1 y_2 x_3).

(; Theorem: |- ((= ((= ((= x) y)) Data.Bool.F)) ((= ((= x) y)) Data.Bool.F)) ;)

(; dict ;)

def thm_1075 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false).

(; Theorem: |- ((= ((= ((= x) y)) Data.Bool.F)) ((= ((= x) y)) Data.Bool.F)) ;)

(; dict ;)

def thm_1076 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false) (thm_1075 A y_1 x_2) (thm_1075 A y_1 x_2).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1077 : hyp_1 : hol.proof hol.false -> hol.proof hol.false :=
  hyp_1 : hol.proof hol.false => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. p) ;)

(; dict ;)

def thm_1078 : hyp_1 : hol.proof hol.false -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) :=
  hyp_1 : hol.proof hol.false => hol.EQ_MP hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) thm_35 (thm_1077 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_1079 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof hol.false -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_1078 hyp_1 P_1.

(; Theorem: |- ((Data.Bool.==> Data.Bool.F) P) ;)

(; dict ;)

def thm_1080 : P_1 : hol.term hol.bool -> hol.proof (hol.imp hol.false P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_1079 P_1 hyp_1.

(; Theorem: |- ((= (= (Data.Bool.~ P))) (= (Data.Bool.~ P))) ;)

(; dict ;)

def thm_1081 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)).

(; Theorem: |- ((= (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_1082 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1.

(; Theorem: |- ((= ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P))) ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F))) ;)

(; dict ;)

def thm_1083 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false))) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1)) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false) (thm_1081 P_1) (thm_1082 P_1).

(; Theorem: |- ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ;)

(; dict ;)

def thm_1084 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1 P_1 thm_36 (thm_327 P_1).

(; Theorem: |- ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_1085 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) (thm_1083 P_1) (thm_1084 P_1).

(; Theorem: |- (Data.Bool.~ P) ;)

(; dict ;)

def thm_1086 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.not P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> P) Data.Bool.F) ;)

(; dict ;)

def thm_1087 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.imp P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.EQ_MP (hol.not P_1) (hol.imp P_1 hol.false) ((P_1 : hol.term hol.bool => thm_1085 P_1) P_1) (thm_1086 P_1 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1088 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hyp_2 : hol.proof (hol.not P_1) -> hol.proof hol.false :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_2 : hol.proof (hol.not P_1) => thm_1087 P_1 hyp_2 (thm_335 P_1 hyp_1).

(; Theorem: |- ((= P) Data.Bool.F) ;)

(; dict ;)

def thm_1089 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.eq hol.bool P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.PROP_EXT P_1 hol.false (hyp_2 : hol.proof hol.false => thm_1080 P_1 (thm_1077 hyp_2)) (hyp_2 : hol.proof P_1 => thm_1088 P_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ P)) ((= P) Data.Bool.F)) ;)

(; dict ;)

def thm_1090 : P_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.not P_1) (hol.eq hol.bool P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => thm_1089 P_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((= ((= x) y)) Data.Bool.F)) ;)

(; dict ;)

def thm_1091 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.not (hol.eq A x_2 y_1)) (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => (P_1 : hol.term hol.bool => thm_1090 P_1) (hol.eq A x_2 y_1).

(; Theorem: |- (Data.Bool.~ ((= x) y)) ;)

(; dict ;)

def thm_1092 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) -> hol.proof (hol.not (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) => hyp_1.

(; Theorem: |- ((= ((= x) y)) Data.Bool.F) ;)

(; dict ;)

def thm_1093 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) => thm_1091 A y_1 x_2 (thm_1092 A y_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= x) y))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_1094 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A x_2 y_1)) (hol.not hol.false)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq A x_2 y_1) hol.false thm_509 (hol.EQ_MP (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 y_1) hol.false) (thm_1076 A y_1 x_2) (thm_1093 A y_1 x_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.~ ((= x) y))) Data.Bool.T) ;)

(; dict ;)

def thm_1095 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A x_2 y_1)) hol.true) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) => hol.TRANS hol.bool (hol.not (hol.eq A x_2 y_1)) (hol.not hol.false) hol.true (thm_1094 A y_1 x_2 hyp_1) thm_17.

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((= x) y)))) (Data.Bool.\/ Data.Bool.T)) ;)

(; dict ;)

def thm_1096 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.eq A x_2 y_1))) (hol.or hol.true)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 y_1)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (hol.eq A x_2 y_1)) hol.true thm_1019 (thm_1095 A y_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1097 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A x_3 z_2)) (hol.eq A y_1 z_2)) (hol.or (hol.not (hol.eq A x_3 z_2)) (hol.eq A y_1 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hol.REFL hol.bool (hol.or (hol.not (hol.eq A x_3 z_2)) (hol.eq A y_1 z_2)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ Data.Bool.T) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1098 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.or hol.true (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.eq A x_3 y_2))) (hol.or hol.true) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)) (thm_1096 A y_2 x_3 hyp_1) (thm_1097 A y_2 z_1 x_3).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) Data.Bool.T) ;)

(; dict ;)

def thm_1099 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or hol.true (hol.or (hol.not (hol.eq A x_3 z_2)) (hol.eq A y_1 z_2))) hol.true) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => (t_1 : hol.term hol.bool => thm_777 t_1) (hol.or (hol.not (hol.eq A x_3 z_2)) (hol.eq A y_1 z_2)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) Data.Bool.T) ;)

(; dict ;)

def thm_1100 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) hol.true) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) => hol.TRANS hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.or hol.true (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) hol.true (thm_1098 A z_1 y_2 x_3 hyp_1) (thm_1099 A y_2 z_1 x_3).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1101 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) -> hol.proof (hol.eq hol.bool hol.true (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) => hol.SYM hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) hol.true (thm_1100 A z_1 y_2 x_3 hyp_1).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1102 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) -> hol.proof (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) => hol.EQ_MP hol.true (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1101 A z_1 y_2 x_3 hyp_1) thm_4.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1103 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 y_2)) => thm_1102 A z_1 y_2 x_3 hyp_1.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_1104 : A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) :=
  A : hol.type => hol.REFL (hol.arr A (hol.arr A hol.bool)) (hol.eq A).

(; Theorem: |- ((= ((= x) y)) ((= x) y)) ;)

(; dict ;)

def thm_1105 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq A x_2 y_1).

(; Theorem: |- ((= ((= x) y)) ((= x) y)) ;)

(; dict ;)

def thm_1106 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 y_1) (hol.eq A x_2 y_1) (thm_1105 A y_1 x_2) (thm_1105 A y_1 x_2).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1107 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq A x_2 y_1) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hyp_1.

(; Theorem: |- ((= (= x)) (= y)) ;)

(; dict ;)

def thm_1108 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A x_2) (hol.eq A y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hol.APP_THM A (hol.arr A hol.bool) (hol.eq A) (hol.eq A) x_2 y_1 (thm_1104 A) (hol.EQ_MP (hol.eq A x_2 y_1) (hol.eq A x_2 y_1) (thm_1106 A y_1 x_2) (thm_1107 A y_1 x_2 hyp_1)).

(; Theorem: |- ((= y) y) ;)

(; dict ;)

def thm_1109 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.eq A y_1 y_1) :=
  A : hol.type => y_1 : hol.term A => hol.REFL A y_1.

(; Theorem: |- ((= ((= x) y)) ((= y) y)) ;)

(; dict ;)

def thm_1110 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hol.APP_THM A hol.bool (hol.eq A x_2) (hol.eq A y_1) y_1 y_1 (thm_1108 A y_1 x_2 hyp_1) (thm_1109 A y_1).

(; Theorem: |- ((= ((= y) y)) Data.Bool.T) ;)

(; dict ;)

def thm_1111 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A y_1 y_1) hol.true) :=
  A : hol.type => y_1 : hol.term A => (A : hol.type => x_1 : hol.term A => thm_314 A x_1) A y_1.

(; Theorem: |- ((= ((= x) y)) Data.Bool.T) ;)

(; dict ;)

def thm_1112 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) hol.true) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hol.TRANS hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 y_1) hol.true (thm_1110 A y_1 x_2 hyp_1) (thm_1111 A y_1).

(; Theorem: |- ((= (Data.Bool.~ ((= x) y))) (Data.Bool.~ Data.Bool.T)) ;)

(; dict ;)

def thm_1113 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A x_2 y_1)) (hol.not hol.true)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq A x_2 y_1) hol.true thm_509 (thm_1112 A y_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= x) y))) Data.Bool.F) ;)

(; dict ;)

def thm_1114 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A x_2 y_1)) hol.false) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hol.TRANS hol.bool (hol.not (hol.eq A x_2 y_1)) (hol.not hol.true) hol.false (thm_1113 A y_1 x_2 hyp_1) thm_16.

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((= x) y)))) (Data.Bool.\/ Data.Bool.F)) ;)

(; dict ;)

def thm_1115 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.eq A x_2 y_1))) (hol.or hol.false)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (hol.eq A x_2 y_1)) hol.false thm_1019 (thm_1114 A y_1 x_2 hyp_1).

(; Theorem: |- ((= z) z) ;)

(; dict ;)

def thm_1116 : A : hol.type -> z_1 : hol.term A -> hol.proof (hol.eq A z_1 z_1) :=
  A : hol.type => z_1 : hol.term A => hol.REFL A z_1.

(; Theorem: |- ((= ((= x) z)) ((= y) z)) ;)

(; dict ;)

def thm_1117 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 y_1) -> hol.proof (hol.eq hol.bool (hol.eq A x_3 z_2) (hol.eq A y_1 z_2)) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 y_1) => hol.APP_THM A hol.bool (hol.eq A x_3) (hol.eq A y_1) z_2 z_2 (thm_1108 A y_1 x_3 hyp_1) (thm_1116 A z_2).

(; Theorem: |- ((= (Data.Bool.~ ((= x) z))) (Data.Bool.~ ((= y) z))) ;)

(; dict ;)

def thm_1118 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 y_1) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A x_3 z_2)) (hol.not (hol.eq A y_1 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 y_1) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq A x_3 z_2) (hol.eq A y_1 z_2) thm_509 (thm_1117 A y_1 z_2 x_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((= x) z)))) (Data.Bool.\/ (Data.Bool.~ ((= y) z)))) ;)

(; dict ;)

def thm_1119 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 y_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.eq A x_3 z_2))) (hol.or (hol.not (hol.eq A y_1 z_2)))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 y_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (hol.eq A x_3 z_2)) (hol.not (hol.eq A y_1 z_2)) thm_1019 (thm_1118 A y_1 z_2 x_3 hyp_1).

(; Theorem: |- ((= ((= y) z)) ((= y) z)) ;)

(; dict ;)

def thm_1120 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.REFL hol.bool (hol.eq A y_2 z_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1121 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 y_1) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A x_3 z_2)) (hol.eq A y_1 z_2)) (hol.or (hol.not (hol.eq A y_1 z_2)) (hol.eq A y_1 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 y_1) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.eq A x_3 z_2))) (hol.or (hol.not (hol.eq A y_1 z_2))) (hol.eq A y_1 z_2) (hol.eq A y_1 z_2) (thm_1119 A y_1 z_2 x_3 hyp_1) (thm_1120 A z_2 y_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ Data.Bool.F) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1122 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 y_2) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.or hol.false (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 y_2) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.eq A x_3 y_2))) (hol.or hol.false) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1115 A y_2 x_3 hyp_1) (thm_1121 A y_2 z_1 x_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)))) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1123 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or hol.false (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => (t_1 : hol.term hol.bool => thm_785 t_1) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1124 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 y_2) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 y_2) => hol.TRANS hol.bool (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.or hol.false (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1122 A z_1 y_2 x_3 hyp_1) (thm_1123 A z_1 y_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1125 : A : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> y_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_1 y_3) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_3 z_2)) (hol.eq A y_3 z_2)) (hol.or (hol.not (hol.eq A x_1 y_3)) (hol.or (hol.not (hol.eq A x_1 z_2)) (hol.eq A y_3 z_2)))) :=
  A : hol.type => x_1 : hol.term A => z_2 : hol.term A => y_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_1 y_3) => hol.SYM hol.bool (hol.or (hol.not (hol.eq A x_1 y_3)) (hol.or (hol.not (hol.eq A x_1 z_2)) (hol.eq A y_3 z_2))) (hol.or (hol.not (hol.eq A y_3 z_2)) (hol.eq A y_3 z_2)) (thm_1124 A z_2 y_3 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1126 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.REFL hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1127 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.SYM hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1126 A z_1 y_2).

(; Theorem: |- ((= (= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z)))) (= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z)))) ;)

(; dict ;)

def thm_1128 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1))) (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1))).

(; Theorem: |- ((= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) Data.Bool.F)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_1129 : hol.proof (hol.eq hol.bool ((__626_1 : hol.term hol.bool => hol.or (hol.not __626_1) __626_1) hol.false) (hol.or (hol.not hol.false) hol.false)) :=
  hol.BETA_CONV hol.bool hol.bool (__626_1 : hol.term hol.bool => hol.or (hol.not __626_1) __626_1) hol.false.

(; Theorem: |- ((= ((= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z))) (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) Data.Bool.F))) ((= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_1130 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) hol.false)) (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1))) (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1))) ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) hol.false) (hol.or (hol.not hol.false) hol.false) (thm_1128 A z_1 y_2) thm_1129.

(; Theorem: |- ((= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1131 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.BETA_CONV hol.bool hol.bool (__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1).

(; Theorem: |- ((= (= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z)))) (= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1132 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1))) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) thm_561 (thm_1131 A z_1 y_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_1133 : hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) hol.false) (hol.or (hol.not hol.false) hol.false)) :=
  hol.REFL hol.bool (hol.or (hol.not hol.false) hol.false).

(; Theorem: |- ((= ((= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_1134 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false)) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1))) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not hol.false) hol.false) (hol.or (hol.not hol.false) hol.false) (thm_1132 A z_1 y_2) thm_1133.

(; Theorem: |- ((= ((= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z))) (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) Data.Bool.F))) ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_1135 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) hol.false)) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) hol.false)) (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false)) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false)) (thm_1130 A z_1 y_2) (thm_1134 A z_1 y_2).

(; Theorem: |- ((= \lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626)) \lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626)) ;)

(; dict ;)

def thm_1136 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__626_1 : hol.term hol.bool => hol.or (hol.not __626_1) __626_1) (__626_1 : hol.term hol.bool => hol.or (hol.not __626_1) __626_1)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (__626_1 : hol.term hol.bool => hol.or (hol.not __626_1) __626_1).

(; Theorem: |- ((= ((= y) z)) Data.Bool.F) ;)

(; dict ;)

def thm_1137 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) ((= y) z))) (\lambda _626. ((Data.Bool.\/ (Data.Bool.~ _626)) _626) Data.Bool.F)) ;)

(; dict ;)

def thm_1138 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) -> hol.proof (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) hol.false)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) => hol.APP_THM hol.bool hol.bool (__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1) hol.false thm_1136 (thm_1137 A z_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_1139 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) => hol.EQ_MP (hol.eq hol.bool ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) (hol.eq A y_2 z_1)) ((__626_3 : hol.term hol.bool => hol.or (hol.not __626_3) __626_3) hol.false)) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false)) (thm_1135 A z_1 y_2) (thm_1138 A z_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1140 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) => hol.SYM hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.false) hol.false) (thm_1139 A z_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_1141 : hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) hol.false) (hol.not hol.false)) :=
  (t_1 : hol.term hol.bool => thm_790 t_1) (hol.not hol.false).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_1142 : hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) hol.false) hol.true) :=
  hol.TRANS hol.bool (hol.or (hol.not hol.false) hol.false) (hol.not hol.false) hol.true thm_1141 thm_17.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_1143 : hol.proof (hol.eq hol.bool hol.true (hol.or (hol.not hol.false) hol.false)) :=
  hol.SYM hol.bool (hol.or (hol.not hol.false) hol.false) hol.true thm_1142.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_1144 : hol.proof (hol.or (hol.not hol.false) hol.false) :=
  hol.EQ_MP hol.true (hol.or (hol.not hol.false) hol.false) thm_1143 thm_4.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)) ;)

(; dict ;)

def thm_1145 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) -> hol.proof (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) => hol.EQ_MP (hol.or (hol.not hol.false) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1140 A z_1 y_2 hyp_1) thm_1144.

(; Theorem: |- ((Data.Bool.==> ((= ((= y) z)) Data.Bool.F)) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1146 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) => thm_1145 A z_1 y_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z)))) (= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z)))) ;)

(; dict ;)

def thm_1147 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1))) (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1))).

(; Theorem: |- ((= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) Data.Bool.T)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_1148 : hol.proof (hol.eq hol.bool ((__624_1 : hol.term hol.bool => hol.or (hol.not __624_1) __624_1) hol.true) (hol.or (hol.not hol.true) hol.true)) :=
  hol.BETA_CONV hol.bool hol.bool (__624_1 : hol.term hol.bool => hol.or (hol.not __624_1) __624_1) hol.true.

(; Theorem: |- ((= ((= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z))) (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) Data.Bool.T))) ((= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_1149 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) hol.true)) (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1))) (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1))) ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) hol.true) (hol.or (hol.not hol.true) hol.true) (thm_1147 A z_1 y_2) thm_1148.

(; Theorem: |- ((= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1150 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.BETA_CONV hol.bool hol.bool (__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1).

(; Theorem: |- ((= (= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z)))) (= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1151 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1))) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) thm_561 (thm_1150 A z_1 y_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_1152 : hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) hol.true) (hol.or (hol.not hol.true) hol.true)) :=
  hol.REFL hol.bool (hol.or (hol.not hol.true) hol.true).

(; Theorem: |- ((= ((= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T))) ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_1153 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true)) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1))) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not hol.true) hol.true) (hol.or (hol.not hol.true) hol.true) (thm_1151 A z_1 y_2) thm_1152.

(; Theorem: |- ((= ((= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z))) (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) Data.Bool.T))) ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_1154 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) hol.true)) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) hol.true)) (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true)) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true)) (thm_1149 A z_1 y_2) (thm_1153 A z_1 y_2).

(; Theorem: |- ((= \lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624)) \lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624)) ;)

(; dict ;)

def thm_1155 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__624_1 : hol.term hol.bool => hol.or (hol.not __624_1) __624_1) (__624_1 : hol.term hol.bool => hol.or (hol.not __624_1) __624_1)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (__624_1 : hol.term hol.bool => hol.or (hol.not __624_1) __624_1).

(; Theorem: |- ((= ((= y) z)) Data.Bool.T) ;)

(; dict ;)

def thm_1156 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) ((= y) z))) (\lambda _624. ((Data.Bool.\/ (Data.Bool.~ _624)) _624) Data.Bool.T)) ;)

(; dict ;)

def thm_1157 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) -> hol.proof (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) hol.true)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) => hol.APP_THM hol.bool hol.bool (__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1) hol.true thm_1155 (thm_1156 A z_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_1158 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) => hol.EQ_MP (hol.eq hol.bool ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) (hol.eq A y_2 z_1)) ((__624_3 : hol.term hol.bool => hol.or (hol.not __624_3) __624_3) hol.true)) (hol.eq hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true)) (thm_1154 A z_1 y_2) (thm_1157 A z_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1159 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) => hol.SYM hol.bool (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not hol.true) hol.true) (thm_1158 A z_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1160 : hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_782 t_1) (hol.not hol.true).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_1161 : hol.proof (hol.eq hol.bool hol.true (hol.or (hol.not hol.true) hol.true)) :=
  hol.SYM hol.bool (hol.or (hol.not hol.true) hol.true) hol.true thm_1160.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1162 : hol.proof (hol.or (hol.not hol.true) hol.true) :=
  hol.EQ_MP hol.true (hol.or (hol.not hol.true) hol.true) thm_1161 thm_4.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)) ;)

(; dict ;)

def thm_1163 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) -> hol.proof (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) => hol.EQ_MP (hol.or (hol.not hol.true) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1159 A z_1 y_2 hyp_1) thm_1162.

(; Theorem: |- ((Data.Bool.==> ((= ((= y) z)) Data.Bool.T)) ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z))) ;)

(; dict ;)

def thm_1164 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) => thm_1163 A z_1 y_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= ((= y) z)) Data.Bool.T)) ((= ((= y) z)) Data.Bool.F)) ;)

(; dict ;)

def thm_1165 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.or (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => thm_22 (hol.eq A y_2 z_1).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)) ;)

(; dict ;)

def thm_1166 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false)) -> hol.proof (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)) ;)

(; dict ;)

def thm_1167 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) -> hol.proof (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1165 A z_1 y_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false)) => thm_1166 A z_1 y_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)) ;)

(; dict ;)

def thm_1168 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) -> hol.proof (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1164 A z_1 y_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.true) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) => thm_1167 A z_1 y_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= y) z))) ((= y) z)) ;)

(; dict ;)

def thm_1169 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => hol.PROVE_HYP (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1146 A z_1 y_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool (hol.eq A y_2 z_1) hol.false) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1))) => thm_1168 A z_1 y_2 hyp_1).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1170 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 y_2) -> hol.proof (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 y_2) => hol.EQ_MP (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1125 A x_3 z_1 y_2 hyp_1) (hol.EQ_MP (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1127 A z_1 y_2) (hol.EQ_MP (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (hol.or (hol.not (hol.eq A y_2 z_1)) (hol.eq A y_2 z_1)) (thm_1126 A z_1 y_2) (thm_1169 A z_1 y_2))).

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1171 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp (hol.eq A x_3 y_2) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 y_2) => thm_1170 A z_1 y_2 x_3 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= x) y)) (Data.Bool.~ ((= x) y))) ;)

(; dict ;)

def thm_1172 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.or (hol.eq A x_2 y_1) (hol.not (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_37 (hol.eq A x_2 y_1).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1173 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq A x_3 y_2) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq A x_3 y_2) (hol.not (hol.eq A x_3 y_2))) -> hol.proof (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq A x_3 y_2) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => hyp_3 : hol.proof (hol.or (hol.eq A x_3 y_2) (hol.not (hol.eq A x_3 y_2))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.not (hol.eq A x_3 y_2)) (hol.eq A x_3 y_2) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1174 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq A x_3 y_2) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) -> hol.proof (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq A x_3 y_2) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => hol.PROVE_HYP (hol.or (hol.eq A x_3 y_2) (hol.not (hol.eq A x_3 y_2))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1172 A y_2 x_3) (hyp_3 : hol.proof (hol.or (hol.eq A x_3 y_2) (hol.not (hol.eq A x_3 y_2))) => thm_1173 A z_1 y_2 x_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1175 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) -> hol.proof (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => hol.PROVE_HYP (hol.imp (hol.eq A x_3 y_2) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1171 A z_1 y_2 x_3) (hyp_2 : hol.proof (hol.imp (hol.eq A x_3 y_2) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => thm_1174 A z_1 y_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1176 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.PROVE_HYP (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1103 A z_1 y_2 x_3) (hyp_1 : hol.proof (hol.imp (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => thm_1175 A z_1 y_2 x_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= x) x)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z)))) ;)

(; dict ;)

def thm_1177 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.EQ_MP (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (thm_1074 A z_1 y_2 x_3) (thm_1176 A z_1 y_2 x_3).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1178 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) -> hol.proof (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) hyp_1.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1179 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.PROVE_HYP (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1))) (thm_1177 A z_1 y_2 x_3) (hyp_1 : hol.proof (hol.and (hol.eq A x_3 x_3) (hol.or (hol.not (hol.eq A x_3 y_2)) (hol.or (hol.not (hol.eq A x_3 z_1)) (hol.eq A y_2 z_1)))) => thm_1178 A z_1 y_2 x_3 hyp_1).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) ((Data.Bool.\/ (Data.Bool.~ ((= x) z))) ((= y) z))) ;)

(; dict ;)

def thm_1180 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.or (hol.not (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1))) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => (A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => thm_1179 A z_1 y_2 x_3) hol.ind z_1 y_2 x_3.

(; Theorem: |- ((Data.Bool.\/ ((= y) z)) ((Data.Bool.\/ (Data.Bool.~ ((= x) y))) (Data.Bool.~ ((= x) z)))) ;)

(; dict ;)

def thm_1181 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> hol.proof (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => y_3 : hol.term hol.ind => hol.EQ_MP (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.or (hol.not (hol.eq hol.ind x_1 z_2)) (hol.eq hol.ind y_3 z_2))) (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2)))) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.or (hol.not (hol.eq hol.ind x_1 z_2)) (hol.eq hol.ind y_3 z_2))) (hol.or (hol.eq hol.ind y_3 z_2) (hol.or (hol.not (hol.eq hol.ind x_1 y_3)) (hol.not (hol.eq hol.ind x_1 z_2))))) (thm_1068 z_2 y_3 x_1) thm_4) (thm_1180 z_2 y_3 x_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= x) z))) ((= y) z)) ;)

(; dict ;)

def thm_1182 : z_1 : hol.term hol.ind -> y_2 : hol.term hol.ind -> x_3 : hol.term hol.ind -> hol.proof (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) :=
  z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.EQ_MP (hol.or (hol.eq hol.ind y_2 z_1) (hol.or (hol.not (hol.eq hol.ind x_3 y_2)) (hol.not (hol.eq hol.ind x_3 z_1)))) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (thm_958 x_3 z_1 y_2) (thm_1181 x_3 z_1 y_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0))) ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1183 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.EQ_MP (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (hol.imp (hol.and (hol.eq hol.ind x_3 y_2) (hol.eq hol.ind x_3 z_1)) (hol.eq hol.ind y_2 z_1)) (thm_754 z_1 y_2 x_3) (thm_1182 z_1 y_2 x_3)) HOLLight_2EIND__0 (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1184 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1185 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1186 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1185 n_1) (thm_1185 n_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1187 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => thm_1182 z_1 y_2 x_3) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1188 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1189 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1190 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (thm_1189 n_1) (thm_1189 n_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= _1924) _1925)) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ((Data.Bool.==> ((= _1924) _1925)) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ;)

(; dict ;)

def thm_1191 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((= _1924) _1925)) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ((Data.Bool.==> ((= _1924) _1925)) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ;)

(; dict ;)

def thm_1192 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (thm_1191 __1925_1 __1924_2) (thm_1191 __1925_1 __1924_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925)))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= _1924) _1925)))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ;)

(; dict ;)

def thm_1193 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.imp (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => thm_846 b_1 a_2) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= _1924) _1925)))) ((= _1924) _1925)) ;)

(; dict ;)

def thm_1194 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => (a_1 : hol.term hol.bool => thm_943 a_1) (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= _1924) _1925))))) (Data.Bool.==> ((= _1924) _1925))) ;)

(; dict ;)

def thm_1195 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) thm_126 (thm_1194 __1925_1 __1924_2).

(; Theorem: |- ((= ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) ;)

(; dict ;)

def thm_1196 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= _1924) _1925)))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ((Data.Bool.==> ((= _1924) _1925)) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ;)

(; dict ;)

def thm_1197 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (thm_1195 __1925_1 __1924_2) (thm_1196 __1925_1 __1924_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925)))) ((Data.Bool.==> ((= _1924) _1925)) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ;)

(; dict ;)

def thm_1198 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.imp (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (thm_1193 __1925_1 __1924_2) (thm_1197 __1925_1 __1924_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= _1924) _1925))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925)))) ;)

(; dict ;)

def thm_1199 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_975 q_1 p_2) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.~ ((= _1924) _1925))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))))) (= ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925))))) ;)

(; dict ;)

def thm_1200 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)))) (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) thm_561 (thm_1199 __1925_1 __1924_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925)))) ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925)))) ;)

(; dict ;)

def thm_1201 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ ((= _1924) _1925))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925))))) ((= ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925)))) ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925))))) ;)

(; dict ;)

def thm_1202 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)))) (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (thm_1200 __1925_1 __1924_2) (thm_1201 __1925_1 __1924_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925)))) ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925))))) Data.Bool.T) ;)

(; dict ;)

def thm_1203 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) hol.true) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ ((= _1924) _1925))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925))))) Data.Bool.T) ;)

(; dict ;)

def thm_1204 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) hol.true) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) hol.true (thm_1202 __1925_1 __1924_2) (thm_1203 __1925_1 __1924_2).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ (Data.Bool.~ ((= _1924) _1925))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925))))) ;)

(; dict ;)

def thm_1205 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.SYM hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) hol.true (thm_1204 __1925_1 __1924_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ;)

(; dict ;)

def thm_1206 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ;)

(; dict ;)

def thm_1207 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_1206 b_1 a_2) (thm_1206 b_1 a_2).

(; Theorem: |- ((= (= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a))) (= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a))) ;)

(; dict ;)

def thm_1208 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1)) (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1)).

(; Theorem: |- ((= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) Data.Bool.F)) ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b))) ;)

(; dict ;)

def thm_1209 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__630_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_2 b_1) (hol.or (hol.not __630_2) b_1)) hol.false) (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__630_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_2 b_1) (hol.or (hol.not __630_2) b_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a)) (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) Data.Bool.F))) ((= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a)) ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b)))) ;)

(; dict ;)

def thm_1210 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) hol.false)) (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1)) (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1)) ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) hol.false) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2)) (thm_1208 a_1 b_2) (thm_1209 b_2).

(; Theorem: |- ((= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a)) ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ;)

(; dict ;)

def thm_1211 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1.

(; Theorem: |- ((= (= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a))) (= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b)))) ;)

(; dict ;)

def thm_1212 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) thm_561 (thm_1211 a_1 b_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b))) ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b))) ;)

(; dict ;)

def thm_1213 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)) (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)).

(; Theorem: |- ((= ((= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a)) ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b)))) ((= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b)))) ;)

(; dict ;)

def thm_1214 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2))) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2)) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2)) (thm_1212 a_1 b_2) (thm_1213 b_2).

(; Theorem: |- ((= ((= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a)) (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) Data.Bool.F))) ((= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b)))) ;)

(; dict ;)

def thm_1215 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) hol.false)) (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2))) (thm_1210 a_1 b_2) (thm_1214 a_1 b_2).

(; Theorem: |- ((= \lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b))) \lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b))) ;)

(; dict ;)

def thm_1216 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__630_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_2 b_1) (hol.or (hol.not __630_2) b_1)) (__630_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_2 b_1) (hol.or (hol.not __630_2) b_1))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__630_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_2 b_1) (hol.or (hol.not __630_2) b_1)).

(; Theorem: |- ((= (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) a)) (\lambda _630. ((= ((Data.Bool.==> _630) b)) ((Data.Bool.\/ (Data.Bool.~ _630)) b)) Data.Bool.F)) ;)

(; dict ;)

def thm_1217 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1) ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) hol.false)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.APP_THM hol.bool hol.bool (__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) (__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_2) (hol.or (hol.not __630_3) b_2)) a_1 hol.false (thm_1216 b_2) (thm_766 a_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b))) ;)

(; dict ;)

def thm_1218 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_1) (hol.or (hol.not __630_3) b_1)) a_2) ((__630_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __630_3 b_1) (hol.or (hol.not __630_3) b_1)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1))) (thm_1215 a_2 b_1) (thm_1217 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b))) ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ;)

(; dict ;)

def thm_1219 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2)) (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) (hol.eq hol.bool (hol.imp hol.false b_2) (hol.or (hol.not hol.false) b_2)) (thm_1218 b_2 a_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) b)) Data.Bool.T) ;)

(; dict ;)

def thm_1220 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false b_1) hol.true) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_553 t_1) b_1.

(; Theorem: |- ((= (= ((Data.Bool.==> Data.Bool.F) b))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_1221 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp hol.false b_1)) (hol.eq hol.bool hol.true)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp hol.false b_1) hol.true thm_561 (thm_1220 b_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ Data.Bool.F))) (Data.Bool.\/ Data.Bool.T)) ;)

(; dict ;)

def thm_1222 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not hol.false)) (hol.or hol.true)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not hol.false) hol.true thm_1019 thm_17.

(; Theorem: |- ((= b) b) ;)

(; dict ;)

def thm_1223 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool b_1 b_1) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool b_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b)) ((Data.Bool.\/ Data.Bool.T) b)) ;)

(; dict ;)

def thm_1224 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) b_1) (hol.or hol.true b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.false)) (hol.or hol.true) b_1 b_1 thm_1222 (thm_1223 b_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b)) Data.Bool.T) ;)

(; dict ;)

def thm_1225 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) b_1) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.false) b_1) (hol.or hol.true b_1) hol.true (thm_1224 b_1) (thm_832 b_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_1226 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)) (hol.eq hol.bool hol.true hol.true)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp hol.false b_1)) (hol.eq hol.bool hol.true) (hol.or (hol.not hol.false) b_1) hol.true (thm_1221 b_1) (thm_1225 b_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b))) Data.Bool.T) ;)

(; dict ;)

def thm_1227 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)) (hol.eq hol.bool hol.true hol.true) hol.true (thm_1226 b_1) thm_836.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b))) ;)

(; dict ;)

def thm_1228 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)) hol.true (thm_1227 b_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) b)) ;)

(; dict ;)

def thm_1229 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)) (thm_1228 b_1) thm_4.

(; Theorem: |- ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b)) ;)

(; dict ;)

def thm_1230 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false b_1) (hol.or (hol.not hol.false) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_1219 a_2 b_1 hyp_1) (thm_1229 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.F)) ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ;)

(; dict ;)

def thm_1231 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => thm_1230 b_1 a_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a))) (= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a))) ;)

(; dict ;)

def thm_1232 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1)) (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1)).

(; Theorem: |- ((= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b))) ;)

(; dict ;)

def thm_1233 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__628_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_2 b_1) (hol.or (hol.not __628_2) b_1)) hol.true) (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__628_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_2 b_1) (hol.or (hol.not __628_2) b_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a)) (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) Data.Bool.T))) ((= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a)) ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b)))) ;)

(; dict ;)

def thm_1234 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) hol.true)) (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1)) (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1)) ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) hol.true) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2)) (thm_1232 a_1 b_2) (thm_1233 b_2).

(; Theorem: |- ((= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a)) ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ;)

(; dict ;)

def thm_1235 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1.

(; Theorem: |- ((= (= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a))) (= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b)))) ;)

(; dict ;)

def thm_1236 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) thm_561 (thm_1235 a_1 b_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b))) ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b))) ;)

(; dict ;)

def thm_1237 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)) (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)).

(; Theorem: |- ((= ((= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a)) ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b)))) ((= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b)))) ;)

(; dict ;)

def thm_1238 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2))) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2)) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2)) (thm_1236 a_1 b_2) (thm_1237 b_2).

(; Theorem: |- ((= ((= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a)) (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) Data.Bool.T))) ((= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b)))) ;)

(; dict ;)

def thm_1239 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) hol.true)) (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2))) (thm_1234 a_1 b_2) (thm_1238 a_1 b_2).

(; Theorem: |- ((= \lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b))) \lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b))) ;)

(; dict ;)

def thm_1240 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__628_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_2 b_1) (hol.or (hol.not __628_2) b_1)) (__628_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_2 b_1) (hol.or (hol.not __628_2) b_1))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__628_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_2 b_1) (hol.or (hol.not __628_2) b_1)).

(; Theorem: |- ((= (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) a)) (\lambda _628. ((= ((Data.Bool.==> _628) b)) ((Data.Bool.\/ (Data.Bool.~ _628)) b)) Data.Bool.T)) ;)

(; dict ;)

def thm_1241 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1) ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) hol.true)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.APP_THM hol.bool hol.bool (__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) (__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_2) (hol.or (hol.not __628_3) b_2)) a_1 hol.true (thm_1240 b_2) (thm_828 a_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b))) ;)

(; dict ;)

def thm_1242 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_1) (hol.or (hol.not __628_3) b_1)) a_2) ((__628_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __628_3 b_1) (hol.or (hol.not __628_3) b_1)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1))) (thm_1239 a_2 b_1) (thm_1241 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b))) ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ;)

(; dict ;)

def thm_1243 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2)) (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp a_1 b_2) (hol.or (hol.not a_1) b_2)) (hol.eq hol.bool (hol.imp hol.true b_2) (hol.or (hol.not hol.true) b_2)) (thm_1242 b_2 a_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) b)) b) ;)

(; dict ;)

def thm_1244 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true b_1) b_1) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_543 t_1) b_1.

(; Theorem: |- ((= (= ((Data.Bool.==> Data.Bool.T) b))) (= b)) ;)

(; dict ;)

def thm_1245 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp hol.true b_1)) (hol.eq hol.bool b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp hol.true b_1) b_1 thm_561 (thm_1244 b_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ Data.Bool.T))) (Data.Bool.\/ Data.Bool.F)) ;)

(; dict ;)

def thm_1246 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not hol.true)) (hol.or hol.false)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not hol.true) hol.false thm_1019 thm_16.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b)) ((Data.Bool.\/ Data.Bool.F) b)) ;)

(; dict ;)

def thm_1247 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) b_1) (hol.or hol.false b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.true)) (hol.or hol.false) b_1 b_1 thm_1246 (thm_1223 b_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b)) b) ;)

(; dict ;)

def thm_1248 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) b_1) b_1) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.true) b_1) (hol.or hol.false b_1) b_1 (thm_1247 b_1) (thm_807 b_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b))) ((= b) b)) ;)

(; dict ;)

def thm_1249 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)) (hol.eq hol.bool b_1 b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp hol.true b_1)) (hol.eq hol.bool b_1) (hol.or (hol.not hol.true) b_1) b_1 (thm_1245 b_1) (thm_1248 b_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b))) Data.Bool.T) ;)

(; dict ;)

def thm_1250 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)) (hol.eq hol.bool b_1 b_1) hol.true (thm_1249 b_1) (thm_813 b_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b))) ;)

(; dict ;)

def thm_1251 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)) hol.true (thm_1250 b_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) b)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) b)) ;)

(; dict ;)

def thm_1252 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)) (thm_1251 b_1) thm_4.

(; Theorem: |- ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b)) ;)

(; dict ;)

def thm_1253 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true b_1) (hol.or (hol.not hol.true) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_1243 a_2 b_1 hyp_1) (thm_1252 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.T)) ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b))) ;)

(; dict ;)

def thm_1254 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => thm_1253 b_1 a_2 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b)) ;)

(; dict ;)

def thm_1255 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b)) ;)

(; dict ;)

def thm_1256 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) -> hol.proof (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_842 a_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => thm_1255 b_1 a_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b)) ;)

(; dict ;)

def thm_1257 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) -> hol.proof (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_1254 b_1 a_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) => thm_1256 b_1 a_2 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> a) b)) ((Data.Bool.\/ (Data.Bool.~ a)) b)) ;)

(; dict ;)

def thm_1258 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_1231 b_1 a_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1))) => thm_1257 b_1 a_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= _1924) _1925)) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ((Data.Bool.\/ (Data.Bool.~ ((= _1924) _1925))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)))) ;)

(; dict ;)

def thm_1259 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_1207 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_1206 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (hol.eq hol.bool (hol.imp a_2 b_1) (hol.or (hol.not a_2) b_1)) (thm_1206 b_1 a_2) (thm_1258 b_1 a_2)))) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1).

(; Theorem: |- ((= HOLLight.dest_num) HOLLight.dest_num) ;)

(; dict ;)

def thm_1260 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.ind) HOLLight_2Edest__num HOLLight_2Edest__num) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural hol.ind) HOLLight_2Edest__num.

(; Theorem: |- ((= _1924) _1925) ;)

(; dict ;)

def thm_1261 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) => hyp_1.

(; Theorem: |- ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925)) ;)

(; dict ;)

def thm_1262 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) => hol.APP_THM Number_2ENatural_2Enatural hol.ind HOLLight_2Edest__num HOLLight_2Edest__num __1924_2 __1925_1 thm_1260 (thm_1261 __1925_1 __1924_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= _1924) _1925)) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) ;)

(; dict ;)

def thm_1263 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) => thm_1262 __1925_1 __1924_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= _1924) _1925))) ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) ;)

(; dict ;)

def thm_1264 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (thm_1259 __1925_1 __1924_2) (thm_1263 __1925_1 __1924_2).

(; Theorem: |- ((Data.Bool.\/ ((= (HOLLight.dest_num _1924)) (HOLLight.dest_num _1925))) (Data.Bool.~ ((= _1924) _1925))) ;)

(; dict ;)

def thm_1265 : __1925_1 : hol.term Number_2ENatural_2Enatural -> __1924_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) :=
  __1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.or (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1)))) (thm_1205 __1925_1 __1924_2) thm_4) (thm_1264 __1925_1 __1924_2).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1266 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (__1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (thm_1192 __1925_1 __1924_2) (hol.EQ_MP (hol.or (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1)) (hol.not (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1))) (hol.imp (hol.eq Number_2ENatural_2Enatural __1924_2 __1925_1) (hol.eq hol.ind (HOLLight_2Edest__num __1924_2) (HOLLight_2Edest__num __1925_1))) (thm_1198 __1925_1 __1924_2) (thm_1265 __1925_1 __1924_2))) (HOLLight_2Emk__num HOLLight_2EIND__0) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_1267 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => thm_1266 n_1 (thm_650 n_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1268 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_2 : hol.proof (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (thm_1190 n_1) (thm_1267 n_1 hyp_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((Data.Bool./\ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_1269 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) hyp_1.

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((Data.Bool./\ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_1270 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hol.PROVE_HYP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (thm_1188 n_1) (thm_1268 n_1 hyp_1)) (hyp_2 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) => thm_1269 n_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1271 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1272 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1273 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1272 n_1) (thm_1272 n_1).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP _1921)) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.==> (HOLLight.NUM_REP _1921)) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ;)

(; dict ;)

def thm_1274 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) :=
  __1921_1 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP _1921)) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.==> (HOLLight.NUM_REP _1921)) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ;)

(; dict ;)

def thm_1275 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) :=
  __1921_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (thm_1274 __1921_1) (thm_1274 __1921_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ;)

(; dict ;)

def thm_1276 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) :=
  __1921_1 : hol.term hol.ind => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => thm_846 b_1 a_2) (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ (HOLLight.NUM_REP _1921)))) (HOLLight.NUM_REP _1921)) ;)

(; dict ;)

def thm_1277 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.not (HOLLight_2ENUM__REP __1921_1))) (HOLLight_2ENUM__REP __1921_1)) :=
  __1921_1 : hol.term hol.ind => (a_1 : hol.term hol.bool => thm_943 a_1) (HOLLight_2ENUM__REP __1921_1).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ (Data.Bool.~ (HOLLight.NUM_REP _1921))))) (Data.Bool.==> (HOLLight.NUM_REP _1921))) ;)

(; dict ;)

def thm_1278 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1921_1)))) (hol.imp (HOLLight_2ENUM__REP __1921_1))) :=
  __1921_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1921_1))) (HOLLight_2ENUM__REP __1921_1) thm_126 (thm_1277 __1921_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) ;)

(; dict ;)

def thm_1279 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) :=
  __1921_1 : hol.term hol.ind => hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.==> (HOLLight.NUM_REP _1921)) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ;)

(; dict ;)

def thm_1280 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) :=
  __1921_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1921_1)))) (hol.imp (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (thm_1278 __1921_1) (thm_1279 __1921_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ((Data.Bool.==> (HOLLight.NUM_REP _1921)) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ;)

(; dict ;)

def thm_1281 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) :=
  __1921_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (thm_1276 __1921_1) (thm_1280 __1921_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ;)

(; dict ;)

def thm_1282 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) :=
  __1921_1 : hol.term hol.ind => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_975 q_1 p_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)))) (= ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921))))) ;)

(; dict ;)

def thm_1283 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))))) :=
  __1921_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) thm_561 (thm_1282 __1921_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ;)

(; dict ;)

def thm_1284 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) :=
  __1921_1 : hol.term hol.ind => hol.REFL hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921))))) ((= ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921))))) ;)

(; dict ;)

def thm_1285 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))))) :=
  __1921_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (thm_1283 __1921_1) (thm_1284 __1921_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921))))) Data.Bool.T) ;)

(; dict ;)

def thm_1286 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) hol.true) :=
  __1921_1 : hol.term hol.ind => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921))))) Data.Bool.T) ;)

(; dict ;)

def thm_1287 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) hol.true) :=
  __1921_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) (hol.eq hol.bool (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) hol.true (thm_1285 __1921_1) (thm_1286 __1921_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921))))) ;)

(; dict ;)

def thm_1288 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))))) :=
  __1921_1 : hol.term hol.ind => hol.SYM hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) hol.true (thm_1287 __1921_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921)))) (Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921)))) ;)

(; dict ;)

def thm_1289 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)))) :=
  __1921_1 : hol.term hol.ind => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ;)

(; dict ;)

def thm_1290 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) :=
  __1921_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (thm_1289 __1921_1) (thm_1279 __1921_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921))) ;)

(; dict ;)

def thm_1291 : __1921_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1))) :=
  __1921_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (thm_1290 __1921_1) (thm_1290 __1921_1).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1292 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hol.REFL hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1293 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hol.TRANS hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_1292 thm_1292.

(; Theorem: |- ((= HOLLight.NUM_REP) HOLLight.NUM_REP) ;)

(; dict ;)

def thm_1294 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) HOLLight_2ENUM__REP HOLLight_2ENUM__REP) :=
  hol.REFL (hol.arr hol.ind hol.bool) HOLLight_2ENUM__REP.

(; Theorem: |- ((= r) r) ;)

(; dict ;)

def thm_1295 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind r_1 r_1) :=
  r_1 : hol.term hol.ind => hol.REFL hol.ind r_1.

(; Theorem: |- ((= (HOLLight.NUM_REP r)) (HOLLight.NUM_REP r)) ;)

(; dict ;)

def thm_1296 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (HOLLight_2ENUM__REP r_1)) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.ind hol.bool HOLLight_2ENUM__REP HOLLight_2ENUM__REP r_1 r_1 thm_1294 (thm_1295 r_1).

(; Theorem: |- ((= (Data.Bool.\/ (HOLLight.NUM_REP r))) (Data.Bool.\/ (HOLLight.NUM_REP r))) ;)

(; dict ;)

def thm_1297 : r_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (HOLLight_2ENUM__REP r_1)) (hol.or (HOLLight_2ENUM__REP r_1))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (HOLLight_2ENUM__REP r_1) (HOLLight_2ENUM__REP r_1) thm_1019 (thm_1296 r_1).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_1298 : hol.proof (hol.eq (hol.arr hol.ind (hol.arr hol.ind hol.bool)) (hol.eq hol.ind) (hol.eq hol.ind)) :=
  hol.REFL (hol.arr hol.ind (hol.arr hol.ind hol.bool)) (hol.eq hol.ind).

(; Theorem: |- ((= (HOLLight.mk_num r)) (HOLLight.mk_num r)) ;)

(; dict ;)

def thm_1299 : r_1 : hol.term hol.ind -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num r_1) (HOLLight_2Emk__num r_1)) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.ind Number_2ENatural_2Enatural HOLLight_2Emk__num HOLLight_2Emk__num r_1 r_1 thm_647 (thm_1295 r_1).

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num r))) (HOLLight.dest_num (HOLLight.mk_num r))) ;)

(; dict ;)

def thm_1300 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) (HOLLight_2Edest__num (HOLLight_2Emk__num r_1))) :=
  r_1 : hol.term hol.ind => hol.APP_THM Number_2ENatural_2Enatural hol.ind HOLLight_2Edest__num HOLLight_2Edest__num (HOLLight_2Emk__num r_1) (HOLLight_2Emk__num r_1) thm_1260 (thm_1299 r_1).

(; Theorem: |- ((= (= (HOLLight.dest_num (HOLLight.mk_num r)))) (= (HOLLight.dest_num (HOLLight.mk_num r)))) ;)

(; dict ;)

def thm_1301 : r_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) thm_1298 (thm_1300 r_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) ;)

(; dict ;)

def thm_1302 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1))) r_1 r_1 (thm_1301 r_1) (thm_1295 r_1).

(; Theorem: |- ((= (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ;)

(; dict ;)

def thm_1303 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) thm_509 (thm_1302 r_1).

(; Theorem: |- ((= ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1304 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.or (HOLLight_2ENUM__REP r_1)) (hol.or (HOLLight_2ENUM__REP r_1)) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (thm_1297 r_1) (thm_1303 r_1).

(; Theorem: |- ((= \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1305 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hol.ABS_THM hol.ind hol.bool (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (r_1 : hol.term hol.ind => thm_1304 r_1).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1306 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_72 thm_1305.

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))))) (Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))))) ;)

(; dict ;)

def thm_1307 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) thm_191 thm_1306.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ((Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1308 : hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_1307 thm_1292.

(; Theorem: |- ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1309 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))).

(; Theorem: |- ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1310 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1309 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p))) (= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p))) ;)

(; dict ;)

def thm_1311 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)).

(; Theorem: |- ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) Data.Bool.F)) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1312 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1))) hol.false) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) Data.Bool.F))) ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1313 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false)) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (thm_1311 p_1 q_2) (thm_1312 q_2).

(; Theorem: |- ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1314 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p))) (= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))))) ;)

(; dict ;)

def thm_1315 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) thm_561 (thm_1314 p_1 q_2).

(; Theorem: |- ((= ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1316 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))).

(; Theorem: |- ((= ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))))) ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1317 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (thm_1315 p_1 q_2) (thm_1316 q_2).

(; Theorem: |- ((= ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) Data.Bool.F))) ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1318 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false)) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2)))) (thm_1313 p_1 q_2) (thm_1317 p_1 q_2).

(; Theorem: |- ((= \lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q)))) \lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q)))) ;)

(; dict ;)

def thm_1319 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1))) (__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1))).

(; Theorem: |- ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) Data.Bool.F)) ;)

(; dict ;)

def thm_1320 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) (__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1 hol.false (thm_1319 q_2) (thm_662 p_1 hyp_1).

(; Theorem: |- ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1321 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_1) (hol.and (hol.or __554_3 (hol.not q_1)) (hol.or (hol.not __554_3) q_1))) p_2) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_1) (hol.and (hol.or __554_3 (hol.not q_1)) (hol.or (hol.not __554_3) q_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) (thm_1318 p_2 q_1) (thm_1320 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1322 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (thm_1321 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.F) q)) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1323 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_683 t_1) q_1.

(; Theorem: |- ((= (= ((= Data.Bool.F) q))) (= (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1324 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1)) (hol.eq hol.bool (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq hol.bool hol.false q_1) (hol.not q_1) thm_561 (thm_1323 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1325 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false (hol.not q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_785 t_1) (hol.not q_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q)))) (Data.Bool./\ (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1326 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.or hol.false (hol.not q_1))) (hol.and (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.or hol.false (hol.not q_1)) (hol.not q_1) thm_191 (thm_1325 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)) ((Data.Bool.\/ Data.Bool.T) q)) ;)

(; dict ;)

def thm_1327 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) q_1) (hol.or hol.true q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.false)) (hol.or hol.true) q_1 q_1 thm_1222 (thm_102 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) q)) Data.Bool.T) ;)

(; dict ;)

def thm_1328 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true q_1) hol.true) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_777 t_1) q_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)) Data.Bool.T) ;)

(; dict ;)

def thm_1329 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) q_1) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.false) q_1) (hol.or hol.true q_1) hol.true (thm_1327 q_1) (thm_1328 q_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ((Data.Bool./\ (Data.Bool.~ q)) Data.Bool.T)) ;)

(; dict ;)

def thm_1330 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)) (hol.and (hol.not q_1) hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.or hol.false (hol.not q_1))) (hol.and (hol.not q_1)) (hol.or (hol.not hol.false) q_1) hol.true (thm_1326 q_1) (thm_1329 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ q)) Data.Bool.T)) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1331 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not q_1) hol.true) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_877 t_1) (hol.not q_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1332 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)) (hol.and (hol.not q_1) hol.true) (hol.not q_1) (thm_1330 q_1) (thm_1331 q_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ((= (Data.Bool.~ q)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1333 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1)) (hol.eq hol.bool (hol.not q_1)) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)) (hol.not q_1) (thm_1324 q_1) (thm_1332 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ q)) (Data.Bool.~ q))) Data.Bool.T) ;)

(; dict ;)

def thm_1334 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true) :=
  q_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.not q_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) Data.Bool.T) ;)

(; dict ;)

def thm_1335 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true (thm_1333 q_1) (thm_1334 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1336 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) hol.true (thm_1335 q_1).

(; Theorem: |- ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_1337 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (thm_1336 q_1) thm_4.

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1338 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1322 p_2 q_1 hyp_1) (thm_1337 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1339 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_1338 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p))) (= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p))) ;)

(; dict ;)

def thm_1340 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)).

(; Theorem: |- ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) Data.Bool.T)) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1341 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1))) hol.true) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) Data.Bool.T))) ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1342 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true)) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (thm_1340 p_1 q_2) (thm_1341 q_2).

(; Theorem: |- ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1343 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p))) (= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))))) ;)

(; dict ;)

def thm_1344 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) thm_561 (thm_1343 p_1 q_2).

(; Theorem: |- ((= ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1345 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))).

(; Theorem: |- ((= ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))))) ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1346 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (thm_1344 p_1 q_2) (thm_1345 q_2).

(; Theorem: |- ((= ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) Data.Bool.T))) ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1347 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true)) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2)))) (thm_1342 p_1 q_2) (thm_1346 p_1 q_2).

(; Theorem: |- ((= \lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q)))) \lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q)))) ;)

(; dict ;)

def thm_1348 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1))) (__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1))).

(; Theorem: |- ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) Data.Bool.T)) ;)

(; dict ;)

def thm_1349 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) (__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1 hol.true (thm_1348 q_2) (thm_716 p_1 hyp_1).

(; Theorem: |- ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1350 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_1) (hol.and (hol.or __552_3 (hol.not q_1)) (hol.or (hol.not __552_3) q_1))) p_2) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_1) (hol.and (hol.or __552_3 (hol.not q_1)) (hol.or (hol.not __552_3) q_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) (thm_1347 p_2 q_1) (thm_1349 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1351 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (thm_1350 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.T) q)) q) ;)

(; dict ;)

def thm_1352 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_673 t_1) q_1.

(; Theorem: |- ((= (= ((= Data.Bool.T) q))) (= q)) ;)

(; dict ;)

def thm_1353 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1)) (hol.eq hol.bool q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq hol.bool hol.true q_1) q_1 thm_561 (thm_1352 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) Data.Bool.T) ;)

(; dict ;)

def thm_1354 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true (hol.not q_1)) hol.true) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_777 t_1) (hol.not q_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q)))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1355 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.or hol.true (hol.not q_1))) (hol.and hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.or hol.true (hol.not q_1)) hol.true thm_191 (thm_1354 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)) ((Data.Bool.\/ Data.Bool.F) q)) ;)

(; dict ;)

def thm_1356 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) q_1) (hol.or hol.false q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.true)) (hol.or hol.false) q_1 q_1 thm_1246 (thm_102 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) q)) q) ;)

(; dict ;)

def thm_1357 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false q_1) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_785 t_1) q_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)) q) ;)

(; dict ;)

def thm_1358 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) q_1) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.true) q_1) (hol.or hol.false q_1) q_1 (thm_1356 q_1) (thm_1357 q_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ((Data.Bool./\ Data.Bool.T) q)) ;)

(; dict ;)

def thm_1359 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)) (hol.and hol.true q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.or hol.true (hol.not q_1))) (hol.and hol.true) (hol.or (hol.not hol.true) q_1) q_1 (thm_1355 q_1) (thm_1358 q_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) q)) q) ;)

(; dict ;)

def thm_1360 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true q_1) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_872 t_1) q_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) q) ;)

(; dict ;)

def thm_1361 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)) (hol.and hol.true q_1) q_1 (thm_1359 q_1) (thm_1360 q_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ((= q) q)) ;)

(; dict ;)

def thm_1362 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (hol.eq hol.bool q_1 q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1)) (hol.eq hol.bool q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)) q_1 (thm_1353 q_1) (thm_1361 q_1).

(; Theorem: |- ((= ((= q) q)) Data.Bool.T) ;)

(; dict ;)

def thm_1363 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool q_1 q_1) hol.true) :=
  q_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_316 x_1) q_1.

(; Theorem: |- ((= ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) Data.Bool.T) ;)

(; dict ;)

def thm_1364 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (hol.eq hol.bool q_1 q_1) hol.true (thm_1362 q_1) (thm_1363 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1365 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) hol.true (thm_1364 q_1).

(; Theorem: |- ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_1366 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (thm_1365 q_1) thm_4.

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1367 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1351 p_2 q_1 hyp_1) (thm_1366 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1368 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_1367 q_1 p_2 hyp_1.

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1369 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1370 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_726 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_1369 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1371 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1368 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => thm_1370 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1372 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1339 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => thm_1371 q_1 p_2 hyp_1).

(; Theorem: |- ((= ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1373 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  r_1 : hol.term hol.ind => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1310 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1309 q_1 p_2) (thm_1372 q_1 p_2))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1374 : r_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_191 (thm_1304 r_1).

(; Theorem: |- ((= (Data.Bool.~ (HOLLight.NUM_REP r))) (Data.Bool.~ (HOLLight.NUM_REP r))) ;)

(; dict ;)

def thm_1375 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (HOLLight_2ENUM__REP r_1)) (hol.not (HOLLight_2ENUM__REP r_1))) :=
  r_1 : hol.term hol.ind => hol.REFL hol.bool (hol.not (HOLLight_2ENUM__REP r_1)).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r)))) (Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r)))) ;)

(; dict ;)

def thm_1376 : r_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (HOLLight_2ENUM__REP r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.not (HOLLight_2ENUM__REP r_1)) thm_1019 (thm_1375 r_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ;)

(; dict ;)

def thm_1377 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (thm_1376 r_1) (thm_1302 r_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1378 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (thm_1374 r_1) (thm_1377 r_1).

(; Theorem: |- ((= ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1379 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  r_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (thm_1373 r_1) (thm_1378 r_1).

(; Theorem: |- ((= \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) \lambda r. ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1380 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hol.ABS_THM hol.ind hol.bool (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (r_1 : hol.term hol.ind => thm_1379 r_1).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) (Data.Bool.! \lambda r. ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1381 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_72 thm_1380.

(; Theorem: |- ((= (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)) ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1382 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  r_1 : hol.term hol.ind => hol.BETA_CONV hol.ind hol.bool (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1.

(; Theorem: |- ((= (Data.Bool./\ (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r))) (Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1383 : r_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_191 (thm_1382 r_1).

(; Theorem: |- ((= (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r)) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ;)

(; dict ;)

def thm_1384 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) :=
  r_1 : hol.term hol.ind => hol.BETA_CONV hol.ind hol.bool (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1.

(; Theorem: |- ((= ((Data.Bool./\ (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)) (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r))) ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1385 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  r_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (thm_1383 r_1) (thm_1384 r_1).

(; Theorem: |- ((= \lambda r. ((Data.Bool./\ (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)) (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r))) \lambda r. ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1386 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)) (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hol.ABS_THM hol.ind hol.bool (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)) (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (r_1 : hol.term hol.ind => thm_1385 r_1).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool./\ (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)) (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r)))) (Data.Bool.! \lambda r. ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1387 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)) (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_72 thm_1386.

(; Theorem: |- ((= (= (Data.Bool.! \lambda r. ((Data.Bool./\ (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)) (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r))))) (= (Data.Bool.! \lambda r. ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))))) ;)

(; dict ;)

def thm_1388 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)))) (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) thm_561 thm_1387.

(; Theorem: |- ((= \lambda r. (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)) \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1389 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hol.ABS_THM hol.ind hol.bool (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (r_1 : hol.term hol.ind => thm_1382 r_1).

(; Theorem: |- ((= (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1390 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_72 thm_1389.

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)))) (Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))))) ;)

(; dict ;)

def thm_1391 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) thm_191 thm_1390.

(; Theorem: |- ((= \lambda r. (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r)) \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ;)

(; dict ;)

def thm_1392 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1) (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) :=
  hol.ABS_THM hol.ind hol.bool (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1) (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (r_1 : hol.term hol.ind => thm_1384 r_1).

(; Theorem: |- ((= (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1393 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1) (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) thm_72 thm_1392.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r))) (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1394 : hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) thm_1391 thm_1393.

(; Theorem: |- ((= ((= (Data.Bool.! \lambda r. ((Data.Bool./\ (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)) (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r))) (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r))))) ((= (Data.Bool.! \lambda r. ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ((Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))))) ;)

(; dict ;)

def thm_1395 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)))) (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))))) :=
  hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)))) (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) thm_1388 thm_1394.

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ;)

(; dict ;)

def thm_1396 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda r. ((Data.Bool./\ (p r)) (q r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. (p r))) (Data.Bool.! \lambda r. (q r))))) ((= (Data.Bool.! \lambda r. ((Data.Bool./\ (p r)) (q r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. (p r))) (Data.Bool.! \lambda r. (q r))))) ;)

(; dict ;)

def thm_1397 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (r_3 : hol.term A => hol.and (p_2 r_3) (q_1 r_3))) (hol.and (hol.forall A (r_3 : hol.term A => p_2 r_3)) (hol.forall A (r_3 : hol.term A => q_1 r_3)))) (hol.eq hol.bool (hol.forall A (r_3 : hol.term A => hol.and (p_2 r_3) (q_1 r_3))) (hol.and (hol.forall A (r_3 : hol.term A => p_2 r_3)) (hol.forall A (r_3 : hol.term A => q_1 r_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (r_3 : hol.term A => hol.and (p_2 r_3) (q_1 r_3))) (hol.and (hol.forall A (r_3 : hol.term A => p_2 r_3)) (hol.forall A (r_3 : hol.term A => q_1 r_3)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ((= (Data.Bool.! \lambda r. ((Data.Bool./\ (p r)) (q r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. (p r))) (Data.Bool.! \lambda r. (q r))))) ;)

(; dict ;)

def thm_1398 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (r_3 : hol.term A => hol.and (p_2 r_3) (q_1 r_3))) (hol.and (hol.forall A (r_3 : hol.term A => p_2 r_3)) (hol.forall A (r_3 : hol.term A => q_1 r_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (r_3 : hol.term A => hol.and (p_2 r_3) (q_1 r_3))) (hol.and (hol.forall A (r_3 : hol.term A => p_2 r_3)) (hol.forall A (r_3 : hol.term A => q_1 r_3)))) (thm_1396 A q_1 p_2) (thm_1397 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ;)

(; dict ;)

def thm_1399 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_1 x_3) (q_2 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_1 x_3)) (hol.forall A (x_3 : hol.term A => q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_38 A p_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x)))) ;)

(; dict ;)

def thm_1400 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1399 A p_2 q_1.

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool./\ (p r)) (q r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. (p r))) (Data.Bool.! \lambda r. (q r)))) ;)

(; dict ;)

def thm_1401 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (r_3 : hol.term A => hol.and (p_2 r_3) (q_1 r_3))) (hol.and (hol.forall A (r_3 : hol.term A => p_2 r_3)) (hol.forall A (r_3 : hol.term A => q_1 r_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (r_3 : hol.term A => hol.and (p_2 r_3) (q_1 r_3))) (hol.and (hol.forall A (r_3 : hol.term A => p_2 r_3)) (hol.forall A (r_3 : hol.term A => q_1 r_3)))) (thm_1398 A q_1 p_2) (thm_1400 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool./\ (p r)) (q r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. (p r))) (Data.Bool.! \lambda r. (q r)))) ;)

(; dict ;)

def thm_1402 : q_1 : hol.term (hol.arr hol.ind hol.bool) -> p_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_3 : hol.term hol.ind => hol.and (p_2 r_3) (q_1 r_3))) (hol.and (hol.forall hol.ind (r_3 : hol.term hol.ind => p_2 r_3)) (hol.forall hol.ind (r_3 : hol.term hol.ind => q_1 r_3)))) :=
  q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1401 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool./\ (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r)) (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) r))) (Data.Bool.! \lambda r. (\lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) r)))) ;)

(; dict ;)

def thm_1403 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)))) :=
  (q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => thm_1402 q_1 p_2) (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ((Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1404 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.EQ_MP (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and ((r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1) ((r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) r_1)) (hol.forall hol.ind (r_1 : hol.term hol.ind => (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)) r_1)))) (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) thm_1395 thm_1403.

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool./\ ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ((Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1405 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.TRANS hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) thm_1404 thm_1308.

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) ;)

(; dict ;)

def thm_1406 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))))) :=
  hol.TRANS hol.bool (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.and (hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) thm_1381 thm_1405.

(; Theorem: |- (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ;)

(; dict ;)

def thm_1407 : hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))))) (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1408 : hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hol.proof (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hol.EQ_MP (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) thm_1406 (thm_1407 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ;)

(; dict ;)

def thm_1409 : hyp_1 : hol.proof (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) -> hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) :=
  hyp_1 : hol.proof (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP r))) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ;)

(; dict ;)

def thm_1410 : hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hol.PROVE_HYP (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.EQ_MP (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) thm_1308 (thm_1408 hyp_1)) (hyp_2 : hol.proof (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) => thm_1409 hyp_2).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1921))) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) ;)

(; dict ;)

def thm_1411 : __1921_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) :=
  __1921_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hol.EQ_MP (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_2)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) thm_1293 (thm_1410 hyp_1) __1921_1.

(; Theorem: |- ((Data.Bool.\/ ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) (Data.Bool.~ (HOLLight.NUM_REP _1921))) ;)

(; dict ;)

def thm_1412 : __1921_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) :=
  __1921_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hol.EQ_MP (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1)))) (thm_1288 __1921_1) thm_4) (hol.EQ_MP (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.or (hol.not (HOLLight_2ENUM__REP __1921_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (thm_1291 __1921_1) (thm_1411 __1921_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP _1921)) ((= (HOLLight.dest_num (HOLLight.mk_num _1921))) _1921)) ;)

(; dict ;)

def thm_1413 : __1921_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) :=
  __1921_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hol.EQ_MP (hol.or (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1) (hol.not (HOLLight_2ENUM__REP __1921_1))) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (thm_1281 __1921_1) (thm_1412 __1921_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1414 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (hol.imp (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => (__1921_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hol.EQ_MP (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (hol.imp (HOLLight_2ENUM__REP __1921_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1921_1)) __1921_1)) (thm_1275 __1921_1) (thm_1413 __1921_1 hyp_1)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1415 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_730 p_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1416 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1417 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1416 n_1) (thm_1416 n_1).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP _1919)) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.==> (HOLLight.NUM_REP _1919)) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ;)

(; dict ;)

def thm_1418 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) :=
  __1919_1 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP _1919)) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.==> (HOLLight.NUM_REP _1919)) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ;)

(; dict ;)

def thm_1419 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) :=
  __1919_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (thm_1418 __1919_1) (thm_1418 __1919_1).

(; Theorem: |- ((= ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919)))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ (HOLLight.NUM_REP _1919)))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ;)

(; dict ;)

def thm_1420 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1919_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) :=
  __1919_1 : hol.term hol.ind => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => thm_846 b_1 a_2) (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ (HOLLight.NUM_REP _1919)))) (HOLLight.NUM_REP _1919)) ;)

(; dict ;)

def thm_1421 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.not (HOLLight_2ENUM__REP __1919_1))) (HOLLight_2ENUM__REP __1919_1)) :=
  __1919_1 : hol.term hol.ind => (a_1 : hol.term hol.bool => thm_943 a_1) (HOLLight_2ENUM__REP __1919_1).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ (Data.Bool.~ (HOLLight.NUM_REP _1919))))) (Data.Bool.==> (HOLLight.NUM_REP _1919))) ;)

(; dict ;)

def thm_1422 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1919_1)))) (hol.imp (HOLLight_2ENUM__REP __1919_1))) :=
  __1919_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1919_1))) (HOLLight_2ENUM__REP __1919_1) thm_126 (thm_1421 __1919_1).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) ;)

(; dict ;)

def thm_1423 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) :=
  __1919_1 : hol.term hol.ind => hol.REFL hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ (HOLLight.NUM_REP _1919)))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.==> (HOLLight.NUM_REP _1919)) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ;)

(; dict ;)

def thm_1424 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1919_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) :=
  __1919_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1919_1)))) (hol.imp (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (thm_1422 __1919_1) (thm_1423 __1919_1).

(; Theorem: |- ((= ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919)))) ((Data.Bool.==> (HOLLight.NUM_REP _1919)) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ;)

(; dict ;)

def thm_1425 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) :=
  __1919_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.imp (hol.not (hol.not (HOLLight_2ENUM__REP __1919_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (thm_1420 __1919_1) (thm_1424 __1919_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919)))) ;)

(; dict ;)

def thm_1426 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) :=
  __1919_1 : hol.term hol.ind => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_975 q_1 p_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))))) (= ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919))))) ;)

(; dict ;)

def thm_1427 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))))) :=
  __1919_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) thm_561 (thm_1426 __1919_1).

(; Theorem: |- ((= ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919)))) ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919)))) ;)

(; dict ;)

def thm_1428 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) :=
  __1919_1 : hol.term hol.ind => hol.REFL hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919))))) ((= ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919)))) ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919))))) ;)

(; dict ;)

def thm_1429 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))))) :=
  __1919_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (thm_1427 __1919_1) (thm_1428 __1919_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919)))) ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919))))) Data.Bool.T) ;)

(; dict ;)

def thm_1430 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) hol.true) :=
  __1919_1 : hol.term hol.ind => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919))))) Data.Bool.T) ;)

(; dict ;)

def thm_1431 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) hol.true) :=
  __1919_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) hol.true (thm_1429 __1919_1) (thm_1430 __1919_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919))))) ;)

(; dict ;)

def thm_1432 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))))) :=
  __1919_1 : hol.term hol.ind => hol.SYM hol.bool (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) hol.true (thm_1431 __1919_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919)))) (Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919)))) ;)

(; dict ;)

def thm_1433 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)))) :=
  __1919_1 : hol.term hol.ind => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ;)

(; dict ;)

def thm_1434 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) :=
  __1919_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (thm_1433 __1919_1) (thm_1423 __1919_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919)))) ;)

(; dict ;)

def thm_1435 : __1919_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)))) :=
  __1919_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (thm_1434 __1919_1) (thm_1434 __1919_1).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_1436 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) :=
  hol.REFL hol.bool (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_1437 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) :=
  hol.TRANS hol.bool (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) thm_1436 thm_1436.

(; Theorem: |- ((= (HOLLight.NUM_REP HOLLight.IND_0)) (HOLLight.NUM_REP HOLLight.IND_0)) ;)

(; dict ;)

def thm_1438 : hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) (HOLLight_2ENUM__REP HOLLight_2EIND__0)) :=
  hol.APP_THM hol.ind hol.bool HOLLight_2ENUM__REP HOLLight_2ENUM__REP HOLLight_2EIND__0 HOLLight_2EIND__0 thm_1294 thm_194.

(; Theorem: |- ((= (Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0))) (Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0))) ;)

(; dict ;)

def thm_1439 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0)) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (HOLLight_2ENUM__REP HOLLight_2EIND__0) thm_191 thm_1438.

(; Theorem: |- ((= ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_1440 : hol.proof (hol.eq hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))) :=
  hol.APP_THM hol.bool hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0)) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0)) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) thm_1439 thm_1436.

(; Theorem: |- ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1441 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1442 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_1441 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p))) (= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p))) ;)

(; dict ;)

def thm_1443 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)).

(; Theorem: |- ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) Data.Bool.F)) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_1444 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1)) hol.false) (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) Data.Bool.F))) ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1445 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false)) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (thm_1443 p_1 q_2) (thm_1444 q_2).

(; Theorem: |- ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1446 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1.

(; Theorem: |- ((= (= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p))) (= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1447 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) thm_561 (thm_1446 p_1 q_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_1448 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)).

(; Theorem: |- ((= ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1449 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (thm_1447 p_1 q_2) (thm_1448 q_2).

(; Theorem: |- ((= ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) Data.Bool.F))) ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1450 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false)) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2))) (thm_1445 p_1 q_2) (thm_1449 p_1 q_2).

(; Theorem: |- ((= \lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q))) \lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q))) ;)

(; dict ;)

def thm_1451 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1)) (__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1)).

(; Theorem: |- ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) Data.Bool.F)) ;)

(; dict ;)

def thm_1452 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) (__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1 hol.false (thm_1451 q_2) (thm_662 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_1453 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_1) (hol.or (hol.not __538_3) q_1)) p_2) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_1) (hol.or (hol.not __538_3) q_1)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) (thm_1450 p_2 q_1) (thm_1452 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1454 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (thm_1453 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) q)) Data.Bool.T) ;)

(; dict ;)

def thm_1455 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false q_1) hol.true) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_553 t_1) q_1.

(; Theorem: |- ((= (= ((Data.Bool.==> Data.Bool.F) q))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_1456 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp hol.false q_1)) (hol.eq hol.bool hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp hol.false q_1) hol.true thm_561 (thm_1455 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_1457 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (hol.eq hol.bool hol.true hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp hol.false q_1)) (hol.eq hol.bool hol.true) (hol.or (hol.not hol.false) q_1) hol.true (thm_1456 q_1) (thm_1329 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) Data.Bool.T) ;)

(; dict ;)

def thm_1458 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (hol.eq hol.bool hol.true hol.true) hol.true (thm_1457 q_1) thm_836.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_1459 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) hol.true (thm_1458 q_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)) ;)

(; dict ;)

def thm_1460 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (thm_1459 q_1) thm_4.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_1461 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_1454 p_2 q_1 hyp_1) (thm_1460 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1462 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_1461 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p))) (= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p))) ;)

(; dict ;)

def thm_1463 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)).

(; Theorem: |- ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_1464 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1)) hol.true) (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) Data.Bool.T))) ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1465 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true)) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (thm_1463 p_1 q_2) (thm_1464 q_2).

(; Theorem: |- ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1466 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1.

(; Theorem: |- ((= (= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p))) (= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1467 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) thm_561 (thm_1466 p_1 q_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_1468 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)).

(; Theorem: |- ((= ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1469 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (thm_1467 p_1 q_2) (thm_1468 q_2).

(; Theorem: |- ((= ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) Data.Bool.T))) ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1470 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true)) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2))) (thm_1465 p_1 q_2) (thm_1469 p_1 q_2).

(; Theorem: |- ((= \lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q))) \lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q))) ;)

(; dict ;)

def thm_1471 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1)) (__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1)).

(; Theorem: |- ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) Data.Bool.T)) ;)

(; dict ;)

def thm_1472 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) (__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1 hol.true (thm_1471 q_2) (thm_716 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_1473 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_1) (hol.or (hol.not __536_3) q_1)) p_2) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_1) (hol.or (hol.not __536_3) q_1)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) (thm_1470 p_2 q_1) (thm_1472 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1474 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (thm_1473 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) q)) q) ;)

(; dict ;)

def thm_1475 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true q_1) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_543 t_1) q_1.

(; Theorem: |- ((= (= ((Data.Bool.==> Data.Bool.T) q))) (= q)) ;)

(; dict ;)

def thm_1476 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp hol.true q_1)) (hol.eq hol.bool q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp hol.true q_1) q_1 thm_561 (thm_1475 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ((= q) q)) ;)

(; dict ;)

def thm_1477 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (hol.eq hol.bool q_1 q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp hol.true q_1)) (hol.eq hol.bool q_1) (hol.or (hol.not hol.true) q_1) q_1 (thm_1476 q_1) (thm_1358 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) Data.Bool.T) ;)

(; dict ;)

def thm_1478 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (hol.eq hol.bool q_1 q_1) hol.true (thm_1477 q_1) (thm_1363 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_1479 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) hol.true (thm_1478 q_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)) ;)

(; dict ;)

def thm_1480 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (thm_1479 q_1) thm_4.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_1481 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_1474 p_2 q_1 hyp_1) (thm_1480 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1482 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_1481 q_1 p_2 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_1483 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_1484 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_726 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_1483 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_1485 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_1482 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => thm_1484 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_1486 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_1462 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => thm_1485 q_1 p_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_1487 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_1442 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_1441 q_1 p_2) (thm_1486 q_1 p_2))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (HOLLight_2ENUM__REP i_1).

(; Theorem: |- ((= (Data.Bool.~ (HOLLight.NUM_REP i))) (Data.Bool.~ (HOLLight.NUM_REP i))) ;)

(; dict ;)

def thm_1488 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (HOLLight_2ENUM__REP i_1)) (hol.not (HOLLight_2ENUM__REP i_1))) :=
  i_1 : hol.term hol.ind => hol.REFL hol.bool (hol.not (HOLLight_2ENUM__REP i_1)).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i)))) (Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i)))) ;)

(; dict ;)

def thm_1489 : i_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (HOLLight_2ENUM__REP i_1))) (hol.or (hol.not (HOLLight_2ENUM__REP i_1)))) :=
  i_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (hol.not (HOLLight_2ENUM__REP i_1)) thm_1019 (thm_1488 i_1).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_1490 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => hol.REFL hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_1491 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP i_1))) (hol.or (hol.not (HOLLight_2ENUM__REP i_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (thm_1489 i_1) (thm_1490 i_1).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_1492 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (thm_1487 i_1) (thm_1491 i_1).

(; Theorem: |- ((= \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_1493 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  hol.ABS_THM hol.ind hol.bool (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (i_1 : hol.term hol.ind => thm_1492 i_1).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_1494 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) thm_72 thm_1493.

(; Theorem: |- ((= ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_1495 : hol.proof (hol.eq hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))) :=
  hol.APP_THM hol.bool hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0)) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0)) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) thm_1439 thm_1494.

(; Theorem: |- ((= ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_1496 : hol.proof (hol.eq hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))) :=
  hol.TRANS hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) thm_1495 thm_1440.

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_1497 : hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) :=
  hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_1498 : hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) :=
  hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => hol.EQ_MP (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) thm_1496 (thm_1497 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_1499 : hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP i))) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_1500 : hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => hol.PROVE_HYP (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.EQ_MP (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) thm_1440 (thm_1498 hyp_1)) (hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => thm_1499 hyp_2).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ (HOLLight.NUM_REP _1919))) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) ;)

(; dict ;)

def thm_1501 : __1919_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) :=
  __1919_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.EQ_MP (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_2)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP i_2)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)))) thm_1437 (thm_1500 hyp_1) __1919_1.

(; Theorem: |- ((Data.Bool.\/ (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) (Data.Bool.~ (HOLLight.NUM_REP _1919))) ;)

(; dict ;)

def thm_1502 : __1919_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) :=
  __1919_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.EQ_MP (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1)))) (thm_1432 __1919_1) thm_4) (hol.EQ_MP (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.or (hol.not (HOLLight_2ENUM__REP __1919_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (thm_1435 __1919_1) (thm_1501 __1919_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP _1919)) (HOLLight.NUM_REP (HOLLight.IND_SUC _1919))) ;)

(; dict ;)

def thm_1503 : __1919_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) :=
  __1919_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.EQ_MP (hol.or (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1)) (hol.not (HOLLight_2ENUM__REP __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (thm_1425 __1919_1) (thm_1502 __1919_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1504 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => (__1919_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.EQ_MP (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (hol.imp (HOLLight_2ENUM__REP __1919_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC __1919_1))) (thm_1419 __1919_1) (thm_1503 __1919_1 hyp_1)) (HOLLight_2Edest__num n_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (HOLLight.NUM_REP (HOLLight.dest_num n)))) (HOLLight.NUM_REP (HOLLight.dest_num n)))) (HOLLight.NUM_REP (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1505 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_730 p_1) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.dest_num n))) (HOLLight.NUM_REP (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1506 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.dest_num n))) (HOLLight.NUM_REP (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1507 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (thm_1506 n_1) (thm_1506 n_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)) (HOLLight.NUM_REP _1920))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)) (HOLLight.NUM_REP _1920))) ;)

(; dict ;)

def thm_1508 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1))) :=
  __1920_1 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)) (HOLLight.NUM_REP _1920))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)) (HOLLight.NUM_REP _1920))) ;)

(; dict ;)

def thm_1509 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1))) :=
  __1920_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (thm_1508 __1920_1) (thm_1508 __1920_1).

(; Theorem: |- ((= ((Data.Bool.\/ (HOLLight.NUM_REP _1920)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) (HOLLight.NUM_REP _1920))) ;)

(; dict ;)

def thm_1510 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.imp (hol.not (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (HOLLight_2ENUM__REP __1920_1))) :=
  __1920_1 : hol.term hol.ind => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => thm_846 b_1 a_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)) (HOLLight_2ENUM__REP __1920_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)) ;)

(; dict ;)

def thm_1511 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)) :=
  __1920_1 : hol.term hol.ind => (a_1 : hol.term hol.bool => thm_943 a_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920))))) (Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920))) ;)

(; dict ;)

def thm_1512 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) :=
  __1920_1 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) thm_126 (thm_1511 __1920_1).

(; Theorem: |- ((= (HOLLight.NUM_REP _1920)) (HOLLight.NUM_REP _1920)) ;)

(; dict ;)

def thm_1513 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP __1920_1) (HOLLight_2ENUM__REP __1920_1)) :=
  __1920_1 : hol.term hol.ind => hol.REFL hol.bool (HOLLight_2ENUM__REP __1920_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) (HOLLight.NUM_REP _1920))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)) (HOLLight.NUM_REP _1920))) ;)

(; dict ;)

def thm_1514 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (HOLLight_2ENUM__REP __1920_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1))) :=
  __1920_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)) (HOLLight_2ENUM__REP __1920_1) (HOLLight_2ENUM__REP __1920_1) (thm_1512 __1920_1) (thm_1513 __1920_1).

(; Theorem: |- ((= ((Data.Bool.\/ (HOLLight.NUM_REP _1920)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)) (HOLLight.NUM_REP _1920))) ;)

(; dict ;)

def thm_1515 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1))) :=
  __1920_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.imp (hol.not (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (HOLLight_2ENUM__REP __1920_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (thm_1510 __1920_1) (thm_1514 __1920_1).

(; Theorem: |- ((= (Data.Bool.\/ (HOLLight.NUM_REP _1920))) (Data.Bool.\/ (HOLLight.NUM_REP _1920))) ;)

(; dict ;)

def thm_1516 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (HOLLight_2ENUM__REP __1920_1)) (hol.or (HOLLight_2ENUM__REP __1920_1))) :=
  __1920_1 : hol.term hol.ind => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (HOLLight_2ENUM__REP __1920_1)).

(; Theorem: |- ((= (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920))) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920))) ;)

(; dict ;)

def thm_1517 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) :=
  __1920_1 : hol.term hol.ind => hol.REFL hol.bool (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)).

(; Theorem: |- ((= ((Data.Bool.\/ (HOLLight.NUM_REP _1920)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) ((Data.Bool.\/ (HOLLight.NUM_REP _1920)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) ;)

(; dict ;)

def thm_1518 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)))) :=
  __1920_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.or (HOLLight_2ENUM__REP __1920_1)) (hol.or (HOLLight_2ENUM__REP __1920_1)) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)) (thm_1516 __1920_1) (thm_1517 __1920_1).

(; Theorem: |- ((= ((Data.Bool.\/ (HOLLight.NUM_REP _1920)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) ((Data.Bool.\/ (HOLLight.NUM_REP _1920)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)))) ;)

(; dict ;)

def thm_1519 : __1920_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1)))) :=
  __1920_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (thm_1518 __1920_1) (thm_1518 __1920_1).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1520 : hyp_1 : hol.proof (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) -> hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hyp_1 : hol.proof (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.\/ (HOLLight.NUM_REP r)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ;)

(; dict ;)

def thm_1521 : hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hol.PROVE_HYP (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (thm_1408 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.or (hol.not (HOLLight_2ENUM__REP r_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)))) => thm_1520 hyp_2).

(; Theorem: |- ((Data.Bool.\/ (HOLLight.NUM_REP _1920)) (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920))) ;)

(; dict ;)

def thm_1522 : __1920_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) :=
  __1920_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hol.EQ_MP (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)))) (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.or (HOLLight_2ENUM__REP r_2) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2)))) thm_1306 (thm_1521 hyp_1) __1920_1.

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num _1920))) _1920)) (HOLLight.NUM_REP _1920)) ;)

(; dict ;)

def thm_1523 : __1920_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) :=
  __1920_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hol.EQ_MP (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (thm_1515 __1920_1) (hol.EQ_MP (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (hol.or (HOLLight_2ENUM__REP __1920_1) (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1))) (thm_1519 __1920_1) (thm_1522 __1920_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) (HOLLight.NUM_REP (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1524 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => (__1920_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hol.EQ_MP (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num __1920_1)) __1920_1) (HOLLight_2ENUM__REP __1920_1)) (thm_1509 __1920_1) (thm_1523 __1920_1 hyp_1)) (HOLLight_2Edest__num n_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1525 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1526 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1527 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (thm_1526 n_1) (thm_1526 n_1).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.dest_num n))) n)) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1528 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (__1925_1 : hol.term Number_2ENatural_2Enatural => __1924_2 : hol.term Number_2ENatural_2Enatural => thm_1263 __1925_1 __1924_2) n_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.dest_num n))) n))) ((= (HOLLight.mk_num (HOLLight.dest_num n))) n))) ((= (HOLLight.mk_num (HOLLight.dest_num n))) n)) ;)

(; dict ;)

def thm_1529 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1).

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.dest_num _1918))) _1918)) ((= (HOLLight.mk_num (HOLLight.dest_num _1918))) _1918)) ;)

(; dict ;)

def thm_1530 : __1918_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1)) :=
  __1918_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1).

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.dest_num _1918))) _1918)) ((= (HOLLight.mk_num (HOLLight.dest_num _1918))) _1918)) ;)

(; dict ;)

def thm_1531 : __1918_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1)) :=
  __1918_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (thm_1530 __1918_1) (thm_1530 __1918_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.dest_num _1918))) _1918) ;)

(; dict ;)

def thm_1532 : __1918_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) :=
  __1918_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => thm_644 hyp_1 __1918_1.

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.dest_num n))) n) ;)

(; dict ;)

def thm_1533 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => (__1918_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (thm_1531 __1918_1) (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num __1918_1)) __1918_1) (thm_1530 __1918_1) (thm_1532 __1918_1 hyp_1))) n_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.dest_num n))) n))) ((= (HOLLight.mk_num (HOLLight.dest_num n))) n)) ;)

(; dict ;)

def thm_1534 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hol.proof (hol.imp (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1)) => thm_1533 n_1 hyp_1.

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n)) ;)

(; dict ;)

def thm_1535 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => thm_1528 n_1 (hol.EQ_MP (hol.imp (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1) (thm_1529 n_1) (thm_1534 n_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1536 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (thm_1527 n_1) (thm_1535 n_1 hyp_1).

(; Theorem: |- (HOLLight.NUM_REP (HOLLight.dest_num n)) ;)

(; dict ;)

def thm_1537 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => thm_1524 n_1 hyp_2 (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (thm_1525 n_1) (thm_1536 n_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (HOLLight.NUM_REP (HOLLight.dest_num n)))) (HOLLight.NUM_REP (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1538 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hol.proof (hol.imp (hol.not (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.not (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) => hol.EQ_MP (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (thm_1507 n_1) (thm_1537 n_1 hyp_1 hyp_2).

(; Theorem: |- (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1539 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => thm_1504 n_1 hyp_3 (hol.EQ_MP (hol.imp (hol.not (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (thm_1505 n_1) (thm_1538 n_1 hyp_1 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1540 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp (hol.not (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hyp_4 : hol.proof (hol.not (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) => hol.EQ_MP (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1417 n_1) (thm_1539 n_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1541 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => thm_1414 n_1 hyp_2 (hol.EQ_MP (hol.imp (hol.not (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1415 n_1) (thm_1540 n_1 hyp_1 hyp_2 hyp_3)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1542 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hyp_4 : hol.proof (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1273 n_1) (thm_1541 n_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1543 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (thm_1270 n_1 hyp_3) (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1271 n_1) (thm_1542 n_1 hyp_1 hyp_2 hyp_4)).

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_1544 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => thm_1187 n_1 (thm_1543 n_1 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_1545 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hyp_5 : hol.proof (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1186 n_1) (thm_1544 n_1 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ((Data.Bool./\ ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0))) ;)

(; dict ;)

def thm_1546 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) hyp_1.

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ((Data.Bool./\ ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0))) ;)

(; dict ;)

def thm_1547 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0))) (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_1184 n_1) (thm_1545 n_1 hyp_1 hyp_2 hyp_3 hyp_4)) (hyp_5 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) => thm_1546 n_1 hyp_5).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1548 : hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) :=
  (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1549 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) :=
  hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1550 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) :=
  hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) thm_1549 thm_1549.

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP HOLLight.IND_0)) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1551 : hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hol.proof (hol.imp (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) :=
  hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => (__1921_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => thm_1413 __1921_1 hyp_1) HOLLight_2EIND__0 hyp_1.

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0) ;)

(; dict ;)

def thm_1552 : hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) :=
  hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => thm_1551 hyp_1 (thm_504 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1553 : hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) :=
  hyp_1 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => hyp_3 : hol.proof (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) thm_1550 (thm_1552 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num (HOLLight.mk_num HOLLight.IND_0))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1554 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) (hol.and (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) (thm_1547 n_1 hyp_1 hyp_2 hyp_3 hyp_4) (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num HOLLight_2EIND__0)) HOLLight_2EIND__0) thm_1548 (thm_1553 hyp_2 hyp_4)).

(; Theorem: |- ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0) ;)

(; dict ;)

def thm_1555 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => thm_1183 n_1 (thm_1554 n_1 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0))) ((= (HOLLight.IND_SUC (HOLLight.dest_num n))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1556 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hyp_5 : hol.proof (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) (thm_752 n_1) (thm_1555 n_1 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1557 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => thm_749 n_1 hyp_2 (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0)) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) HOLLight_2EIND__0) (thm_750 n_1) (thm_1556 n_1 hyp_1 hyp_3 hyp_4 hyp_5)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_1558 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp (hol.not hol.false) hol.false) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hyp_6 : hol.proof (hol.not hol.false) => hol.EQ_MP hol.false hol.false thm_732 (thm_1557 n_1 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1559 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) hol.false (thm_650 n_1 hyp_4) (hyp_6 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hol.EQ_MP (hol.imp (hol.not hol.false) hol.false) hol.false ((p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_652 p_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_651 p_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_651 p_1) (thm_730 p_1)))) hol.false) (thm_1558 n_1 hyp_1 hyp_2 hyp_3 hyp_6 hyp_5)).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1560 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) hol.false (thm_650 n_1 hyp_4) (hyp_6 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => thm_1559 n_1 hyp_1 hyp_2 hyp_3 hyp_6 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1561 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) hol.false (thm_650 n_1 hyp_4) (hyp_6 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => thm_1560 n_1 hyp_1 hyp_2 hyp_3 hyp_6 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1562 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) hol.false (thm_644 hyp_1) (hyp_6 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => thm_1561 n_1 hyp_6 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1563 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) hol.false (thm_639 hyp_2) (hyp_6 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => thm_1562 n_1 hyp_1 hyp_6 hyp_3 hyp_4 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1564 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) hol.false (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (thm_649 n_1) (thm_650 n_1 hyp_4)) (hyp_6 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => thm_1563 n_1 hyp_1 hyp_2 hyp_3 hyp_6 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1565 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) hol.false (thm_644 hyp_1) (hyp_6 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => thm_1564 n_1 hyp_6 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1566 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hol.PROVE_HYP (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) hol.false (thm_639 hyp_2) (hyp_6 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => thm_1565 n_1 hyp_1 hyp_6 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) Data.Bool.F) ;)

(; dict ;)

def thm_1567 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) hol.false) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hyp_5 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) => thm_1566 n_1 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4.

(; Theorem: |- ((= (\lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)) n)) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_1568 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1.

(; Theorem: |- (\lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)) n) ;)

(; dict ;)

def thm_1569 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) -> hol.proof ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) => hyp_1.

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)) ;)

(; dict ;)

def thm_1570 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) => hol.EQ_MP ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (thm_1568 n_1) (thm_1569 n_1 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1571 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof hol.false :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => thm_1567 n_1 hyp_1 hyp_2 hyp_3 hyp_5 (thm_1570 n_1 hyp_4).

(; Theorem: |- ((Data.Bool.==> (\lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)) n)) Data.Bool.F) ;)

(; dict ;)

def thm_1572 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) -> hol.proof (hol.imp ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) hol.false) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_2)) a_2)) => hyp_2 : hol.proof (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_2 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_2) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_2)) r_2))) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2))))) => hyp_5 : hol.proof ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) => thm_1571 n_1 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda n. ((Data.Bool.==> (\lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)) n)) Data.Bool.F)) ;)

(; dict ;)

def thm_1573 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.imp ((n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0)) n_1) hol.false)) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => n_1 : hol.term Number_2ENatural_2Enatural => thm_1572 n_1 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) Data.Bool.F) ;)

(; dict ;)

def thm_1574 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) hol.false) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_4 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => thm_645 (thm_1573 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= ((= t) \lambda x. (t x))) ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1575 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)).

(; Theorem: |- ((= ((= t) \lambda x. (t x))) ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1576 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (thm_1575 B A t_1) (thm_1575 B A t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_1577 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)).

(; Theorem: |- ((= t) \lambda x. (t x)) ;)

(; dict ;)

def thm_1578 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) -> hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) => hyp_1.

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_1579 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) -> hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) => hol.SYM (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2) (thm_1578 B A t_1 hyp_1).

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_1580 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) -> hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) => hyp_1.

(; Theorem: |- ((= t) \lambda x. (t x)) ;)

(; dict ;)

def thm_1581 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) -> hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) => hol.SYM (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1 (thm_1580 B A t_1 hyp_1).

(; Theorem: |- ((= ((= \lambda x. (t x)) t)) ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1582 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hol.PROP_EXT (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) => thm_1579 B A t_1 hyp_1) (hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) => thm_1581 B A t_1 hyp_1).

(; Theorem: |- ((= \lambda t. ((= \lambda x. (t x)) t)) \lambda t. ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1583 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr A B) hol.bool (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (t_1 : hol.term (hol.arr A B) => thm_1582 B A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= \lambda x. (t x)) t))) (Data.Bool.! \lambda t. ((= t) \lambda x. (t x)))) ;)

(; dict ;)

def thm_1584 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1)) (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (thm_1577 B A) (thm_1583 B A).

(; Theorem: |- (Data.Bool.! \lambda t. ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1585 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1)) (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) (thm_1584 B A) (thm_39 B A).

(; Theorem: |- ((= t) \lambda x. (t x)) ;)

(; dict ;)

def thm_1586 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => thm_1585 B A t_1.

(; Theorem: |- ((= t) \lambda x. (t x)) ;)

(; dict ;)

def thm_1587 : A : hol.type -> t_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) t_1 (x_2 : hol.term A => t_1 x_2)) :=
  A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => (B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (thm_1576 B A t_1) (thm_1586 B A t_1)) hol.bool A t_1.

(; Theorem: |- ((= P) \lambda x. (P x)) ;)

(; dict ;)

def thm_1588 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 (x_2 : hol.term A => P_1 x_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => thm_1587 A t_1) A P_1.

(; Theorem: |- ((= (Data.Bool.! P)) (Data.Bool.! \lambda x. (P x))) ;)

(; dict ;)

def thm_1589 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A P_1) (hol.forall A (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) P_1 (x_2 : hol.term A => P_1 x_2) (thm_308 A) (thm_1588 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) ;)

(; dict ;)

def thm_1590 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.forall A P_1) (hol.forall A (x_2 : hol.term A => P_1 x_2)) thm_509 (thm_1589 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.! P)))) (= (Data.Bool.~ (Data.Bool.! \lambda x. (P x))))) ;)

(; dict ;)

def thm_1591 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.forall A P_1))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.forall A P_1)) (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) thm_561 (thm_1590 A P_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1592 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1593 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.forall A P_1))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (thm_1591 A P_1) (thm_1592 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1594 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1593 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ;)

(; dict ;)

def thm_1595 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ;)

(; dict ;)

def thm_1596 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (thm_1595 A p_1) (thm_1595 A p_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x)))) ;)

(; dict ;)

def thm_1597 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_40 A p_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1598 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (thm_1596 A p_1) (thm_1597 A p_1)) A p_1) A P_1.

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.! \lambda x. (P x))))) (= (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1599 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) thm_561 (thm_1598 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1600 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (thm_1599 A P_1) (thm_1592 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) Data.Bool.T) ;)

(; dict ;)

def thm_1601 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (x_1 : hol.term hol.bool => thm_316 x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) Data.Bool.T) ;)

(; dict ;)

def thm_1602 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true (thm_1600 A P_1) (thm_1601 A P_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1603 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true (thm_1602 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1604 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1594 A P_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1603 A P_1) thm_4).

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))))) ;)

(; dict ;)

def thm_1605 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))))) ;)

(; dict ;)

def thm_1606 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.PROVE_HYP (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))))) (thm_1604 A P_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) => thm_1605 A P_1 hyp_1).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_1607 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.? \lambda x. (P x))) ;)

(; dict ;)

def thm_1608 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) P_1 (x_2 : hol.term A => P_1 x_2) (thm_1607 A) (thm_1588 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) ;)

(; dict ;)

def thm_1609 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) thm_509 (thm_1608 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.? P)))) (= (Data.Bool.~ (Data.Bool.? \lambda x. (P x))))) ;)

(; dict ;)

def thm_1610 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) thm_561 (thm_1609 A P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1611 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1612 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (thm_1610 A P_1) (thm_1611 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1613 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1612 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ;)

(; dict ;)

def thm_1614 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ;)

(; dict ;)

def thm_1615 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (thm_1614 A p_1) (thm_1614 A p_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x)))) ;)

(; dict ;)

def thm_1616 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_41 A p_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1617 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (thm_1615 A p_1) (thm_1616 A p_1)) A p_1) A P_1.

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.? \lambda x. (P x))))) (= (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1618 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) thm_561 (thm_1617 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1619 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (thm_1618 A P_1) (thm_1611 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) Data.Bool.T) ;)

(; dict ;)

def thm_1620 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) Data.Bool.T) ;)

(; dict ;)

def thm_1621 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true (thm_1619 A P_1) (thm_1620 A P_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1622 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true (thm_1621 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1623 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1613 A P_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1622 A P_1) thm_4).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ;)

(; dict ;)

def thm_1624 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ;)

(; dict ;)

def thm_1625 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.PROVE_HYP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) (thm_1623 A P_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) => thm_1624 A P_1 hyp_1).

(; Theorem: |- ((= Data.Bool.?!) Data.Bool.?!) ;)

(; dict ;)

def thm_1626 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool.?! P)) (Data.Bool.?! \lambda x. (P x))) ;)

(; dict ;)

def thm_1627 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) P_1 (x_2 : hol.term A => P_1 x_2) (thm_1626 A) (thm_1588 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! P))) (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ;)

(; dict ;)

def thm_1628 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) thm_509 (thm_1627 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.?! P)))) (= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x))))) ;)

(; dict ;)

def thm_1629 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) thm_561 (thm_1628 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ;)

(; dict ;)

def thm_1630 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1631 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (thm_1629 A P_1) (thm_1630 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1632 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1631 A P_1).

(; Theorem: |- ((= ((= Data.Bool.?!) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))))) ((= Data.Bool.?!) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1633 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => hol.REFL hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))).

(; Theorem: |- ((= ((= Data.Bool.?!) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))))) ((= Data.Bool.?!) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1634 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (thm_1633 A) (thm_1633 A).

(; Theorem: |- ((= \lambda x. (P x)) \lambda x. (P x)) ;)

(; dict ;)

def thm_1635 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => P_1 x_2) (x_2 : hol.term A => P_1 x_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) (x_2 : hol.term A => P_1 x_2).

(; Theorem: |- ((= (Data.Bool.?! \lambda x. (P x))) (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ;)

(; dict ;)

def thm_1636 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2) (x_2 : hol.term A => P_1 x_2) (hol.EQ_MP (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4)))))) (thm_1634 A) (thm_42 A)) (thm_1635 A P_1).

(; Theorem: |- ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p)) ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1637 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) p_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) p_1.

(; Theorem: |- ((= \lambda p. (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p)) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1638 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) p_1) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A hol.bool) hol.bool (p_1 : hol.term (hol.arr A hol.bool) => (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) p_1) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3))))) (p_1 : hol.term (hol.arr A hol.bool) => thm_1637 A p_1).

(; Theorem: |- ((= (\lambda p. (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p) \lambda x. (P x))) (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ;)

(; dict ;)

def thm_1639 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2) (x_2 : hol.term A => P_1 x_2) (thm_1638 A) (thm_1635 A P_1).

(; Theorem: |- ((= (= (\lambda p. (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p) \lambda x. (P x)))) (= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x)))) ;)

(; dict ;)

def thm_1640 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2))) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) thm_561 (thm_1639 A P_1).

(; Theorem: |- ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x. (P x) x)) (\lambda x. (P x) y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1641 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2).

(; Theorem: |- ((= ((= (\lambda p. (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p) \lambda x. (P x))) (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x)))) ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x. (P x) x)) (\lambda x. (P x) y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1642 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2))) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))))) (thm_1640 A P_1) (thm_1641 A P_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.? \lambda x. (P x)))) (Data.Bool./\ (Data.Bool.? \lambda x. (P x)))) ;)

(; dict ;)

def thm_1643 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))).

(; Theorem: |- ((= ((= (\lambda x. (f x) y)) (f y))) ((= (\lambda x. (f x) y)) (f y))) ;)

(; dict ;)

def thm_1644 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)).

(; Theorem: |- ((= ((= (\lambda x. (f x) y)) (f y))) ((= (\lambda x. (f x) y)) (f y))) ;)

(; dict ;)

def thm_1645 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (thm_1644 A B y_1 f_2) (thm_1644 A B y_1 f_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= (\lambda x. (f x) y)) (f y))) ;)

(; dict ;)

def thm_1646 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall A (y_2 : hol.term A => hol.eq B ((x_3 : hol.term A => f_1 x_3) y_2) (f_1 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_43 B A f_1.

(; Theorem: |- ((= (\lambda x. (f x) y)) (f y)) ;)

(; dict ;)

def thm_1647 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => thm_1646 B A f_2 y_1.

(; Theorem: |- ((= (\lambda x. (f x) y)) (f y)) ;)

(; dict ;)

def thm_1648 : A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (thm_1645 A B y_1 f_2) (thm_1647 A B y_1 f_2)) A hol.bool y_1 f_2.

(; Theorem: |- ((= (\lambda x_1. (P x_1) x)) (P x)) ;)

(; dict ;)

def thm_1649 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x__1_3 : hol.term A => P_2 x__1_3) x_1) (P_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A hol.bool) => thm_1648 A y_1 f_2) A x_1 P_2.

(; Theorem: |- ((= (Data.Bool./\ (\lambda x_1. (P x_1) x))) (Data.Bool./\ (P x))) ;)

(; dict ;)

def thm_1650 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((x__1_3 : hol.term A => P_2 x__1_3) x_1)) (hol.and (P_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((x__1_3 : hol.term A => P_2 x__1_3) x_1) (P_2 x_1) thm_191 (thm_1649 A x_1 P_2).

(; Theorem: |- ((= (\lambda x. (P x) y)) (P y)) ;)

(; dict ;)

def thm_1651 : A : hol.type -> y_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => P_2 x_3) y_1) (P_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A hol.bool) => thm_1648 A y_1 f_2) A y_1 P_2.

(; Theorem: |- ((= ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((Data.Bool./\ (P x)) (P y))) ;)

(; dict ;)

def thm_1652 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1)) (hol.and (P_3 x_2) (P_3 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2)) (hol.and (P_3 x_2)) ((x_4 : hol.term A => P_3 x_4) y_1) (P_3 y_1) (thm_1650 A x_2 P_3) (thm_1651 A y_1 P_3).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y)))) (Data.Bool.==> ((Data.Bool./\ (P x)) (P y)))) ;)

(; dict ;)

def thm_1653 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1))) (hol.imp (hol.and (P_3 x_2) (P_3 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1)) (hol.and (P_3 x_2) (P_3 y_1)) thm_126 (thm_1652 A y_1 x_2 P_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y))) ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) ;)

(; dict ;)

def thm_1654 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1)) (hol.eq A x_2 y_1)) (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1))) (hol.imp (hol.and (P_3 x_2) (P_3 y_1))) (hol.eq A x_2 y_1) (hol.eq A x_2 y_1) (thm_1653 A y_1 x_2 P_3) (thm_1105 A y_1 x_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) ;)

(; dict ;)

def thm_1655 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_2 x__1_4) x_1) ((x_4 : hol.term A => P_2 x_4) y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_2 x__1_4) x_1) ((x_4 : hol.term A => P_2 x_4) y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => thm_1654 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1656 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_2 x__1_4) x_1) ((x_4 : hol.term A => P_2 x_4) y_3)) (hol.eq A x_1 y_3))) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_2 x__1_4) x_1) ((x_4 : hol.term A => P_2 x_4) y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)) (thm_308 A) (thm_1655 A x_1 P_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1657 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => thm_1656 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1658 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))) (thm_308 A) (thm_1657 A P_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y)))))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1659 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (thm_1643 A P_1) (thm_1658 A P_1).

(; Theorem: |- ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1660 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (hol.EQ_MP (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3)))))) (thm_1642 A P_1) (thm_1639 A P_1)) (thm_1659 A P_1).

(; Theorem: |- ((= (Data.Bool.?! \lambda x. (P x))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1661 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (thm_1636 A P_1) (thm_1660 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) (Data.Bool.~ ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1662 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) thm_509 (thm_1661 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1663 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1664 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (thm_1663 t2_1 t1_2) (thm_1663 t2_1 t1_2).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_1665 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_1666 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) thm_1665 thm_1665.

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))))) ;)

(; dict ;)

def thm_1667 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) thm_85 thm_1666.

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1668 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))).

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1669 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (thm_1668 t1_1) (thm_1668 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_1670 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  t1_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) thm_85 (thm_1669 t1_1).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1671 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2)))) :=
  t1_1 : hol.term hol.bool => thm_44 t1_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1672 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1671 t1_2 t2_1.

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1673 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1674 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (thm_1663 t2_1 t1_2) (thm_1672 t2_1 t1_2)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) => thm_1673 t2_1 t1_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1675 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1676 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (thm_1675 t2_1 t1_2) (thm_1675 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1677 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) :=
  t1_1 : hol.term hol.bool => thm_45 t1_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1678 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1677 t1_2 t2_1.

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1679 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) (thm_1674 t2_1 t1_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (thm_1676 t2_1 t1_2) (thm_1678 t2_1 t1_2)).

(; Theorem: |- (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1680 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => thm_1679 t2_2 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_1681 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  t1_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (thm_1670 t1_1) (thm_1680 t1_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1682 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1683 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.EQ_MP (hol.forall hol.bool (t1_3 : hol.term hol.bool => hol.forall hol.bool (t2_4 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_3 t2_4)) (hol.or (hol.not t1_3) (hol.not t2_4))) (hol.eq hol.bool (hol.not (hol.or t1_3 t2_4)) (hol.and (hol.not t1_3) (hol.not t2_4)))))) (hol.forall hol.bool (t1_3 : hol.term hol.bool => hol.forall hol.bool (t2_4 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_3 t2_4)) (hol.or (hol.not t1_3) (hol.not t2_4))) (hol.eq hol.bool (hol.not (hol.or t1_3 t2_4)) (hol.and (hol.not t1_3) (hol.not t2_4)))))) thm_1667 thm_1681 t1_2 t2_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) => thm_1682 t2_1 t1_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1684 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (thm_1664 t2_1 t1_2) (thm_1683 t2_1 t1_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ (Data.Bool.? \lambda x. (P x))))) (Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1685 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) thm_1019 (thm_1617 A P_1).

(; Theorem: |- ((= (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1686 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_2 x_3) (P_2 y_4)) (hol.eq A x_3 y_4))) x_1) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV A hol.bool (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_2 x_3) (P_2 y_4)) (hol.eq A x_3 y_4))) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1687 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => thm_1686 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1688 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))) (thm_308 A) (thm_1687 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1689 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) thm_509 (thm_1688 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))))) (= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1690 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) thm_561 (thm_1689 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))) (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1691 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_2 x_3) (P_2 y_4)) (hol.eq A x_3 y_4))) x_1)) (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_2 x_3) (P_2 y_4)) (hol.eq A x_3 y_4))) x_1) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) thm_509 (thm_1686 A x_1 P_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))) \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1692 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (x_2 : hol.term A => thm_1691 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1693 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (thm_1607 A) (thm_1692 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1694 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (thm_1690 A P_1) (thm_1693 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) ;)

(; dict ;)

def thm_1695 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_1597 A p_1) A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1696 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (thm_1694 A P_1) (thm_1695 A P_1).

(; Theorem: |- ((= (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)) ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) ;)

(; dict ;)

def thm_1697 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => hol.imp (hol.and (P_3 x_2) (P_3 y_4)) (hol.eq A x_2 y_4)) y_1) (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV A hol.bool (y_4 : hol.term A => hol.imp (hol.and (P_3 x_2) (P_3 y_4)) (hol.eq A x_2 y_4)) y_1.

(; Theorem: |- ((= \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)) \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) ;)

(; dict ;)

def thm_1698 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => thm_1697 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1699 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)) (thm_308 A) (thm_1698 A x_1 P_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1700 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) thm_509 (thm_1699 A x_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))))) (= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1701 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) thm_561 (thm_1700 A x_1 P_2).

(; Theorem: |- ((= (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))) (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1702 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_3 x_2) (P_3 y_4)) (hol.eq A x_2 y_4)) y_1)) (hol.not (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_3 x_2) (P_3 y_4)) (hol.eq A x_2 y_4)) y_1) (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1)) thm_509 (thm_1697 A y_1 x_2 P_3).

(; Theorem: |- ((= \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))) \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1703 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (y_3 : hol.term A => thm_1702 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) (Data.Bool.? \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1704 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (thm_1607 A) (thm_1703 A x_1 P_2).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))))) ((= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) (Data.Bool.? \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1705 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (thm_1701 A x_1 P_2) (thm_1704 A x_1 P_2).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda y. (p y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (p y))))) ((= (Data.Bool.~ (Data.Bool.! \lambda y. (p y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (p y))))) ;)

(; dict ;)

def thm_1706 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))) (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda y. (p y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (p y))))) ;)

(; dict ;)

def thm_1707 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))) (thm_1595 A p_1) (thm_1706 A p_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. (p y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (p y)))) ;)

(; dict ;)

def thm_1708 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))) (thm_1707 A p_1) (thm_1597 A p_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) ;)

(; dict ;)

def thm_1709 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_1708 A p_1) A p_1) A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) (Data.Bool.? \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1710 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) (thm_1705 A x_1 P_2) (thm_1709 A x_1 P_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1711 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1712 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (thm_1711 t2_1 t1_2) (thm_1711 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1713 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp t1_1 t2_2)) (hol.and t1_1 (hol.not t2_2)))) :=
  t1_1 : hol.term hol.bool => thm_46 t1_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1714 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1713 t1_2 t2_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1715 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A x_2 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (thm_1712 t2_1 t1_2) (thm_1714 t2_1 t1_2)) (hol.eq A x_2 y_1) (hol.and (P_3 x_2) (P_3 y_1)).

(; Theorem: |- ((= \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1716 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))) (y_3 : hol.term A => thm_1715 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1717 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))) (thm_1607 A) (thm_1716 A x_1 P_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1718 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3)))) (thm_1710 A x_1 P_2) (thm_1717 A x_1 P_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1719 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))) (x_2 : hol.term A => thm_1718 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))) ;)

(; dict ;)

def thm_1720 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))) (thm_1607 A) (thm_1719 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))) ;)

(; dict ;)

def thm_1721 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) (thm_1696 A P_1) (thm_1720 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1722 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) (thm_1685 A P_1) (thm_1721 A P_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1723 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (thm_1684 A P_1) (thm_1722 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1724 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (thm_1662 A P_1) (thm_1723 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x))))) (= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ;)

(; dict ;)

def thm_1725 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) thm_561 (thm_1724 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1726 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (thm_1725 A P_1) (thm_1630 A P_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1727 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1726 A P_1).

(; Theorem: |- ((= ((= ((= x) y)) ((= y) x))) ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_1728 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)).

(; Theorem: |- ((= ((= ((= x) y)) ((= y) x))) ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_1729 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_1728 A y_1 x_2) (thm_1728 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_1730 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.eq hol.bool (hol.eq A x_1 y_2) (hol.eq A y_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => thm_47 A x_1.

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_1731 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_1730 A x_2 y_1.

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_1732 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_2 y_1) (hol.eq hol.bool y_1 x_2)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_1729 A y_1 x_2) (thm_1731 A y_1 x_2)) hol.bool y_1 x_2.

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ;)

(; dict ;)

def thm_1733 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => thm_1732 y_1 x_2) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) (Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1734 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))).

(; Theorem: |- ((= ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1735 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)).

(; Theorem: |- ((= ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1736 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (thm_1735 t3_1 t2_2 t1_3) (thm_1735 t3_1 t2_2 t1_3).

(; Theorem: |- ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ;)

(; dict ;)

def thm_1737 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) -> hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ;)

(; dict ;)

def thm_1738 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) -> hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) => hol.SYM hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1) (thm_1737 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ;)

(; dict ;)

def thm_1739 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) => hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ;)

(; dict ;)

def thm_1740 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) -> hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) => hol.SYM hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1)) (thm_1739 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3)))) ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1741 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.PROP_EXT (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) => thm_1738 t3_1 t2_2 t1_3 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) => thm_1740 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3)))) \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1742 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_2 t2_1) t3_3) (hol.and t1_2 (hol.and t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_2 t2_1) t3_3) (hol.and t1_2 (hol.and t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3)) (t3_3 : hol.term hol.bool => thm_1741 t3_3 t2_1 t1_2).

(; Theorem: |- ((= (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))))) (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1743 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_2 t2_1) t3_3) (hol.and t1_2 (hol.and t2_1 t3_3)))) (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_2 t2_1) t3_3) (hol.and t1_2 (hol.and t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3)) thm_85 (thm_1742 t2_1 t1_2).

(; Theorem: |- ((= \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))))) \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1744 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))) :=
  t1_1 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))) (t2_2 : hol.term hol.bool => thm_1743 t2_2 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3)))))) (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1745 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))))) :=
  t1_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))) thm_85 (thm_1744 t1_1).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3)))))) \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1746 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))))) :=
  hol.ABS_THM hol.bool hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))) (t1_1 : hol.term hol.bool => thm_1745 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)))))) ;)

(; dict ;)

def thm_1747 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))) thm_85 thm_1746.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1748 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))))) :=
  hol.EQ_MP (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))))) thm_1747 thm_48.

(; Theorem: |- (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1749 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))) :=
  t1_1 : hol.term hol.bool => thm_1748 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1750 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1749 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ;)

(; dict ;)

def thm_1751 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_1750 t2_2 t1_3 t3_1.

(; Theorem: |- ((= ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))) ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= y) x)))) ;)

(; dict ;)

def thm_1752 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (P_3 x_2) (hol.and (P_3 y_1) (hol.not (hol.eq A y_1 x_2)))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A y_1 x_2)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (thm_1736 t3_1 t2_2 t1_3) (thm_1751 t3_1 t2_2 t1_3)) (hol.not (hol.eq A y_1 x_2)) (P_3 y_1) (P_3 x_2).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool./\ (P x)) (P y)))) (Data.Bool./\ ((Data.Bool./\ (P x)) (P y)))) ;)

(; dict ;)

def thm_1753 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.and (P_3 x_2) (P_3 y_1))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.and (P_3 x_2) (P_3 y_1))).

(; Theorem: |- ((= ((= y) x)) ((= x) y)) ;)

(; dict ;)

def thm_1754 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A y_2 x_1) (hol.eq A x_1 y_2)) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_1731 A y_1 x_2) A x_1 y_2.

(; Theorem: |- ((= (Data.Bool.~ ((= y) x))) (Data.Bool.~ ((= x) y))) ;)

(; dict ;)

def thm_1755 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A y_2 x_1)) (hol.not (hol.eq A x_1 y_2))) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq A y_2 x_1) (hol.eq A x_1 y_2) thm_509 (thm_1754 A x_1 y_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= y) x)))) ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1756 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A y_1 x_2))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A x_2 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (hol.and (P_3 x_2) (P_3 y_1))) (hol.and (hol.and (P_3 x_2) (P_3 y_1))) (hol.not (hol.eq A y_1 x_2)) (hol.not (hol.eq A x_2 y_1)) (thm_1753 A y_1 x_2 P_3) (thm_1755 A x_2 y_1).

(; Theorem: |- ((= ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))) ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1757 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (P_3 x_2) (hol.and (P_3 y_1) (hol.not (hol.eq A y_1 x_2)))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A x_2 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.and (P_3 x_2) (hol.and (P_3 y_1) (hol.not (hol.eq A y_1 x_2)))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A y_1 x_2))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A x_2 y_1))) (thm_1752 A y_1 x_2 P_3) (thm_1756 A y_1 x_2 P_3).

(; Theorem: |- ((= \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))) \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1758 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.and (P_2 x_1) (hol.and (P_2 y_3) (hol.not (hol.eq A y_3 x_1)))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.and (P_2 x_1) (hol.and (P_2 y_3) (hol.not (hol.eq A y_3 x_1)))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))) (y_3 : hol.term A => thm_1757 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1759 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_2 x_1) (hol.and (P_2 y_3) (hol.not (hol.eq A y_3 x_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_3 : hol.term A => hol.and (P_2 x_1) (hol.and (P_2 y_3) (hol.not (hol.eq A y_3 x_1)))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))) (thm_1607 A) (thm_1758 A x_1 P_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))) \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1760 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))) (x_2 : hol.term A => thm_1759 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))) ;)

(; dict ;)

def thm_1761 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))) (thm_1607 A) (thm_1760 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1762 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) (thm_1734 A P_1) (thm_1761 A P_1).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) (= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ;)

(; dict ;)

def thm_1763 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) thm_561 (thm_1762 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1764 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ;)

(; dict ;)

def thm_1765 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (thm_1763 A P_1) (thm_1764 A P_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) Data.Bool.T) ;)

(; dict ;)

def thm_1766 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) Data.Bool.T) ;)

(; dict ;)

def thm_1767 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) hol.true (thm_1765 A P_1) (thm_1766 A P_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) Data.Bool.T) ;)

(; dict ;)

def thm_1768 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) hol.true (thm_1733 A P_1) (thm_1767 A P_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1769 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) hol.true (thm_1768 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ;)

(; dict ;)

def thm_1770 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP hol.true (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1769 A P_1) thm_4.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ;)

(; dict ;)

def thm_1771 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1727 A P_1) (thm_1770 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ;)

(; dict ;)

def thm_1772 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1632 A P_1) (thm_1771 A P_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1773 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (thm_1625 A P_1) (thm_1772 A P_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ;)

(; dict ;)

def thm_1774 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) (thm_1606 A P_1) (thm_1773 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1775 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hyp_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1776 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1774 A P_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) => thm_1775 A P_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1777 : P_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall Number_2ENatural_2Enatural P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (x_2 : hol.term Number_2ENatural_2Enatural => hol.not (P_1 x_2)))) :=
  P_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_1776 A P_1) Number_2ENatural_2Enatural P_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) x)))) ;)

(; dict ;)

def thm_1778 : hol.proof (hol.eq hol.bool (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (x_1 : hol.term Number_2ENatural_2Enatural => hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) x_1)))) :=
  (P_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_1777 P_1) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_1779 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool))) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool)).

(; Theorem: |- ((= (\lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) n)) (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1780 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1) (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) n))) (Data.Bool.~ (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))) ;)

(; dict ;)

def thm_1781 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1)) (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool hol.not hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1) (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) thm_509 (thm_1780 n_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_1782 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_600 p_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))))) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_1783 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (thm_1782 n_1) (thm_649 n_1).

(; Theorem: |- ((= (Data.Bool.~ (\lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) n))) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_1784 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1)) (hol.not (hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (thm_1781 n_1) (thm_1783 n_1).

(; Theorem: |- ((= \lambda n. (Data.Bool.~ (\lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) n))) \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_1785 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_1 : hol.term Number_2ENatural_2Enatural => hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) (n_1 : hol.term Number_2ENatural_2Enatural => thm_1784 n_1).

(; Theorem: |- ((= (Data.Bool.? \lambda n. (Data.Bool.~ (\lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) n)))) (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1786 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) n_1)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)) thm_1779 thm_1785.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1787 : hol.proof (hol.eq hol.bool (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  hol.TRANS hol.bool (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (x_1 : hol.term Number_2ENatural_2Enatural => hol.not ((n_2 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_2))) (HOLLight_2Emk__num HOLLight_2EIND__0))) x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) thm_1778 thm_1786.

(; Theorem: |- ((= (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1788 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))).

(; Theorem: |- ((= (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1789 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) thm_1788 thm_1788.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1790 : hol.proof (hol.eq hol.bool (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  hol.TRANS hol.bool (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) thm_1787 thm_1789.

(; Theorem: |- (Data.Bool.? \lambda n. ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0))) ;)

(; dict ;)

def thm_1791 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hol.EQ_MP (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))) thm_1790 (thm_609 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1792 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof hol.false :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => thm_1574 hyp_1 hyp_2 hyp_3 hyp_5 (thm_1791 hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1793 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof hol.false :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) hol.false (hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) thm_643 (thm_644 hyp_1)) (hyp_6 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => thm_1792 hyp_6 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1794 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof hol.false :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => hol.PROVE_HYP (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) hol.false (hol.EQ_MP (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) thm_638 (thm_639 hyp_2)) (hyp_6 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => thm_1793 hyp_1 hyp_6 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F) ;)

(; dict ;)

def thm_1795 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hyp_5 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => thm_1794 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5.

(; Theorem: |- (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_1796 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) -> hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_4 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hol.EQ_MP (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))) thm_624 (thm_1795 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))) ;)

(; dict ;)

def thm_1797 : hyp_1 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_2 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) -> hyp_3 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_2 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => hyp_3 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) => thm_1796 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))))) ;)

(; dict ;)

def thm_1798 : hyp_1 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) -> hyp_2 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => hyp_2 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hyp_3 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) => thm_1797 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))))))) ;)

(; dict ;)

def thm_1799 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))))))) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hyp_2 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) => thm_1798 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) (Data.Bool.~ ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))))))) ;)

(; dict ;)

def thm_1800 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => thm_1799 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_1801 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) :=
  hol.EQ_MP (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.not (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))))))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) thm_634 thm_1800.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)))) ;)

(; dict ;)

def thm_1802 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hol.EQ_MP (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) thm_611 (hol.EQ_MP (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) (hol.imp (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))))) (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) (hol.imp (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)))))) thm_613 (thm_618 thm_619) thm_1801) (thm_609 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2)))))) (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_1803 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))))) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))))).

(; Theorem: |- ((= (= (HOLLight.IND_SUC x))) (= (HOLLight.IND_SUC x))) ;)

(; dict ;)

def thm_1804 : x_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (HOLLight_2EIND__SUC x_1)) (hol.eq hol.ind (HOLLight_2EIND__SUC x_1))) :=
  x_1 : hol.term hol.ind => hol.REFL (hol.arr hol.ind hol.bool) (hol.eq hol.ind (HOLLight_2EIND__SUC x_1)).

(; Theorem: |- ((= ((= (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) HOLLight.IND_0)) ((= (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1805 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0)) :=
  hol.REFL hol.bool (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0).

(; Theorem: |- ((= ((= (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) HOLLight.IND_0)) ((= (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1806 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0)) :=
  hol.TRANS hol.bool (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) thm_1805 thm_1805.

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) HOLLight.IND_0) ;)

(; dict ;)

def thm_1807 : hyp_1 : hol.proof (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) -> hol.proof (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) :=
  hyp_1 : hol.proof (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) => hyp_1.

(; Theorem: |- ((= HOLLight.IND_0) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) ;)

(; dict ;)

def thm_1808 : hyp_1 : hol.proof (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) -> hol.proof (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) :=
  hyp_1 : hol.proof (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) => hol.SYM hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0 (thm_1807 hyp_1).

(; Theorem: |- ((= HOLLight.IND_0) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) ;)

(; dict ;)

def thm_1809 : hyp_1 : hol.proof (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) -> hol.proof (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) :=
  hyp_1 : hol.proof (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) => hyp_1.

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) HOLLight.IND_0) ;)

(; dict ;)

def thm_1810 : hyp_1 : hol.proof (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) -> hol.proof (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) :=
  hyp_1 : hol.proof (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) => hol.SYM hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) (thm_1809 hyp_1).

(; Theorem: |- ((= ((= HOLLight.IND_0) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))))) ((= (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1811 : hol.proof (hol.eq hol.bool (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0)) :=
  hol.PROP_EXT (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) (hyp_1 : hol.proof (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) => thm_1808 hyp_1) (hyp_1 : hol.proof (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) => thm_1810 hyp_1).

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) HOLLight.IND_0) ;)

(; dict ;)

def thm_1812 : hol.proof (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) :=
  hol.EQ_MP (hol.eq hol.ind HOLLight_2EIND__0 (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) (hol.eq hol.ind (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) HOLLight_2EIND__0) thm_1811 thm_62.

(; Theorem: |- ((= ((= (HOLLight.IND_SUC x)) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))))) ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)) ;)

(; dict ;)

def thm_1813 : x_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2)))))) (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) :=
  x_1 : hol.term hol.ind => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x_1)) (hol.eq hol.ind (HOLLight_2EIND__SUC x_1)) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))) HOLLight_2EIND__0 (thm_1804 x_1) (hol.EQ_MP (hol.eq hol.ind (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))) HOLLight_2EIND__0) (hol.eq hol.ind (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))) HOLLight_2EIND__0) thm_1806 thm_1812).

(; Theorem: |- ((= (Data.Bool.~ ((= (HOLLight.IND_SUC x)) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))))) (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) ;)

(; dict ;)

def thm_1814 : x_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))))) (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) :=
  x_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2)))))) (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0) thm_509 (thm_1813 x_1).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))))) \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) ;)

(; dict ;)

def thm_1815 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))))) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) :=
  hol.ABS_THM hol.ind hol.bool (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))))) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) (x_1 : hol.term hol.ind => thm_1814 x_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ;)

(; dict ;)

def thm_1816 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2)))))))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))))) (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)) thm_72 thm_1815.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))))) ;)

(; dict ;)

def thm_1817 : hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))))))) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))))) :=
  hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))))) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2)))))))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) thm_1803 thm_1816.

(; Theorem: |- ((= (\lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))))))) ;)

(; dict ;)

def thm_1818 : hol.proof (hol.eq hol.bool ((z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))) (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2)))))))))) :=
  hol.BETA_CONV hol.ind hol.bool (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))) (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))).

(; Theorem: |- ((= ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_1819 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1))))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_1820 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1))))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (thm_1819 q_27_1 q_2 p_27_3 p_4) (thm_1819 q_27_1 q_2 p_27_3 p_4).

(; Theorem: |- ((Data.Bool.==> p) p') ;)

(; dict ;)

def thm_1821 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_2 p_27_1) -> hol.proof (hol.imp p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_2 p_27_1) => hyp_1.

(; Theorem: |- p' ;)

(; dict ;)

def thm_1822 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof p_27_2 :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 p_27_2) => thm_1821 p_27_2 p_1 hyp_2 (thm_89 p_1 hyp_1).

(; Theorem: |- p' ;)

(; dict ;)

def thm_1823 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof p_27_2 :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 p_27_2) => hol.PROVE_HYP p_1 p_27_2 (thm_89 p_1 hyp_1) (hyp_3 : hol.proof p_1 => thm_1822 p_1 p_27_2 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> p') q') ;)

(; dict ;)

def thm_1824 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_2 q_27_1) -> hol.proof (hol.imp p_27_2 q_27_1) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_1.

(; Theorem: |- p' ;)

(; dict ;)

def thm_1825 : p_27_1 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hol.proof p_27_1 :=
  p_27_1 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_1826 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hol.proof q_27_2 :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => thm_1824 q_27_2 p_27_1 hyp_2 (thm_1825 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_1827 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_27_2 q_1) -> hol.proof (hol.imp q_27_2 q_1) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_27_2 q_1) => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_1828 : q_27_1 : hol.term hol.bool -> hyp_1 : hol.proof q_27_1 -> hol.proof q_27_1 :=
  q_27_1 : hol.term hol.bool => hyp_1 : hol.proof q_27_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_1829 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof q_27_1 -> hyp_2 : hol.proof (hol.imp q_27_1 q_2) -> hol.proof q_2 :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof q_27_1 => hyp_2 : hol.proof (hol.imp q_27_1 q_2) => thm_1827 q_2 q_27_1 hyp_2 (thm_1828 q_27_1 hyp_1).

(; Theorem: |- q ;)

(; dict ;)

def thm_1830 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_2 -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp q_27_1 q_3) -> hol.proof q_3 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_2 => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp q_27_1 q_3) => hol.PROVE_HYP q_27_1 q_3 (thm_1826 p_27_2 q_27_1 hyp_1 hyp_2) (hyp_4 : hol.proof q_27_1 => thm_1829 q_27_1 q_3 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q) ;)

(; dict ;)

def thm_1831 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hyp_3 : hol.proof (hol.imp q_27_2 q_3) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_3) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => hyp_3 : hol.proof (hol.imp q_27_2 q_3) => hyp_4 : hol.proof (hol.imp q_3 q_27_2) => thm_1830 q_27_2 p_27_1 q_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q') q)) ((Data.Bool.==> ((Data.Bool.==> q) q')) q)) ;)

(; dict ;)

def thm_1832 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_3) -> hol.proof (hol.imp (hol.imp q_27_3 q_2) (hol.imp (hol.imp q_2 q_27_3) q_2)) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_3) => hyp_3 : hol.proof (hol.imp q_27_3 q_2) => thm_1831 p_27_1 q_27_3 q_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((= q) q')) ((Data.Bool.==> q) q')) ;)

(; dict ;)

def thm_1833 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool q_2 q_27_1) (hol.imp q_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_275 q_1 p_2) q_27_1 q_2.

(; Theorem: |- ((Data.Bool.==> p') ((= q) q')) ;)

(; dict ;)

def thm_1834 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => hyp_1.

(; Theorem: |- ((= q) q') ;)

(; dict ;)

def thm_1835 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.eq hol.bool q_3 q_27_2) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_1834 q_27_2 q_3 p_27_1 hyp_2 (thm_1825 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q') ;)

(; dict ;)

def thm_1836 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.imp q_3 q_27_2) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_1833 q_27_2 q_3 (thm_1835 p_27_1 q_27_2 q_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> q') q)) ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q))) ;)

(; dict ;)

def thm_1837 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_1 q_27_2) -> hol.proof (hol.eq hol.bool (hol.imp q_27_2 q_1) (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1))) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_1 q_27_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> q') q)) ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q))) ;)

(; dict ;)

def thm_1838 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.eq hol.bool (hol.imp q_27_3 q_2) (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2))) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => hol.PROVE_HYP (hol.imp q_2 q_27_3) (hol.eq hol.bool (hol.imp q_27_3 q_2) (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2))) (thm_1836 p_27_1 q_27_3 q_2 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.imp q_2 q_27_3) => thm_1837 q_2 q_27_3 hyp_3).

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_1839 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.SYM hol.bool p_1 q_2 (thm_272 q_2 p_1 hyp_1).

(; Theorem: |- p ;)

(; dict ;)

def thm_1840 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_2 : hol.proof (hol.eq hol.bool p_2 q_1) => hol.EQ_MP q_1 p_2 (thm_1839 p_2 q_1 hyp_2) (thm_108 q_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_1841 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) => hyp_2 : hol.proof q_2 => thm_1840 q_2 p_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_1842 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_1841 p_2 q_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= q) q')) ((Data.Bool.==> q') q)) ;)

(; dict ;)

def thm_1843 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool q_2 q_27_1) (hol.imp q_27_1 q_2)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_1842 q_1 p_2) q_27_1 q_2.

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_1844 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.imp q_27_3 q_2) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => thm_1843 q_27_3 q_2 (thm_1835 p_27_1 q_27_3 q_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q)) ;)

(; dict ;)

def thm_1845 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.and (hol.imp q_3 q_27_2) (hol.imp q_27_2 q_3)) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => hol.EQ_MP (hol.imp q_27_2 q_3) (hol.and (hol.imp q_3 q_27_2) (hol.imp q_27_2 q_3)) (thm_1838 p_27_1 q_3 q_27_2 hyp_1 hyp_2) (thm_1844 p_27_1 q_3 q_27_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_1846 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1)) -> hol.proof (hol.imp q_27_2 q_1) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1) hyp_1.

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_1847 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.imp q_27_3 q_2) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => hol.PROVE_HYP (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2)) (hol.imp q_27_3 q_2) (thm_1845 p_27_1 q_27_3 q_2 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2)) => thm_1846 q_2 q_27_3 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q) ;)

(; dict ;)

def thm_1848 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hyp_3 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_3) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => hyp_3 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_1832 p_27_1 q_3 q_27_2 hyp_1 hyp_2 (thm_1847 p_27_1 q_3 q_27_2 hyp_1 hyp_3).

(; Theorem: |- q ;)

(; dict ;)

def thm_1849 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_2 -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof q_3 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_2 => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => thm_1848 p_27_2 q_27_1 q_3 hyp_1 hyp_2 hyp_3 (thm_1836 p_27_2 q_27_1 q_3 hyp_1 hyp_3).

(; Theorem: |- q ;)

(; dict ;)

def thm_1850 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.imp p_3 p_27_2) -> hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) -> hol.proof q_4 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.imp p_3 p_27_2) => hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) => hol.PROVE_HYP p_27_2 q_4 (thm_1823 p_3 p_27_2 hyp_1 hyp_2) (hyp_5 : hol.proof p_27_2 => thm_1849 q_27_1 p_27_2 q_4 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q) ;)

(; dict ;)

def thm_1851 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_4 -> hyp_2 : hol.proof (hol.imp p_27_3 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_2) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_4 => hyp_2 : hol.proof (hol.imp p_27_3 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => hyp_4 : hol.proof (hol.imp p_4 p_27_3) => thm_1850 q_27_1 p_27_3 p_4 q_2 hyp_1 hyp_4 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') p)) ((Data.Bool.==> ((Data.Bool.==> p) p')) q)) ;)

(; dict ;)

def thm_1852 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.imp p_27_4 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_27_4 p_3) (hol.imp (hol.imp p_3 p_27_4) q_2)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.imp p_27_4 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_2 q_27_1)) => hyp_4 : hol.proof (hol.imp p_27_4 p_3) => thm_1851 q_27_1 q_2 p_27_4 p_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> p) p')) ;)

(; dict ;)

def thm_1853 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 p_27_1) (hol.imp p_2 p_27_1)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_275 q_1 p_2) p_27_1 p_2.

(; Theorem: |- ((= p) p') ;)

(; dict ;)

def thm_1854 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.eq hol.bool p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> p) p') ;)

(; dict ;)

def thm_1855 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.imp p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => thm_1853 p_27_1 p_2 (thm_1854 p_27_1 p_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> p') p)) ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p))) ;)

(; dict ;)

def thm_1856 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_1 p_27_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> p') p)) ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p))) ;)

(; dict ;)

def thm_1857 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => hol.PROVE_HYP (hol.imp p_1 p_27_2) (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) (thm_1855 p_27_2 p_1 hyp_1) (hyp_2 : hol.proof (hol.imp p_1 p_27_2) => thm_1856 p_1 p_27_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> p') p)) ;)

(; dict ;)

def thm_1858 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 p_27_1) (hol.imp p_27_1 p_2)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_1842 q_1 p_2) p_27_1 p_2.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_1859 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => thm_1858 p_27_2 p_1 (thm_1854 p_27_2 p_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p)) ;)

(; dict ;)

def thm_1860 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.and (hol.imp p_2 p_27_1) (hol.imp p_27_1 p_2)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => hol.EQ_MP (hol.imp p_27_1 p_2) (hol.and (hol.imp p_2 p_27_1) (hol.imp p_27_1 p_2)) (thm_1857 p_2 p_27_1 hyp_1) (thm_1859 p_2 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_1861 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1) hyp_1.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_1862 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => hol.PROVE_HYP (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) (hol.imp p_27_2 p_1) (thm_1860 p_27_2 p_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) => thm_1861 p_1 p_27_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q) ;)

(; dict ;)

def thm_1863 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_4 -> hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) -> hyp_3 : hol.proof (hol.imp p_27_3 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_2) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_4 => hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) => hyp_3 : hol.proof (hol.imp p_27_3 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => thm_1852 q_27_1 q_2 p_4 p_27_3 hyp_1 hyp_3 hyp_4 (thm_1862 p_4 p_27_3 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_1864 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_3 p_27_2) -> hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) -> hol.proof q_4 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.eq hol.bool p_3 p_27_2) => hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) => thm_1863 q_27_1 q_4 p_27_2 p_3 hyp_1 hyp_2 hyp_3 hyp_4 (thm_1855 p_27_2 p_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_1865 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.imp p_4 q_3) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hyp_4 : hol.proof p_4 => thm_1864 q_27_1 p_27_2 p_4 q_3 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') q')) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_1866 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) -> hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) -> hol.proof (hol.imp (hol.imp p_27_4 q_27_3) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) => hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) => hyp_3 : hol.proof (hol.imp p_27_4 q_27_3) => thm_1865 q_27_3 p_27_4 q_1 p_2 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_1867 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_2 p_1) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_2 p_1) => hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_1868 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 p_2) => thm_1867 p_2 p_27_1 hyp_2 (thm_1825 p_27_1 hyp_1).

(; Theorem: |- p ;)

(; dict ;)

def thm_1869 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_27_1 p_2 (thm_1825 p_27_1 hyp_1) (hyp_3 : hol.proof p_27_1 => thm_1868 p_27_1 p_2 hyp_3 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_1870 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof (hol.imp p_2 p_27_1) -> hyp_3 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof (hol.imp p_2 p_27_1) => hyp_3 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_27_1 p_2 (thm_1822 p_2 p_27_1 hyp_1 hyp_2) (hyp_4 : hol.proof p_27_1 => thm_1868 p_27_1 p_2 hyp_4 hyp_3).

(; Theorem: |- p ;)

(; dict ;)

def thm_1871 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_2 p_27_1) -> hyp_3 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_2 p_27_1) => hyp_3 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_2 p_2 (thm_1869 p_27_1 p_2 hyp_1 hyp_3) (hyp_4 : hol.proof p_2 => thm_1870 p_27_1 p_2 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> q) q') ;)

(; dict ;)

def thm_1872 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_2 q_27_1) -> hol.proof (hol.imp q_2 q_27_1) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_2 q_27_1) => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_1873 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hyp_2 : hol.proof (hol.imp q_1 q_27_2) -> hol.proof q_27_2 :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_2 : hol.proof (hol.imp q_1 q_27_2) => thm_1872 q_27_2 q_1 hyp_2 (thm_108 q_1 hyp_1).

(; Theorem: |- q' ;)

(; dict ;)

def thm_1874 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hyp_3 : hol.proof (hol.imp q_1 q_27_3) -> hol.proof q_27_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof (hol.imp p_2 q_1) => hyp_3 : hol.proof (hol.imp q_1 q_27_3) => hol.PROVE_HYP q_1 q_27_3 (thm_411 p_2 q_1 hyp_1 hyp_2) (hyp_4 : hol.proof q_1 => thm_1873 q_1 q_27_3 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q') ;)

(; dict ;)

def thm_1875 : p_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_3) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_27_2) :=
  p_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_3) => hyp_3 : hol.proof (hol.imp q_3 q_27_2) => thm_1874 q_3 p_1 q_27_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q') q)) ((Data.Bool.==> ((Data.Bool.==> q) q')) q')) ;)

(; dict ;)

def thm_1876 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_2) -> hol.proof (hol.imp (hol.imp q_27_3 q_2) (hol.imp (hol.imp q_2 q_27_3) q_27_3)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_2) => hyp_3 : hol.proof (hol.imp q_27_3 q_2) => thm_1875 p_1 q_27_3 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q') ;)

(; dict ;)

def thm_1877 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof p_27_1 -> hyp_3 : hol.proof (hol.imp p_2 q_4) -> hyp_4 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_4 q_27_3)) -> hol.proof (hol.imp (hol.imp q_4 q_27_3) q_27_3) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof p_27_1 => hyp_3 : hol.proof (hol.imp p_2 q_4) => hyp_4 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_4 q_27_3)) => thm_1876 p_2 q_4 q_27_3 hyp_1 hyp_3 (thm_1844 p_27_1 q_4 q_27_3 hyp_2 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_1878 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof p_27_2 -> hyp_3 : hol.proof (hol.imp p_3 q_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof p_27_2 => hyp_3 : hol.proof (hol.imp p_3 q_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) => thm_1877 p_27_2 p_3 q_27_4 q_1 hyp_1 hyp_2 hyp_3 hyp_4 (thm_1836 p_27_2 q_27_4 q_1 hyp_2 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_1879 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof p_27_2 -> hyp_3 : hol.proof (hol.imp p_3 q_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof p_27_2 => hyp_3 : hol.proof (hol.imp p_3 q_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) => hol.PROVE_HYP p_27_2 q_27_4 (thm_1825 p_27_2 hyp_2) (hyp_5 : hol.proof p_27_2 => thm_1878 q_1 p_27_2 p_3 q_27_4 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_1880 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.imp p_2 p_27_3) -> hyp_3 : hol.proof (hol.imp p_2 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 p_2) -> hyp_5 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.imp p_2 p_27_3) => hyp_3 : hol.proof (hol.imp p_2 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 p_2) => hyp_5 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) => hol.PROVE_HYP p_2 q_27_4 (thm_1871 p_27_3 p_2 hyp_1 hyp_2 hyp_4) (hyp_6 : hol.proof p_2 => thm_1879 q_1 p_27_3 p_2 q_27_4 hyp_6 hyp_1 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q') ;)

(; dict ;)

def thm_1881 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.imp p_4 q_1) -> hyp_3 : hol.proof (hol.imp p_27_3 p_4) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_27_2) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.imp p_4 q_1) => hyp_3 : hol.proof (hol.imp p_27_3 p_4) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) => hyp_5 : hol.proof (hol.imp p_4 p_27_3) => thm_1880 q_1 p_4 p_27_3 q_27_2 hyp_1 hyp_5 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') p)) ((Data.Bool.==> ((Data.Bool.==> p) p')) q')) ;)

(; dict ;)

def thm_1882 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_4 -> hyp_2 : hol.proof (hol.imp p_3 q_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_27_4 p_3) (hol.imp (hol.imp p_3 p_27_4) q_27_2)) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_4 => hyp_2 : hol.proof (hol.imp p_3 q_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_2)) => hyp_4 : hol.proof (hol.imp p_27_4 p_3) => thm_1881 q_1 q_27_2 p_27_4 p_3 hyp_1 hyp_2 hyp_4 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q') ;)

(; dict ;)

def thm_1883 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) -> hyp_3 : hol.proof (hol.imp p_4 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_27_2) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) => hyp_3 : hol.proof (hol.imp p_4 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) => thm_1882 q_1 q_27_2 p_4 p_27_3 hyp_1 hyp_3 hyp_4 (thm_1859 p_4 p_27_3 hyp_2).

(; Theorem: |- q' ;)

(; dict ;)

def thm_1884 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_2 p_27_3) -> hyp_3 : hol.proof (hol.imp p_2 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.eq hol.bool p_2 p_27_3) => hyp_3 : hol.proof (hol.imp p_2 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) => thm_1883 q_1 q_27_4 p_27_3 p_2 hyp_1 hyp_2 hyp_3 hyp_4 (thm_1855 p_27_3 p_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> p') q') ;)

(; dict ;)

def thm_1885 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) -> hol.proof (hol.imp p_27_4 q_27_3) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) => hyp_2 : hol.proof (hol.imp p_2 q_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) => hyp_4 : hol.proof p_27_4 => thm_1884 q_1 p_2 p_27_4 q_27_3 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')) ;)

(; dict ;)

def thm_1886 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hyp_3 : hol.proof (hol.imp p_4 q_3) => thm_1885 q_3 p_4 q_27_1 p_27_2 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')) ;)

(; dict ;)

def thm_1887 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.eq hol.bool (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hol.PROP_EXT (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1) (hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => thm_1866 q_3 p_4 q_27_1 p_27_2 hyp_1 hyp_2 (thm_1824 q_27_1 p_27_2 hyp_3)) (hyp_3 : hol.proof (hol.imp p_4 q_3) => thm_1886 q_27_1 p_27_2 q_3 p_4 hyp_1 hyp_2 (thm_410 q_3 p_4 hyp_3)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))) ;)

(; dict ;)

def thm_1888 : p_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_4) -> hol.proof (hol.imp (hol.imp p_27_4 (hol.eq hol.bool q_3 q_27_2)) (hol.eq hol.bool (hol.imp p_1 q_3) (hol.imp p_27_4 q_27_2))) :=
  p_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_4) => hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_3 q_27_2)) => thm_1887 q_27_2 p_27_4 q_3 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')))) ;)

(; dict ;)

def thm_1889 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_3) => thm_1888 p_4 q_27_1 q_2 p_27_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_1890 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_27_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4))))) :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4)))) (hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4)))) (thm_1820 q_27_4 q_1 p_27_2 p_3) (thm_1889 q_27_4 q_1 p_27_2 p_3).

(; Theorem: |- (Data.Bool.! \lambda p'. (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')))))) ;)

(; dict ;)

def thm_1891 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (p_27_3 : hol.term hol.bool => hol.forall hol.bool (q_27_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool p_2 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.imp p_27_3 q_27_4)))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => thm_1890 q_1 p_27_3 p_2.

(; Theorem: |- (Data.Bool.! \lambda p'. (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q')))))) ;)

(; dict ;)

def thm_1892 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (p_27_2 : hol.term hol.bool => hol.forall hol.bool (q_27_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool (p_1 (hol.select A p_1)) q_27_3)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp p_27_2 q_27_3)))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_1891 q_1 p_2) (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_1893 : A : hol.type -> p_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (q_27_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) p_27_1) (hol.imp (hol.imp p_27_1 (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_3)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp p_27_1 q_27_3))))) :=
  A : hol.type => p_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_1892 A p_2 p_27_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q')))) ;)

(; dict ;)

def thm_1894 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool (p_3 (hol.select A p_3)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (p_3 (hol.select A p_3))) (hol.imp p_27_2 q_27_1)))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term (hol.arr A hol.bool) => thm_1893 A p_27_2 p_3 q_27_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? p)) (Data.Bool.? p))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) q')))) ;)

(; dict ;)

def thm_1895 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2)) (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) q_27_1)))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term (hol.arr A hol.bool) => thm_1894 A q_27_1 p_27_2 p_3) A q_27_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) p_2.

(; Theorem: |- ((= (Data.Bool.? p)) (Data.Bool.? p)) ;)

(; dict ;)

def thm_1896 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) q'))) ;)

(; dict ;)

def thm_1897 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) q_27_1))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_1895 A q_27_1 p_2 (thm_1896 A p_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) Data.Bool.T))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T))) ;)

(; dict ;)

def thm_1898 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_1897 A q_27_1 p_2) A hol.true p_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_1899 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_1900 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_1899 A P_1) (thm_1899 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ;)

(; dict ;)

def thm_1901 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ;)

(; dict ;)

def thm_1902 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (thm_1901 A Q_1 P_2) (thm_1901 A Q_1 P_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (P x)) Q)) \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_1903 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (P x)) Q)) \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_1904 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.TRANS (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (thm_1903 A Q_1 P_2) (thm_1903 A Q_1 P_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ;)

(; dict ;)

def thm_1905 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (thm_308 A) (thm_1904 A Q_1 P_2).

(; Theorem: |- ((= (P x)) (\lambda x_1. (P x_1) x)) ;)

(; dict ;)

def thm_1906 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (P_2 x_1) ((x__1_3 : hol.term A => P_2 x__1_3) x_1)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool ((x__1_3 : hol.term A => P_2 x__1_3) x_1) (P_2 x_1) (thm_1649 A x_1 P_2).

(; Theorem: |- (\lambda x_1. (P x_1) x) ;)

(; dict ;)

def thm_1907 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof ((x__1_3 : hol.term A => P_2 x__1_3) x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (P_2 x_1) ((x__1_3 : hol.term A => P_2 x__1_3) x_1) (thm_1906 A x_1 P_2) (thm_261 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_1908 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_265 A x_1 P_2 hyp_1) A x_1 (x_3 : hol.term A => P_2 x_3) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_1909 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.PROVE_HYP ((x__1_3 : hol.term A => P_2 x__1_3) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) (thm_1907 A x_1 P_2 hyp_1) (hyp_2 : hol.proof ((x__1_3 : hol.term A => P_2 x__1_3) x_1) => thm_1908 A x_1 P_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q) ;)

(; dict ;)

def thm_1910 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_1911 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_1912 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) -> hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) => thm_1910 A Q_2 P_1 hyp_2 (thm_1911 A P_1 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_1913 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_2 x__1_4)) Q_3) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_2 x__1_4)) Q_3) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => P_2 x_4)) Q_3 (thm_1909 A x_1 P_2 hyp_1) (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => P_2 x_4)) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) => thm_1912 A P_1 Q_2 hyp_1 hyp_2) A P_2 Q_3 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_1914 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_3 x__1_4)) Q_1) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_3 x__1_4)) Q_1) => hyp_2 : hol.proof (P_3 x_2) => thm_1913 A x_2 P_3 Q_1 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_1915 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1) => x_3 : hol.term A => thm_1914 A Q_1 x_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ;)

(; dict ;)

def thm_1916 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (thm_1905 A Q_1 P_2) (thm_1915 A Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. (P x) x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_1917 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp ((x_4 : hol.term A => P_2 x_4) x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_283 A Q_1 P_2) A Q_1 (x_3 : hol.term A => P_2 x_3).

(; Theorem: |- (\lambda x. (P x) x) ;)

(; dict ;)

def thm_1918 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => hyp_1.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_1919 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => hol.EQ_MP ((x_3 : hol.term A => P_2 x_3) x_1) (P_2 x_1) (thm_1649 A x_1 P_2) (thm_1918 A x_1 P_2 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_1920 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hyp_2 : hol.proof ((x_4 : hol.term A => P_2 x_4) x_1) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => hyp_2 : hol.proof ((x_4 : hol.term A => P_2 x_4) x_1) => thm_260 A Q_3 x_1 P_2 hyp_1 (thm_1919 A x_1 P_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. (P x) x)) Q) ;)

(; dict ;)

def thm_1921 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp ((x_4 : hol.term A => P_3 x_4) x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => hyp_2 : hol.proof ((x_4 : hol.term A => P_3 x_4) x_2) => thm_1920 A x_2 P_3 Q_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. (P x) x)) Q)) ;)

(; dict ;)

def thm_1922 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp ((x_4 : hol.term A => P_2 x_4) x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => x_3 : hol.term A => thm_1921 A Q_1 x_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q) ;)

(; dict ;)

def thm_1923 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_1917 A Q_1 P_2 (thm_1922 A Q_1 P_2 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_1924 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => thm_1923 A Q_2 P_1 hyp_1 (thm_1911 A P_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_1925 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) => thm_1924 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_1926 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.PROP_EXT (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) (hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => thm_1916 A Q_1 P_2 (thm_1910 A Q_1 P_2 hyp_1)) (hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_1925 A Q_1 P_2 (thm_259 A Q_1 P_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T)))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_1927 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x__1_3 : hol.term A => hol.imp (P_2 x__1_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (thm_1902 A Q_1 P_2) ((A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_1926 A Q_1 P_2) A Q_1 P_2)) A Q_1 P_2) A (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true) P_1.

(; Theorem: |- ((= ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_1928 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)) (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)).

(; Theorem: |- ((= (P (select P))) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_1929 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (P_1 (hol.select A P_1)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => thm_173 t_1) (P_1 (hol.select A P_1)).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) (P (select P)))) ;)

(; dict ;)

def thm_1930 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (P_1 (hol.select A P_1)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_49 A P_1.

(; Theorem: |- ((Data.Bool.==> (P x)) (P (select P))) ;)

(; dict ;)

def thm_1931 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (P_2 x_1) (P_2 (hol.select A P_2))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => thm_1930 A P_2 x_1.

(; Theorem: |- (P (select P)) ;)

(; dict ;)

def thm_1932 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 (hol.select A P_2)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_1931 A x_1 P_2 (thm_261 A x_1 P_2 hyp_1).

(; Theorem: |- ((= (P (select P))) Data.Bool.T) ;)

(; dict ;)

def thm_1933 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (P_2 (hol.select A P_2)) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true) (thm_1929 A P_2) (thm_1932 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_1934 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_1933 A x_1 P_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_1935 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.EQ_MP (hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_1928 A x_2 P_1) (thm_1934 A x_2 P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_1936 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_1927 A P_1) (thm_1935 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) ((= (p (select p))) Data.Bool.T)) ;)

(; dict ;)

def thm_1937 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_1900 A P_1) (thm_1936 A P_1)) A P_1) A p_1.

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_1938 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => thm_39 B A t_1.

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_1939 : A : hol.type -> t_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => t_1 x_2) t_1) :=
  A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => (B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => thm_1938 B A t_1) hol.bool A t_1.

(; Theorem: |- ((= \lambda x. (p x)) p) ;)

(; dict ;)

def thm_1940 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => p_1 x_2) p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => thm_1939 A t_1) A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? p)) ;)

(; dict ;)

def thm_1941 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => p_1 x_2) p_1 (thm_1607 A) (thm_1940 A p_1).

(; Theorem: |- ((= ((= (Data.Bool.? p)) Data.Bool.T)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_1942 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true).

(; Theorem: |- ((= ((= (Data.Bool.? p)) Data.Bool.T)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_1943 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_1942 A p_1) (thm_1942 A p_1).

(; Theorem: |- ((= (Data.Bool.? p)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_1944 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => thm_173 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- (Data.Bool.? p) ;)

(; dict ;)

def thm_1945 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? p)) Data.Bool.T) ;)

(; dict ;)

def thm_1946 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_1944 A p_1) (thm_1945 A p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (p x))) Data.Bool.T) ;)

(; dict ;)

def thm_1947 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true (thm_1941 A p_1) (hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_1943 A p_1) (thm_1946 A p_1 hyp_1)).

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.? \lambda x. (p x))) ;)

(; dict ;)

def thm_1948 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) hol.true (thm_1947 A p_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. (p x)) ;)

(; dict ;)

def thm_1949 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.EQ_MP hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (thm_1948 A p_1 hyp_1) thm_4.

(; Theorem: |- ((= (p (select p))) Data.Bool.T) ;)

(; dict ;)

def thm_1950 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => thm_1937 A p_1 (thm_1949 A p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) Data.Bool.T)) ;)

(; dict ;)

def thm_1951 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => thm_1950 A p_1 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_1952 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_1898 A p_1 (thm_1951 A p_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1953 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => thm_548 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) Data.Bool.T) ;)

(; dict ;)

def thm_1954 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) hol.true (thm_1952 A p_1) (thm_1953 A p_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ;)

(; dict ;)

def thm_1955 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) hol.true (thm_1954 A p_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) (p (select p))) ;)

(; dict ;)

def thm_1956 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP hol.true (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (thm_1955 A p_1) thm_4.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) (\lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))))) ;)

(; dict ;)

def thm_1957 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) ((z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))) (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))))) :=
  (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_1956 A p_1) hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))).

(; Theorem: |- ((= ((= (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) HOLLight.IND_SUC)) ((= (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) HOLLight.IND_SUC)) ;)

(; dict ;)

def thm_1958 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC)) :=
  hol.REFL hol.bool (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC).

(; Theorem: |- ((= ((= (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) HOLLight.IND_SUC)) ((= (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) HOLLight.IND_SUC)) ;)

(; dict ;)

def thm_1959 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC)) :=
  hol.TRANS hol.bool (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) thm_1958 thm_1958.

(; Theorem: |- ((= (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) HOLLight.IND_SUC) ;)

(; dict ;)

def thm_1960 : hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) -> hol.proof (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) :=
  hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) => hyp_1.

(; Theorem: |- ((= HOLLight.IND_SUC) (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_1961 : hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) -> hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) => hol.SYM (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC (thm_1960 hyp_1).

(; Theorem: |- ((= HOLLight.IND_SUC) (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_1962 : hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) -> hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) => hyp_1.

(; Theorem: |- ((= (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) HOLLight.IND_SUC) ;)

(; dict ;)

def thm_1963 : hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) -> hol.proof (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) :=
  hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) => hol.SYM (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (thm_1962 hyp_1).

(; Theorem: |- ((= ((= HOLLight.IND_SUC) (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ((= (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) HOLLight.IND_SUC)) ;)

(; dict ;)

def thm_1964 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC)) :=
  hol.PROP_EXT (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) (hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) => thm_1961 hyp_1) (hyp_1 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) => thm_1963 hyp_1).

(; Theorem: |- ((= (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) HOLLight.IND_SUC) ;)

(; dict ;)

def thm_1965 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) :=
  hol.EQ_MP (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) HOLLight_2EIND__SUC) thm_1964 thm_61.

(; Theorem: |- ((= x1) x1) ;)

(; dict ;)

def thm_1966 : x1_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind x1_1 x1_1) :=
  x1_1 : hol.term hol.ind => hol.REFL hol.ind x1_1.

(; Theorem: |- ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) (HOLLight.IND_SUC x1)) ;)

(; dict ;)

def thm_1967 : x1_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) x1_1) (HOLLight_2EIND__SUC x1_1)) :=
  x1_1 : hol.term hol.ind => hol.APP_THM hol.ind hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) HOLLight_2EIND__SUC x1_1 x1_1 (hol.EQ_MP (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) HOLLight_2EIND__SUC) (hol.eq (hol.arr hol.ind hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) HOLLight_2EIND__SUC) thm_1959 thm_1965) (thm_1966 x1_1).

(; Theorem: |- ((= (= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1))) (= (HOLLight.IND_SUC x1))) ;)

(; dict ;)

def thm_1968 : x1_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) x1_1)) (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1))) :=
  x1_1 : hol.term hol.ind => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) x1_1) (HOLLight_2EIND__SUC x1_1) thm_1298 (thm_1967 x1_1).

(; Theorem: |- ((= x2) x2) ;)

(; dict ;)

def thm_1969 : x2_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind x2_1 x2_1) :=
  x2_1 : hol.term hol.ind => hol.REFL hol.ind x2_1.

(; Theorem: |- ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2)) (HOLLight.IND_SUC x2)) ;)

(; dict ;)

def thm_1970 : x2_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) x2_1) (HOLLight_2EIND__SUC x2_1)) :=
  x2_1 : hol.term hol.ind => hol.APP_THM hol.ind hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) HOLLight_2EIND__SUC x2_1 x2_1 thm_1965 (thm_1969 x2_1).

(; Theorem: |- ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ;)

(; dict ;)

def thm_1971 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_1)) (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_2)) (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2)) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_1) (HOLLight_2EIND__SUC x2_1) (thm_1968 x1_2) (thm_1970 x2_1).

(; Theorem: |- ((= (= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2)))) (= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2)))) ;)

(; dict ;)

def thm_1972 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_1))) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_1)) (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) thm_561 (thm_1971 x2_1 x1_2).

(; Theorem: |- ((= ((= x1) x2)) ((= x1) x2)) ;)

(; dict ;)

def thm_1973 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind x1_2 x2_1) (hol.eq hol.ind x1_2 x2_1)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.REFL hol.bool (hol.eq hol.ind x1_2 x2_1).

(; Theorem: |- ((= ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2))) ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))) ;)

(; dict ;)

def thm_1974 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_1))) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1))) (hol.eq hol.ind x1_2 x2_1) (hol.eq hol.ind x1_2 x2_1) (thm_1972 x2_1 x1_2) (thm_1973 x2_1 x1_2).

(; Theorem: |- ((= \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2))) \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))) ;)

(; dict ;)

def thm_1975 : x1_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2)) (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))) :=
  x1_1 : hol.term hol.ind => hol.ABS_THM hol.ind hol.bool (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2)) (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)) (x2_2 : hol.term hol.ind => thm_1974 x2_2 x1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2)))) (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2)))) ;)

(; dict ;)

def thm_1976 : x1_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2))) (hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) :=
  x1_1 : hol.term hol.ind => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2)) (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)) thm_72 (thm_1975 x1_1).

(; Theorem: |- ((= \lambda x1. (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2)))) \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2)))) ;)

(; dict ;)

def thm_1977 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2))) (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) :=
  hol.ABS_THM hol.ind hol.bool (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2))) (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))) (x1_1 : hol.term hol.ind => thm_1976 x1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2))))) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) ;)

(; dict ;)

def thm_1978 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2))) (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))) thm_72 thm_1977.

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2)))))) (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_1979 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2))))) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x1_1) (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) thm_191 thm_1978.

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_1980 : x_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind x_1 x_1) :=
  x_1 : hol.term hol.ind => hol.REFL hol.ind x_1.

(; Theorem: |- ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) (HOLLight.IND_SUC x)) ;)

(; dict ;)

def thm_1981 : x_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) x_1) (HOLLight_2EIND__SUC x_1)) :=
  x_1 : hol.term hol.ind => hol.APP_THM hol.ind hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) HOLLight_2EIND__SUC x_1 x_1 thm_1965 (thm_1980 x_1).

(; Theorem: |- ((= (= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x))) (= (HOLLight.IND_SUC x))) ;)

(; dict ;)

def thm_1982 : x_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) x_1)) (hol.eq hol.ind (HOLLight_2EIND__SUC x_1))) :=
  x_1 : hol.term hol.ind => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) (hol.select (hol.arr hol.ind hol.ind) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) x_1) (HOLLight_2EIND__SUC x_1) thm_1298 (thm_1981 x_1).

(; Theorem: |- ((= z) z) ;)

(; dict ;)

def thm_1983 : z_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind z_1 z_1) :=
  z_1 : hol.term hol.ind => hol.REFL hol.ind z_1.

(; Theorem: |- ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z)) ((= (HOLLight.IND_SUC x)) z)) ;)

(; dict ;)

def thm_1984 : z_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1) (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)) :=
  z_1 : hol.term hol.ind => x_2 : hol.term hol.ind => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2)) (hol.eq hol.ind (HOLLight_2EIND__SUC x_2)) z_1 z_1 (thm_1982 x_2) (thm_1983 z_1).

(; Theorem: |- ((= (Data.Bool.~ ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z))) (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))) ;)

(; dict ;)

def thm_1985 : z_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)) (hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))) :=
  z_1 : hol.term hol.ind => x_2 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1) (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1) thm_509 (thm_1984 z_1 x_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z))) \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))) ;)

(; dict ;)

def thm_1986 : z_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)) (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))) :=
  z_1 : hol.term hol.ind => hol.ABS_THM hol.ind hol.bool (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)) (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)) (x_2 : hol.term hol.ind => thm_1985 z_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z)))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))) ;)

(; dict ;)

def thm_1987 : z_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))) :=
  z_1 : hol.term hol.ind => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)) (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)) thm_72 (thm_1986 z_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))) ;)

(; dict ;)

def thm_1988 : z_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) :=
  z_1 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))) thm_1979 (thm_1987 z_1).

(; Theorem: |- ((= \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z))))) \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))) ;)

(; dict ;)

def thm_1989 : hol.proof (hol.eq (hol.arr hol.ind hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)))) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) :=
  hol.ABS_THM hol.ind hol.bool (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)))) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))) (z_1 : hol.term hol.ind => thm_1988 z_1).

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z)))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) ;)

(; dict ;)

def thm_1990 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) :=
  hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)))) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))) thm_134 thm_1989.

(; Theorem: |- ((= (\lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z)))))) ;)

(; dict ;)

def thm_1991 : hol.proof (hol.eq hol.bool ((f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1)))))) :=
  hol.BETA_CONV (hol.arr hol.ind hol.ind) hol.bool (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) (\lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_1992 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) ((f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))))) :=
  (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_1956 A p_1) (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda f. ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))) x)) (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))))) ((Data.Bool.==> (Data.Bool.? \lambda f. ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))))) (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_1993 : hol.proof (hol.imp (hol.forall (hol.arr hol.ind hol.ind) (x_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))))) :=
  (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_283 A Q_1 P_2) (hol.arr hol.ind hol.ind) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))).

(; Theorem: |- ((= (\lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) f)) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_1994 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV (hol.arr hol.ind hol.ind) hol.bool (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1.

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) (\lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) f)) ;)

(; dict ;)

def thm_1995 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.SYM hol.bool ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (thm_1994 f_1).

(; Theorem: |- ((= ((= (Function.injective f)) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))))) ((= (Function.injective f)) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_1996 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))) (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))).

(; Theorem: |- ((= ((= (Function.injective f)) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))))) ((= (Function.injective f)) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_1997 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))) (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))) (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))) (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))) (thm_1996 B A f_1) (thm_1996 B A f_1).

(; Theorem: |- ((= (Function.injective f)) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) ;)

(; dict ;)

def thm_1998 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_50 B A f_1.

(; Theorem: |- ((= (Function.injective f)) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) ;)

(; dict ;)

def thm_1999 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))) (hol.eq hol.bool (Function_2Einjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall A (x1_2 : hol.term A => hol.forall A (x2_3 : hol.term A => hol.imp (hol.eq B (f_1 x1_2) (f_1 x2_3)) (hol.eq A x1_2 x2_3))))) (thm_1997 B A f_1) (thm_1998 B A f_1)) hol.ind hol.ind f_1.

(; Theorem: |- ((= (Data.Bool./\ (Function.injective f))) (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2000 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) thm_191 (thm_1999 f_1).

(; Theorem: |- ((= ((= (Function.surjective f)) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ((= (Function.surjective f)) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ;)

(; dict ;)

def thm_2001 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))).

(; Theorem: |- ((= ((= (Function.surjective f)) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ((= (Function.surjective f)) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ;)

(; dict ;)

def thm_2002 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (thm_2001 B A f_1) (thm_2001 B A f_1).

(; Theorem: |- ((= (Function.surjective f)) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))) ;)

(; dict ;)

def thm_2003 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_51 B A f_1.

(; Theorem: |- ((= (Function.surjective f)) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))) ;)

(; dict ;)

def thm_2004 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (hol.eq hol.bool (Function_2Esurjective (hol.arr (hol.arr A B) hol.bool) f_1) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (thm_2002 B A f_1) (thm_2003 B A f_1)) hol.ind hol.ind f_1.

(; Theorem: |- ((= (Data.Bool.~ (Function.surjective f))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ;)

(; dict ;)

def thm_2005 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))) thm_509 (thm_2004 f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f)))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ;)

(; dict ;)

def thm_2006 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))) (thm_2000 f_1) (thm_2005 f_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))))) (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))))) ;)

(; dict ;)

def thm_2007 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)))) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) thm_126 (thm_2006 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2008 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f)))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2009 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)))) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (thm_2007 f_1) (thm_2008 f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ((Data.Bool.==> ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f)))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2010 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.SYM hol.bool (hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (thm_2009 f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2011 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (p_1 : hol.term hol.bool => thm_606 p_1) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2012 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.SYM hol.bool (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (thm_2011 f_1).

(; Theorem: |- (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2013 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) -> hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2014 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2015 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.SYM hol.bool (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (thm_2014 f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) ;)

(; dict ;)

def thm_2016 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) ;)

(; dict ;)

def thm_2017 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (thm_2016 f_1) (thm_2016 f_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2018 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) -> hol.proof (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F) ;)

(; dict ;)

def thm_2019 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) -> hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F) ;)

(; dict ;)

def thm_2020 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) -> hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) -> hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) => hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) => thm_2018 f_1 hyp_2 (thm_2019 f_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2021 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) -> hol.proof (hol.imp (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) => hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) => thm_2020 f_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) ;)

(; dict ;)

def thm_2022 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) => hyp_2 : hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) => thm_2021 f_1 hyp_2 (thm_2018 f_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2023 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) => thm_2019 f_1 hyp_1.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_2024 : hol.proof (hol.eq (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (hol.forall (hol.arr hol.ind hol.ind)) (hol.forall (hol.arr hol.ind hol.ind))) :=
  hol.REFL (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (hol.forall (hol.arr hol.ind hol.ind)).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))))) (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))))) ;)

(; dict ;)

def thm_2025 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))))) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))))).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)))))) (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2026 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))).

(; Theorem: |- ((= (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z)) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))) ;)

(; dict ;)

def thm_2027 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))) z_1) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1)))) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))) z_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) ;)

(; dict ;)

def thm_2028 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))) z_1)) (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1))))) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4))))) (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4))))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))) z_1) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1))) (thm_2026 f_2) (thm_2027 z_1 f_2).

(; Theorem: |- ((= \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z))) \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) ;)

(; dict ;)

def thm_2029 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))) (z_2 : hol.term hol.ind => thm_2028 z_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z)))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2030 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))) thm_134 (thm_2029 f_1).

(; Theorem: |- ((= (= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z))))) (= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2031 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) thm_561 (thm_2030 f_1).

(; Theorem: |- ((= \lambda z. (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z)) \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))) ;)

(; dict ;)

def thm_2032 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))) (z_2 : hol.term hol.ind => thm_2027 z_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda z. (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) ;)

(; dict ;)

def thm_2033 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))) thm_134 (thm_2032 f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z)))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2034 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))) (thm_2026 f_1) (thm_2033 f_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z)))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z))))) ((= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2035 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (thm_2031 f_1) (thm_2034 f_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x)))) ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x)))) ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x))))) ;)

(; dict ;)

def thm_2036 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda z. ((Data.Bool./\ p) (q z)))) ((Data.Bool./\ p) (Data.Bool.? \lambda z. (q z))))) ((= (Data.Bool.? \lambda z. ((Data.Bool./\ p) (q z)))) ((Data.Bool./\ p) (Data.Bool.? \lambda z. (q z))))) ;)

(; dict ;)

def thm_2037 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => hol.and p_2 (q_1 z_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => q_1 z_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => hol.and p_2 (q_1 z_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => q_1 z_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => hol.and p_2 (q_1 z_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => q_1 z_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x)))) ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda z. ((Data.Bool./\ p) (q z)))) ((Data.Bool./\ p) (Data.Bool.? \lambda z. (q z))))) ;)

(; dict ;)

def thm_2038 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => hol.and p_2 (q_1 z_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => q_1 z_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => hol.and p_2 (q_1 z_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => q_1 z_3)))) (thm_2036 A q_1 p_2) (thm_2037 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x)))) ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x))))) ;)

(; dict ;)

def thm_2039 : A : hol.type -> p_1 : hol.term hol.bool -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_1 (q_2 x_3))) (hol.and p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term hol.bool => thm_52 A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x)))) ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) ;)

(; dict ;)

def thm_2040 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_2039 A p_2 q_1.

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ p) (q z)))) ((Data.Bool./\ p) (Data.Bool.? \lambda z. (q z)))) ;)

(; dict ;)

def thm_2041 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => hol.and p_2 (q_1 z_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => q_1 z_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => hol.and p_2 (q_1 z_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_3 : hol.term A => q_1 z_3)))) (thm_2038 A q_1 p_2) (thm_2040 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ p) (q z)))) ((Data.Bool./\ p) (Data.Bool.? \lambda z. (q z)))) ;)

(; dict ;)

def thm_2042 : q_1 : hol.term (hol.arr hol.ind hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and p_2 (q_1 z_3))) (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => q_1 z_3)))) :=
  q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term hol.bool => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_2041 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z)))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z)))) ;)

(; dict ;)

def thm_2043 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term hol.bool => thm_2042 q_1 p_2) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))).

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2044 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => (z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (thm_2035 f_1) (thm_2043 f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2045 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))))) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (thm_2025 f_1) (thm_2044 f_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2046 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (thm_2012 f_1) (thm_2045 f_1).

(; Theorem: |- ((= \lambda f. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2047 : hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.ind) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  hol.ABS_THM (hol.arr hol.ind hol.ind) hol.bool (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (f_1 : hol.term (hol.arr hol.ind hol.ind) => thm_2046 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_2048 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))))) :=
  hol.APP_THM (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool (hol.forall (hol.arr hol.ind hol.ind)) (hol.forall (hol.arr hol.ind hol.ind)) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) thm_2024 thm_2047.

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_2049 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))))) :=
  hol.REFL hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_2050 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))))) :=
  hol.TRANS hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) thm_2048 thm_2049.

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_2051 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))))) :=
  hol.TRANS hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) thm_2050 thm_2049.

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_2052 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))))) :=
  hol.TRANS hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) thm_2051 thm_2049.

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_2053 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))))) :=
  hol.TRANS hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) thm_2052 thm_2049.

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F))) ;)

(; dict ;)

def thm_2054 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false))) :=
  hol.SYM hol.bool (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) thm_2053.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2055 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.imp (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (p_1 : hol.term hol.bool => thm_606 p_1) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) Data.Bool.F)) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2056 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) hol.false) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.SYM hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.imp (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) hol.false) (thm_2055 f_1).

(; Theorem: |- (Data.Bool.~ ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2057 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) -> hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2058 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.imp ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_5 z_6)) z_6))))) x_2) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_283 A Q_1 P_2) hol.ind hol.false (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5))))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2059 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.imp ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6)))) x_3) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) hol.false)) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_283 A Q_1 P_2) hol.ind hol.false (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2060 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.forall (hol.arr hol.ind hol.ind) (x_4 : hol.term (hol.arr hol.ind hol.ind) => hol.imp ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6))) x_4) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) hol.false)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_283 A Q_1 P_2) (hol.arr hol.ind hol.ind) hol.false (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2061 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.imp ((y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_4) (f_1 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4))))) x_2) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_283 A Q_1 P_2) hol.ind hol.false (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))).

(; Theorem: |- ((= f) f) ;)

(; dict ;)

def thm_2062 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.ind) f_1 f_1) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL (hol.arr hol.ind hol.ind) f_1.

(; Theorem: |- ((= (f x1)) (f x1)) ;)

(; dict ;)

def thm_2063 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.ind (f_2 x1_1) (f_2 x1_1)) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.ind f_2 f_2 x1_1 x1_1 (thm_2062 f_2) (thm_1966 x1_1).

(; Theorem: |- ((= (= (f x1))) (= (f x1))) ;)

(; dict ;)

def thm_2064 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (f_2 x1_1)) (hol.eq hol.ind (f_2 x1_1))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) (f_2 x1_1) (f_2 x1_1) thm_1298 (thm_2063 x1_1 f_2).

(; Theorem: |- ((= (f x2)) (f x2)) ;)

(; dict ;)

def thm_2065 : x2_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) :=
  x2_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.ind f_2 f_2 x2_1 x2_1 (thm_2062 f_2) (thm_1969 x2_1).

(; Theorem: |- ((= ((= (f x1)) (f x2))) ((= (f x1)) (f x2))) ;)

(; dict ;)

def thm_2066 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (f_3 x1_2)) (hol.eq hol.ind (f_3 x1_2)) (f_3 x2_1) (f_3 x2_1) (thm_2064 x1_2 f_3) (thm_2065 x2_1 f_3).

(; Theorem: |- ((= (Data.Bool./\ ((= (f x1)) (f x2)))) (Data.Bool./\ ((= (f x1)) (f x2)))) ;)

(; dict ;)

def thm_2067 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) thm_191 (thm_2066 x2_1 x1_2 f_3).

(; Theorem: |- ((= (Data.Bool.~ ((= x1) x2))) (Data.Bool.~ ((= x1) x2))) ;)

(; dict ;)

def thm_2068 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.ind x1_2 x2_1) (hol.eq hol.ind x1_2 x2_1) thm_509 (thm_1973 x2_1 x1_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ;)

(; dict ;)

def thm_2069 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1)) (thm_2067 x2_1 x1_2 f_3) (thm_2068 x2_1 x1_2).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) ;)

(; dict ;)

def thm_2070 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1)))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) thm_1019 (thm_2069 x2_1 x1_2 f_3).

(; Theorem: |- ((= (Data.Bool.~ ((= (f x1)) (f x2)))) (Data.Bool.~ ((= (f x1)) (f x2)))) ;)

(; dict ;)

def thm_2071 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) thm_509 (thm_2066 x2_1 x1_2 f_3).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2))))) (Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2))))) ;)

(; dict ;)

def thm_2072 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) thm_191 (thm_2071 x2_1 x1_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2073 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)))) (hol.eq hol.ind x1_2 x2_1) (hol.eq hol.ind x1_2 x2_1) (thm_2072 x2_1 x1_2 f_3) (thm_1973 x2_1 x1_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2074 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1)))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1)))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (thm_2070 x2_1 x1_2 f_3) (thm_2073 x2_1 x1_2 f_3).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2075 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) thm_1019 (thm_2074 x2_1 x1_2 f_3).

(; Theorem: |- ((= f') f') ;)

(; dict ;)

def thm_2076 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.ind) f_27_1 f_27_1) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL (hol.arr hol.ind hol.ind) f_27_1.

(; Theorem: |- ((= (f' z)) (f' z)) ;)

(; dict ;)

def thm_2077 : z_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.ind (f_27_2 z_1) (f_27_2 z_1)) :=
  z_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.ind f_27_2 f_27_2 z_1 z_1 (thm_2076 f_27_2) (thm_1983 z_1).

(; Theorem: |- ((= (f (f' z))) (f (f' z))) ;)

(; dict ;)

def thm_2078 : z_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.ind (f_3 (f_27_2 z_1)) (f_3 (f_27_2 z_1))) :=
  z_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.ind f_3 f_3 (f_27_2 z_1) (f_27_2 z_1) (thm_2062 f_3) (thm_2077 z_1 f_27_2).

(; Theorem: |- ((= (= (f (f' z)))) (= (f (f' z)))) ;)

(; dict ;)

def thm_2079 : z_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (f_3 (f_27_2 z_1))) (hol.eq hol.ind (f_3 (f_27_2 z_1)))) :=
  z_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) (f_3 (f_27_2 z_1)) (f_3 (f_27_2 z_1)) thm_1298 (thm_2078 z_1 f_27_2 f_3).

(; Theorem: |- ((= ((= (f (f' z))) z)) ((= (f (f' z))) z)) ;)

(; dict ;)

def thm_2080 : z_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (f_3 (f_27_2 z_1)) z_1) (hol.eq hol.ind (f_3 (f_27_2 z_1)) z_1)) :=
  z_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (f_3 (f_27_2 z_1))) (hol.eq hol.ind (f_3 (f_27_2 z_1))) z_1 z_1 (thm_2079 z_1 f_27_2 f_3) (thm_1983 z_1).

(; Theorem: |- ((= \lambda z. ((= (f (f' z))) z)) \lambda z. ((= (f (f' z))) z)) ;)

(; dict ;)

def thm_2081 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3) (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3)) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3) (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3) (z_3 : hol.term hol.ind => thm_2080 z_3 f_27_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((= (f (f' z))) z))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) ;)

(; dict ;)

def thm_2082 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3)) (hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3) (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3) thm_72 (thm_2081 f_27_1 f_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2083 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5)))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2)))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2)))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5)) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5)) (thm_2075 x2_2 x1_3 f_4) (thm_2082 f_27_1 f_4).

(; Theorem: |- ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) ;)

(; dict ;)

def thm_2084 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) -> hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2))))) (Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2))))) ;)

(; dict ;)

def thm_2085 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)))) (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) thm_1019 (thm_2071 x2_1 x1_2 f_3).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2086 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)))) (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)))) (hol.eq hol.ind x1_2 x2_1) (hol.eq hol.ind x1_2 x2_1) (thm_2085 x2_1 x1_2 f_3) (thm_1973 x2_1 x1_2).

(; Theorem: |- ((= \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2087 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => thm_2086 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2088 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) thm_72 (thm_2087 x1_1 f_2).

(; Theorem: |- ((= \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2089 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => thm_2088 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2090 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) thm_72 (thm_2089 f_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2091 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) thm_191 (thm_2090 f_1).

(; Theorem: |- ((= y) y) ;)

(; dict ;)

def thm_2092 : y_1 : hol.term hol.ind -> hol.proof (hol.eq hol.ind y_1 y_1) :=
  y_1 : hol.term hol.ind => hol.REFL hol.ind y_1.

(; Theorem: |- ((= (= y)) (= y)) ;)

(; dict ;)

def thm_2093 : y_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind y_1) (hol.eq hol.ind y_1)) :=
  y_1 : hol.term hol.ind => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) y_1 y_1 thm_1298 (thm_2092 y_1).

(; Theorem: |- ((= (f x)) (f x)) ;)

(; dict ;)

def thm_2094 : x_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.ind (f_2 x_1) (f_2 x_1)) :=
  x_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.ind f_2 f_2 x_1 x_1 (thm_2062 f_2) (thm_1980 x_1).

(; Theorem: |- ((= ((= y) (f x))) ((= y) (f x))) ;)

(; dict ;)

def thm_2095 : x_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind y_3 (f_2 x_1)) (hol.eq hol.ind y_3 (f_2 x_1))) :=
  x_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind y_3) (hol.eq hol.ind y_3) (f_2 x_1) (f_2 x_1) (thm_2093 y_3) (thm_2094 x_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ ((= y) (f x)))) (Data.Bool.~ ((= y) (f x)))) ;)

(; dict ;)

def thm_2096 : x_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind y_3 (f_2 x_1))) (hol.not (hol.eq hol.ind y_3 (f_2 x_1)))) :=
  x_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.ind y_3 (f_2 x_1)) (hol.eq hol.ind y_3 (f_2 x_1)) thm_509 (thm_2095 x_1 f_2 y_3).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ ((= y) (f x)))) \lambda x. (Data.Bool.~ ((= y) (f x)))) ;)

(; dict ;)

def thm_2097 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> y_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => y_2 : hol.term hol.ind => hol.ABS_THM hol.ind hol.bool (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))) (x_3 : hol.term hol.ind => thm_2096 x_3 f_1 y_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2098 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> y_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => y_2 : hol.term hol.ind => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))) thm_72 (thm_2097 f_1 y_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ;)

(; dict ;)

def thm_2099 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3)))))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))))) (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3)))) (thm_2091 f_2) (thm_2098 f_2 y_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2100 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) -> hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((= (f (f' z))) z)) ;)

(; dict ;)

def thm_2101 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3)) -> hol.proof (hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3)) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= y) (f _1890))) Data.Bool.F)) ((Data.Bool.==> ((= y) (f _1890))) Data.Bool.F)) ;)

(; dict ;)

def thm_2102 : __1890_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false)) :=
  __1890_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> ((= y) (f _1890))) Data.Bool.F)) ((Data.Bool.==> ((= y) (f _1890))) Data.Bool.F)) ;)

(; dict ;)

def thm_2103 : __1890_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false)) :=
  __1890_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (thm_2102 __1890_1 f_2 y_3) (thm_2102 __1890_1 f_2 y_3).

(; Theorem: |- ((= (Data.Bool.~ ((= y) (f _1890)))) (Data.Bool.~ ((= y) (f _1890)))) ;)

(; dict ;)

def thm_2104 : __1890_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1)))) :=
  __1890_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.REFL hol.bool (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))).

(; Theorem: |- ((= (Data.Bool.~ ((= y) (f _1890)))) ((Data.Bool.==> ((= y) (f _1890))) Data.Bool.F)) ;)

(; dict ;)

def thm_2105 : __1890_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false)) :=
  __1890_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => (p_1 : hol.term hol.bool => thm_744 p_1) (hol.eq hol.ind y_3 (f_2 __1890_1)).

(; Theorem: |- ((= (Data.Bool.~ ((= y) (f _1890)))) ((Data.Bool.==> ((= y) (f _1890))) Data.Bool.F)) ;)

(; dict ;)

def thm_2106 : __1890_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false)) :=
  __1890_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (thm_2104 __1890_1 f_2 y_3) (thm_2105 __1890_1 f_2 y_3).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) ;)

(; dict ;)

def thm_2107 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> y_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) -> hol.proof (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => y_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) ;)

(; dict ;)

def thm_2108 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> y_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) -> hol.proof (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => y_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) => hol.PROVE_HYP (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) (thm_2100 y_2 f_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) => thm_2107 f_1 y_2 hyp_2).

(; Theorem: |- (Data.Bool.~ ((= y) (f _1890))) ;)

(; dict ;)

def thm_2109 : __1890_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) -> hol.proof (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) :=
  __1890_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) => hol.EQ_MP (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4)))) (thm_2098 f_2 y_3) (thm_2108 f_2 y_3 hyp_1) __1890_1.

(; Theorem: |- ((Data.Bool.==> ((= y) (f _1890))) Data.Bool.F) ;)

(; dict ;)

def thm_2110 : __1890_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) -> hol.proof (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) :=
  __1890_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) => hol.EQ_MP (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (thm_2106 __1890_1 f_2 y_3) (hol.EQ_MP (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) (hol.not (hol.eq hol.ind y_3 (f_2 __1890_1))) (thm_2104 __1890_1 f_2 y_3) (thm_2109 __1890_1 f_2 y_3 hyp_1)).

(; Theorem: |- ((Data.Bool.==> ((= y) (f (f' y)))) Data.Bool.F) ;)

(; dict ;)

def thm_2111 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) -> hol.proof (hol.imp (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) hol.false) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) => (__1890_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) => hol.EQ_MP (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (hol.imp (hol.eq hol.ind y_3 (f_2 __1890_1)) hol.false) (thm_2103 __1890_1 f_2 y_3) (thm_2110 __1890_1 f_2 y_3 hyp_1)) (f_27_1 y_3) f_2 y_3 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= y) (f (f' y))))) ((= y) (f (f' y))))) ((= y) (f (f' y)))) ;)

(; dict ;)

def thm_2112 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3)))) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3)))) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3)))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))).

(; Theorem: |- ((= ((= y) (f (f' y)))) ((= y) (f (f' y)))) ;)

(; dict ;)

def thm_2113 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3)))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.REFL hol.bool (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))).

(; Theorem: |- ((= ((= y) (f (f' y)))) ((= y) (f (f' y)))) ;)

(; dict ;)

def thm_2114 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3)))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) (thm_2113 f_27_1 f_2 y_3) (thm_2113 f_27_1 f_2 y_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (f (f' y))) y)) ((= (f (f' y))) (f (f' y))))) ((= y) (f (f' y)))) ;)

(; dict ;)

def thm_2115 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.and (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) (hol.eq hol.ind y_1 (f_3 (f_27_2 y_1)))) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => (z_1 : hol.term hol.ind => y_2 : hol.term hol.ind => x_3 : hol.term hol.ind => thm_1182 z_1 y_2 x_3) (f_3 (f_27_2 y_1)) y_1 (f_3 (f_27_2 y_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (f (f' y))) y))) ((= (f (f' y))) y))) ((= (f (f' y))) y)) ;)

(; dict ;)

def thm_2116 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1)) (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1)) (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1)) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1).

(; Theorem: |- ((= ((= (f (f' _1891))) _1891)) ((= (f (f' _1891))) _1891)) ;)

(; dict ;)

def thm_2117 : __1891_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1)) :=
  __1891_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1).

(; Theorem: |- ((= ((= (f (f' _1891))) _1891)) ((= (f (f' _1891))) _1891)) ;)

(; dict ;)

def thm_2118 : __1891_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1)) :=
  __1891_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (thm_2117 __1891_1 f_27_2 f_3) (thm_2117 __1891_1 f_27_2 f_3).

(; Theorem: |- ((= (f (f' _1891))) _1891) ;)

(; dict ;)

def thm_2119 : __1891_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) -> hol.proof (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) :=
  __1891_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => thm_2101 f_27_2 f_3 hyp_1 __1891_1.

(; Theorem: |- ((= (f (f' y))) y) ;)

(; dict ;)

def thm_2120 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) -> hol.proof (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => (__1891_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => hol.EQ_MP (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (thm_2118 __1891_1 f_27_2 f_3) (hol.EQ_MP (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (hol.eq hol.ind (f_3 (f_27_2 __1891_1)) __1891_1) (thm_2117 __1891_1 f_27_2 f_3) (thm_2119 __1891_1 f_27_2 f_3 hyp_1))) y_1 f_27_2 f_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (f (f' y))) y))) ((= (f (f' y))) y)) ;)

(; dict ;)

def thm_2121 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1)) (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1)) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => hyp_2 : hol.proof (hol.not (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1)) => thm_2120 y_1 f_27_2 f_3 hyp_1.

(; Theorem: |- ((= ((= (f (f' y))) (f (f' y)))) ((Data.Bool./\ ((= (f (f' y))) y)) ((= (f (f' y))) (f (f' y))))) ;)

(; dict ;)

def thm_2122 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))) (hol.and (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))))) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))) hyp_1.

(; Theorem: |- ((= ((= (f (f' y))) (f (f' y)))) ((Data.Bool./\ ((= (f (f' y))) y)) ((= (f (f' y))) (f (f' y))))) ;)

(; dict ;)

def thm_2123 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))) (hol.and (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))))) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => hol.PROVE_HYP (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (hol.eq hol.bool (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))) (hol.and (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))))) (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1)) (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1)) (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (thm_2116 y_1 f_27_2 f_3) (thm_2121 y_1 f_27_2 f_3 hyp_1)) (hyp_2 : hol.proof (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) => thm_2122 y_1 f_27_2 f_3 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (f (f' y))) (f (f' y))))) ((= (f (f' y))) (f (f' y))))) ((= (f (f' y))) (f (f' y)))) ;)

(; dict ;)

def thm_2124 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))).

(; Theorem: |- ((= (f (f' y))) (f (f' y))) ;)

(; dict ;)

def thm_2125 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => (x_1 : hol.term hol.ind => thm_1980 x_1) (f_3 (f_27_2 y_1)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (f (f' y))) (f (f' y))))) ((= (f (f' y))) (f (f' y)))) ;)

(; dict ;)

def thm_2126 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.not (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) => thm_2125 y_1 f_27_2 f_3.

(; Theorem: |- ((Data.Bool./\ ((= (f (f' y))) y)) ((= (f (f' y))) (f (f' y)))) ;)

(; dict ;)

def thm_2127 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) -> hol.proof (hol.and (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => hol.EQ_MP (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))) (hol.and (hol.eq hol.ind (f_3 (f_27_2 y_1)) y_1) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) (thm_2123 y_1 f_27_2 f_3 hyp_1) (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1)))) (hol.eq hol.ind (f_3 (f_27_2 y_1)) (f_3 (f_27_2 y_1))) (thm_2124 y_1 f_27_2 f_3) (thm_2126 y_1 f_27_2 f_3)).

(; Theorem: |- ((= y) (f (f' y))) ;)

(; dict ;)

def thm_2128 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_4)) z_4)) -> hol.proof (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_4)) z_4)) => thm_2115 y_3 f_27_1 f_2 (thm_2127 y_3 f_27_1 f_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= y) (f (f' y))))) ((= y) (f (f' y)))) ;)

(; dict ;)

def thm_2129 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_4)) z_4)) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3)))) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3)))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_4)) z_4)) => hyp_2 : hol.proof (hol.not (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3)))) => hol.EQ_MP (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) (hol.eq hol.ind y_3 (f_2 (f_27_1 y_3))) (thm_2114 f_27_1 f_2 y_3) (thm_2128 f_27_1 f_2 y_3 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2130 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) -> hol.proof hol.false :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) => thm_2111 f_27_2 f_3 y_1 hyp_2 (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind y_1 (f_3 (f_27_2 y_1)))) (hol.eq hol.ind y_1 (f_3 (f_27_2 y_1)))) (hol.eq hol.ind y_1 (f_3 (f_27_2 y_1))) (thm_2112 f_27_2 f_3 y_1) (thm_2129 f_27_2 f_3 y_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_2131 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) -> hol.proof (hol.imp (hol.not hol.false) hol.false) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) => hyp_3 : hol.proof (hol.not hol.false) => hol.EQ_MP hol.false hol.false thm_731 (thm_2130 y_1 f_27_2 f_3 hyp_1 hyp_2).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2132 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) -> hol.proof hol.false :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) => hol.PROVE_HYP (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) hol.false (hol.EQ_MP (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) (thm_2082 f_27_2 f_3) (thm_2101 f_27_2 f_3 hyp_1)) (hyp_3 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => hol.EQ_MP (hol.imp (hol.not hol.false) hol.false) hol.false thm_700 (thm_2131 y_1 f_27_2 f_3 hyp_3 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda z. ((= (f (f' z))) z))) Data.Bool.F) ;)

(; dict ;)

def thm_2133 : y_1 : hol.term hol.ind -> f_27_2 : hol.term (hol.arr hol.ind hol.ind) -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) -> hol.proof (hol.imp (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) hol.false) :=
  y_1 : hol.term hol.ind => f_27_2 : hol.term (hol.arr hol.ind hol.ind) => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) => hyp_2 : hol.proof (hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_2 z_4)) z_4)) => thm_2132 y_1 f_27_2 f_3 hyp_2 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= (f x2)) (f x2))) Data.Bool.F)) ((Data.Bool.==> ((= (f x2)) (f x2))) Data.Bool.F)) ;)

(; dict ;)

def thm_2134 : x2_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false) (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false)) :=
  x2_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> ((= (f x2)) (f x2))) Data.Bool.F)) ((Data.Bool.==> ((= (f x2)) (f x2))) Data.Bool.F)) ;)

(; dict ;)

def thm_2135 : x2_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false) (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false)) :=
  x2_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false) (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false) (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false) (thm_2134 x2_1 f_2) (thm_2134 x2_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ ((= (f x2)) (f x2)))) (Data.Bool.~ ((= (f x2)) (f x2)))) ;)

(; dict ;)

def thm_2136 : x2_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1))) (hol.not (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.not (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1))).

(; Theorem: |- ((= (Data.Bool.~ ((= (f x2)) (f x2)))) ((Data.Bool.==> ((= (f x2)) (f x2))) Data.Bool.F)) ;)

(; dict ;)

def thm_2137 : x2_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1))) (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false)) :=
  x2_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => (p_1 : hol.term hol.bool => thm_744 p_1) (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)).

(; Theorem: |- ((= (Data.Bool.~ ((= (f x2)) (f x2)))) ((Data.Bool.==> ((= (f x2)) (f x2))) Data.Bool.F)) ;)

(; dict ;)

def thm_2138 : x2_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1))) (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false)) :=
  x2_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1))) (hol.not (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1))) (hol.imp (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)) hol.false) (thm_2136 x2_1 f_2) (thm_2137 x2_1 f_2).

(; Theorem: |- ((= (= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1))) (= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1))) ;)

(; dict ;)

def thm_2139 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1)) (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1))) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1)).

(; Theorem: |- ((= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x2)) (Data.Bool.~ ((= (f x2)) (f x2)))) ;)

(; dict ;)

def thm_2140 : x2_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((__1898_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 __1898_3) (f_2 x2_1))) x2_1) (hol.not (hol.eq hol.ind (f_2 x2_1) (f_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (__1898_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 __1898_3) (f_2 x2_1))) x2_1.

(; Theorem: |- ((= ((= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1)) (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x2))) ((= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1)) (Data.Bool.~ ((= (f x2)) (f x2))))) ;)

(; dict ;)

def thm_2141 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x2_2)) (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))))) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1)) (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1)) ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x2_2) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))) (thm_2139 x1_1 x2_2 f_3) (thm_2140 x2_2 f_3).

(; Theorem: |- ((= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1)) (Data.Bool.~ ((= (f x1)) (f x2)))) ;)

(; dict ;)

def thm_2142 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2)))) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1.

(; Theorem: |- ((= (= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1))) (= (Data.Bool.~ ((= (f x1)) (f x2))))) ;)

(; dict ;)

def thm_2143 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1)) (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))))) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) thm_561 (thm_2142 x1_1 x2_2 f_3).

(; Theorem: |- ((= ((= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1)) (Data.Bool.~ ((= (f x2)) (f x2))))) ((= (Data.Bool.~ ((= (f x1)) (f x2)))) (Data.Bool.~ ((= (f x2)) (f x2))))) ;)

(; dict ;)

def thm_2144 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2)))) (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))))) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1)) (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2)))) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))) (thm_2143 x1_1 x2_2 f_3) (thm_2136 x2_2 f_3).

(; Theorem: |- ((= ((= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1)) (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x2))) ((= (Data.Bool.~ ((= (f x1)) (f x2)))) (Data.Bool.~ ((= (f x2)) (f x2))))) ;)

(; dict ;)

def thm_2145 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x2_2)) (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))))) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x2_2)) (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2)))) (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2)))) (thm_2141 x1_1 x2_2 f_3) (thm_2144 x1_1 x2_2 f_3).

(; Theorem: |- ((= \lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2)))) \lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2)))) ;)

(; dict ;)

def thm_2146 : x2_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (__1898_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 __1898_3) (f_2 x2_1))) (__1898_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 __1898_3) (f_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL (hol.arr hol.ind hol.bool) (__1898_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 __1898_3) (f_2 x2_1))).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) ;)

(; dict ;)

def thm_2147 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) -> hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) => hyp_1.

(; Theorem: |- ((= x1) x2) ;)

(; dict ;)

def thm_2148 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2))) (hol.eq hol.ind x1_3 x2_2)) -> hol.proof (hol.eq hol.ind x1_3 x2_2) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2))) (hol.eq hol.ind x1_3 x2_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2))) (hol.eq hol.ind x1_3 x2_2) hyp_1.

(; Theorem: |- ((= x1) x2) ;)

(; dict ;)

def thm_2149 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2))) (hol.eq hol.ind x1_3 x2_2)) -> hol.proof (hol.eq hol.ind x1_3 x2_2) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2))) (hol.eq hol.ind x1_3 x2_2)) => hol.PROVE_HYP (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2))) (hol.eq hol.ind x1_3 x2_2)) (hol.eq hol.ind x1_3 x2_2) (thm_2147 x2_2 x1_3 f_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2))) (hol.eq hol.ind x1_3 x2_2)) => thm_2148 f_1 x2_2 x1_3 hyp_2).

(; Theorem: |- ((= (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x1)) (\lambda _1898. (Data.Bool.~ ((= (f _1898)) (f x2))) x2)) ;)

(; dict ;)

def thm_2150 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.eq hol.ind x1_1 x2_2)) -> hol.proof (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1) ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x2_2)) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.eq hol.ind x1_1 x2_2)) => hol.APP_THM hol.ind hol.bool (__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) (__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_2))) x1_1 x2_2 (thm_2146 x2_2 f_3) (hol.EQ_MP (hol.eq hol.ind x1_1 x2_2) (hol.eq hol.ind x1_1 x2_2) (thm_1973 x2_2 x1_1) (hol.EQ_MP (hol.eq hol.ind x1_1 x2_2) (hol.eq hol.ind x1_1 x2_2) (thm_1973 x2_2 x1_1) (thm_2149 f_3 x2_2 x1_1 hyp_1))).

(; Theorem: |- ((= (Data.Bool.~ ((= (f x1)) (f x2)))) (Data.Bool.~ ((= (f x2)) (f x2)))) ;)

(; dict ;)

def thm_2151 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.not (hol.eq hol.ind (f_3 x2_1) (f_3 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) => hol.EQ_MP (hol.eq hol.bool ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_1))) x1_2) ((__1898_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 __1898_4) (f_3 x2_1))) x2_1)) (hol.eq hol.bool (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.not (hol.eq hol.ind (f_3 x2_1) (f_3 x2_1)))) (thm_2145 x1_2 x2_1 f_3) (thm_2150 x1_2 x2_1 f_3 hyp_1).

(; Theorem: |- (Data.Bool.~ ((= (f x1)) (f x2))) ;)

(; dict ;)

def thm_2152 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) -> hol.proof (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.eq hol.ind x1_2 x2_1) (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) hyp_1.

(; Theorem: |- (Data.Bool.~ ((= (f x1)) (f x2))) ;)

(; dict ;)

def thm_2153 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) -> hol.proof (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) => hol.PROVE_HYP (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (thm_2147 x2_1 x1_2 f_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) => thm_2152 x2_1 x1_2 f_3 hyp_2).

(; Theorem: |- (Data.Bool.~ ((= (f x2)) (f x2))) ;)

(; dict ;)

def thm_2154 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.eq hol.ind x1_1 x2_2)) -> hol.proof (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.eq hol.ind x1_1 x2_2)) => hol.EQ_MP (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))) (thm_2151 x2_2 x1_1 f_3 hyp_1) (hol.EQ_MP (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (thm_2071 x2_2 x1_1 f_3) (hol.EQ_MP (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (thm_2071 x2_2 x1_1 f_3) (thm_2153 x2_2 x1_1 f_3 hyp_1))).

(; Theorem: |- ((Data.Bool.==> ((= (f x2)) (f x2))) Data.Bool.F) ;)

(; dict ;)

def thm_2155 : x1_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.eq hol.ind x1_1 x2_2)) -> hol.proof (hol.imp (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2)) hol.false) :=
  x1_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_1) (f_3 x2_2))) (hol.eq hol.ind x1_1 x2_2)) => hol.EQ_MP (hol.not (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2))) (hol.imp (hol.eq hol.ind (f_3 x2_2) (f_3 x2_2)) hol.false) (thm_2138 x2_2 f_3) (thm_2154 x1_1 x2_2 f_3 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2156 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) => hol.EQ_MP (hol.imp (hol.eq hol.ind (f_3 x2_1) (f_3 x2_1)) hol.false) (hol.imp (hol.eq hol.ind (f_3 x2_1) (f_3 x2_1)) hol.false) (thm_2135 x2_1 f_3) (thm_2155 x1_2 x2_1 f_3 hyp_1) (thm_2065 x2_1 f_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_2157 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) -> hol.proof (hol.imp (hol.not hol.false) hol.false) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) => hyp_2 : hol.proof (hol.not hol.false) => hol.EQ_MP hol.false hol.false thm_731 (thm_2156 x2_1 x1_2 f_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) Data.Bool.F) ;)

(; dict ;)

def thm_2158 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) => hol.EQ_MP hol.false hol.false thm_731 (hol.EQ_MP (hol.imp (hol.not hol.false) hol.false) hol.false thm_700 (thm_2157 x2_1 x1_2 f_3 hyp_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((= x1) x2)) Data.Bool.F)) ((Data.Bool.==> ((= x1) x2)) Data.Bool.F)) ;)

(; dict ;)

def thm_2159 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false) (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> ((= x1) x2)) Data.Bool.F)) ((Data.Bool.==> ((= x1) x2)) Data.Bool.F)) ;)

(; dict ;)

def thm_2160 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false) (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false) (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false) (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false) (thm_2159 x2_1 x1_2) (thm_2159 x2_1 x1_2).

(; Theorem: |- ((= (Data.Bool.~ ((= x1) x2))) ((Data.Bool.==> ((= x1) x2)) Data.Bool.F)) ;)

(; dict ;)

def thm_2161 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => (p_1 : hol.term hol.bool => thm_744 p_1) (hol.eq hol.ind x1_2 x2_1).

(; Theorem: |- ((= (Data.Bool.~ ((= x1) x2))) ((Data.Bool.==> ((= x1) x2)) Data.Bool.F)) ;)

(; dict ;)

def thm_2162 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.TRANS hol.bool (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false) (thm_2068 x2_1 x1_2) (thm_2161 x2_1 x1_2).

(; Theorem: |- ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) ;)

(; dict ;)

def thm_2163 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) -> hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) => hyp_1.

(; Theorem: |- (Data.Bool.~ ((= x1) x2)) ;)

(; dict ;)

def thm_2164 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) -> hol.proof (hol.not (hol.eq hol.ind x1_3 x2_2)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2)) hyp_1.

(; Theorem: |- (Data.Bool.~ ((= x1) x2)) ;)

(; dict ;)

def thm_2165 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) -> hol.proof (hol.not (hol.eq hol.ind x1_3 x2_2)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) => hol.PROVE_HYP (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.not (hol.eq hol.ind x1_3 x2_2)) (thm_2163 x2_2 x1_3 f_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) => thm_2164 f_1 x2_2 x1_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x1) x2)) Data.Bool.F) ;)

(; dict ;)

def thm_2166 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) -> hol.proof (hol.imp (hol.eq hol.ind x1_3 x2_2) hol.false) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) => hol.EQ_MP (hol.not (hol.eq hol.ind x1_3 x2_2)) (hol.imp (hol.eq hol.ind x1_3 x2_2) hol.false) (thm_2162 x2_2 x1_3) (hol.EQ_MP (hol.not (hol.eq hol.ind x1_3 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2)) (thm_2068 x2_2 x1_3) (hol.EQ_MP (hol.not (hol.eq hol.ind x1_3 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2)) (thm_2068 x2_2 x1_3) (thm_2165 f_1 x2_2 x1_3 hyp_1))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x1) x2))) ((= x1) x2))) ((= x1) x2)) ;)

(; dict ;)

def thm_2167 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.ind x1_2 x2_1)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind x1_2 x2_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (f _1882)) (f _1883))) ((= _1882) _1883))) ((Data.Bool.==> ((= (f _1882)) (f _1883))) ((= _1882) _1883))) ;)

(; dict ;)

def thm_2168 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1)) (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((= (f _1882)) (f _1883))) ((= _1882) _1883))) ((Data.Bool.==> ((= (f _1882)) (f _1883))) ((= _1882) _1883))) ;)

(; dict ;)

def thm_2169 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1)) (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1)) (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1)) (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1)) (thm_2168 __1883_1 __1882_2 f_3) (thm_2168 __1883_1 __1882_2 f_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= (f _1882)) (f _1883))))) ((= _1882) _1883))) ;)

(; dict ;)

def thm_2170 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> __1883_2 : hol.term hol.ind -> __1882_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))) (hol.imp (hol.not (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))) (hol.eq hol.ind __1882_3 __1883_2))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => __1883_2 : hol.term hol.ind => __1882_3 : hol.term hol.ind => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => thm_846 b_1 a_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2))) (hol.eq hol.ind __1882_3 __1883_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= (f _1882)) (f _1883))))) ((= (f _1882)) (f _1883))) ;)

(; dict ;)

def thm_2171 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => (a_1 : hol.term hol.bool => thm_943 a_1) (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= (f _1882)) (f _1883)))))) (Data.Bool.==> ((= (f _1882)) (f _1883)))) ;)

(; dict ;)

def thm_2172 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) thm_126 (thm_2171 __1883_1 __1882_2 f_3).

(; Theorem: |- ((= ((= _1882) _1883)) ((= _1882) _1883)) ;)

(; dict ;)

def thm_2173 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind __1882_2 __1883_1) (hol.eq hol.ind __1882_2 __1883_1)) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => hol.REFL hol.bool (hol.eq hol.ind __1882_2 __1883_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.~ ((= (f _1882)) (f _1883))))) ((= _1882) _1883))) ((Data.Bool.==> ((= (f _1882)) (f _1883))) ((= _1882) _1883))) ;)

(; dict ;)

def thm_2174 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)) (hol.eq hol.ind __1882_2 __1883_1))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) (hol.imp (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1) (hol.eq hol.ind __1882_2 __1883_1) (thm_2172 __1883_1 __1882_2 f_3) (thm_2173 __1883_1 __1882_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883))))) ((Data.Bool.==> ((= (f _1882)) (f _1883))) ((= _1882) _1883))) ;)

(; dict ;)

def thm_2175 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> __1883_2 : hol.term hol.ind -> __1882_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))) (hol.imp (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)) (hol.eq hol.ind __1882_3 __1883_2))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => __1883_2 : hol.term hol.ind => __1882_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))) (hol.imp (hol.not (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))) (hol.eq hol.ind __1882_3 __1883_2)) (hol.imp (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)) (hol.eq hol.ind __1882_3 __1883_2)) (thm_2170 f_1 __1883_2 __1882_3) (thm_2174 __1883_2 __1882_3 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883))) ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883))))) ;)

(; dict ;)

def thm_2176 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_975 q_1 p_2) (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883)))) (= ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883)))))) ;)

(; dict ;)

def thm_2177 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1))) (hol.eq hol.bool (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) thm_561 (thm_2176 __1883_1 __1882_2 f_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883))))) ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883))))) ;)

(; dict ;)

def thm_2178 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> __1883_2 : hol.term hol.ind -> __1882_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))) (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => __1883_2 : hol.term hol.ind => __1882_3 : hol.term hol.ind => hol.REFL hol.bool (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883))) ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883)))))) ((= ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883))))) ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883)))))) ;)

(; dict ;)

def thm_2179 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) (hol.eq hol.bool (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1))) (hol.eq hol.bool (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (thm_2177 __1883_1 __1882_2 f_3) (thm_2178 f_3 __1883_1 __1882_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883))))) ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883)))))) Data.Bool.T) ;)

(; dict ;)

def thm_2180 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> __1883_2 : hol.term hol.ind -> __1882_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))) (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2))))) hol.true) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => __1883_2 : hol.term hol.ind => __1882_3 : hol.term hol.ind => (x_1 : hol.term hol.bool => thm_316 x_1) (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_1 __1882_3) (f_1 __1883_2)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883))) ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883)))))) Data.Bool.T) ;)

(; dict ;)

def thm_2181 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) hol.true) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) (hol.eq hol.bool (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) hol.true (thm_2179 __1883_1 __1882_2 f_3) (thm_2180 f_3 __1883_1 __1882_2).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883))) ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883)))))) ;)

(; dict ;)

def thm_2182 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.SYM hol.bool (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.eq hol.ind __1882_2 __1883_1) (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) hol.true (thm_2181 __1883_1 __1882_2 f_3).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883))))) (Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883))))) ;)

(; dict ;)

def thm_2183 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883))) ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883))) ;)

(; dict ;)

def thm_2184 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1)))) (hol.eq hol.ind __1882_2 __1883_1) (hol.eq hol.ind __1882_2 __1883_1) (thm_2183 __1883_1 __1882_2 f_3) (thm_2173 __1883_1 __1882_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883))) ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883))) ;)

(; dict ;)

def thm_2185 : __1883_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1))) :=
  __1883_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 __1883_1))) (hol.eq hol.ind __1882_2 __1883_1)) (thm_2184 __1883_1 __1882_2 f_3) (thm_2184 __1883_1 __1882_2 f_3).

(; Theorem: |- (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2186 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) -> hol.proof (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3)))) (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2187 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) -> hol.proof (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) => hol.PROVE_HYP (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (thm_2100 y_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) => thm_2186 y_1 f_2 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f x2)))) ((= _1882) x2))) ;)

(; dict ;)

def thm_2188 : y_1 : hol.term hol.ind -> __1882_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) -> hol.proof (hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 __1882_2) (f_3 x2_4))) (hol.eq hol.ind __1882_2 x2_4))) :=
  y_1 : hol.term hol.ind => __1882_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_3 x_4))))) => hol.EQ_MP (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (thm_2090 f_3) (thm_2187 y_1 f_3 hyp_1) __1882_2.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((= (f _1882)) (f _1883)))) ((= _1882) _1883)) ;)

(; dict ;)

def thm_2189 : y_1 : hol.term hol.ind -> __1883_2 : hol.term hol.ind -> __1882_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6))) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) -> hol.proof (hol.or (hol.not (hol.eq hol.ind (f_4 __1882_3) (f_4 __1883_2))) (hol.eq hol.ind __1882_3 __1883_2)) :=
  y_1 : hol.term hol.ind => __1883_2 : hol.term hol.ind => __1882_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6))) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) => thm_2188 y_1 __1882_3 f_4 hyp_1 __1883_2.

(; Theorem: |- ((Data.Bool.\/ ((= _1882) _1883)) (Data.Bool.~ ((= (f _1882)) (f _1883)))) ;)

(; dict ;)

def thm_2190 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> __1883_3 : hol.term hol.ind -> __1882_4 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_5) (f_2 x2_6))) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_5))))) -> hol.proof (hol.or (hol.eq hol.ind __1882_4 __1883_3) (hol.not (hol.eq hol.ind (f_2 __1882_4) (f_2 __1883_3)))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => __1883_3 : hol.term hol.ind => __1882_4 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_5) (f_2 x2_6))) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_5))))) => hol.EQ_MP (hol.or (hol.not (hol.eq hol.ind (f_2 __1882_4) (f_2 __1883_3))) (hol.eq hol.ind __1882_4 __1883_3)) (hol.or (hol.eq hol.ind __1882_4 __1883_3) (hol.not (hol.eq hol.ind (f_2 __1882_4) (f_2 __1883_3)))) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.or (hol.not (hol.eq hol.ind (f_2 __1882_4) (f_2 __1883_3))) (hol.eq hol.ind __1882_4 __1883_3)) (hol.or (hol.eq hol.ind __1882_4 __1883_3) (hol.not (hol.eq hol.ind (f_2 __1882_4) (f_2 __1883_3))))) (thm_2182 __1883_3 __1882_4 f_2) thm_4) (hol.EQ_MP (hol.or (hol.not (hol.eq hol.ind (f_2 __1882_4) (f_2 __1883_3))) (hol.eq hol.ind __1882_4 __1883_3)) (hol.or (hol.not (hol.eq hol.ind (f_2 __1882_4) (f_2 __1883_3))) (hol.eq hol.ind __1882_4 __1883_3)) (thm_2185 __1883_3 __1882_4 f_2) (thm_2189 y_1 __1883_3 __1882_4 f_2 hyp_1)).

(; Theorem: |- ((Data.Bool.==> ((= (f _1882)) (f _1883))) ((= _1882) _1883)) ;)

(; dict ;)

def thm_2191 : y_1 : hol.term hol.ind -> __1883_2 : hol.term hol.ind -> __1882_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6))) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) -> hol.proof (hol.imp (hol.eq hol.ind (f_4 __1882_3) (f_4 __1883_2)) (hol.eq hol.ind __1882_3 __1883_2)) :=
  y_1 : hol.term hol.ind => __1883_2 : hol.term hol.ind => __1882_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6))) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) => hol.EQ_MP (hol.or (hol.eq hol.ind __1882_3 __1883_2) (hol.not (hol.eq hol.ind (f_4 __1882_3) (f_4 __1883_2)))) (hol.imp (hol.eq hol.ind (f_4 __1882_3) (f_4 __1883_2)) (hol.eq hol.ind __1882_3 __1883_2)) (thm_2175 f_4 __1883_2 __1882_3) (thm_2190 y_1 f_4 __1883_2 __1882_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)) ;)

(; dict ;)

def thm_2192 : y_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) -> hol.proof (hol.imp (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.eq hol.ind x1_3 x2_2)) :=
  y_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) => (y_1 : hol.term hol.ind => __1883_2 : hol.term hol.ind => __1882_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6))) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) => hol.EQ_MP (hol.imp (hol.eq hol.ind (f_4 __1882_3) (f_4 __1883_2)) (hol.eq hol.ind __1882_3 __1883_2)) (hol.imp (hol.eq hol.ind (f_4 __1882_3) (f_4 __1883_2)) (hol.eq hol.ind __1882_3 __1883_2)) (thm_2169 __1883_2 __1882_3 f_4) (thm_2191 y_1 __1883_2 __1882_3 f_4 hyp_1)) y_1 x2_2 x1_3 f_4 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= (f x1)) (f x2)))) ((= (f x1)) (f x2)))) ((= (f x1)) (f x2))) ;)

(; dict ;)

def thm_2193 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => (p_1 : hol.term hol.bool => thm_730 p_1) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)).

(; Theorem: |- ((= (f x1)) (f x2)) ;)

(; dict ;)

def thm_2194 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) -> hol.proof (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) hyp_1.

(; Theorem: |- ((= (f x1)) (f x2)) ;)

(; dict ;)

def thm_2195 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) -> hol.proof (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) => hol.PROVE_HYP (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (thm_2163 x2_1 x1_2 f_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) => thm_2194 x2_1 x1_2 f_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= (f x1)) (f x2)))) ((= (f x1)) (f x2))) ;)

(; dict ;)

def thm_2196 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) => hyp_2 : hol.proof (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) => hol.EQ_MP (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (thm_2066 x2_1 x1_2 f_3) (hol.EQ_MP (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (thm_2066 x2_1 x1_2 f_3) (hol.EQ_MP (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (thm_2066 x2_1 x1_2 f_3) (thm_2195 x2_1 x1_2 f_3 hyp_1))).

(; Theorem: |- ((= x1) x2) ;)

(; dict ;)

def thm_2197 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> x2_3 : hol.term hol.ind -> x1_4 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1__1_5) (f_2 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_5))))) -> hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_2 x1_4) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_4 x2_3))) -> hol.proof (hol.eq hol.ind x1_4 x2_3) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => x2_3 : hol.term hol.ind => x1_4 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1__1_5) (f_2 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_5))))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_2 x1_4) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_4 x2_3))) => thm_2192 y_1 x2_3 x1_4 f_2 hyp_1 (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_3))) (hol.eq hol.ind (f_2 x1_4) (f_2 x2_3))) (hol.eq hol.ind (f_2 x1_4) (f_2 x2_3)) (thm_2193 x2_3 x1_4 f_2) (thm_2196 x2_3 x1_4 f_2 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x1) x2))) ((= x1) x2)) ;)

(; dict ;)

def thm_2198 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> x2_3 : hol.term hol.ind -> x1_4 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1__1_5) (f_2 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_5))))) -> hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_2 x1_4) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_4 x2_3))) -> hol.proof (hol.imp (hol.not (hol.eq hol.ind x1_4 x2_3)) (hol.eq hol.ind x1_4 x2_3)) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => x2_3 : hol.term hol.ind => x1_4 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1__1_5) (f_2 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_5))))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_2 x1_4) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_4 x2_3))) => hyp_3 : hol.proof (hol.not (hol.eq hol.ind x1_4 x2_3)) => hol.EQ_MP (hol.eq hol.ind x1_4 x2_3) (hol.eq hol.ind x1_4 x2_3) (thm_1973 x2_3 x1_4) (thm_2197 y_1 f_2 x2_3 x1_4 hyp_1 hyp_2).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2199 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_4 x_5))))) -> hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => y_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_4 x_5))))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) => hol.EQ_MP (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false) (hol.imp (hol.eq hol.ind x1_2 x2_1) hol.false) (thm_2160 x2_1 x1_2) (thm_2166 f_4 x2_1 x1_2 hyp_2) (hol.EQ_MP (hol.imp (hol.not (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.ind x1_2 x2_1) (thm_2167 x2_1 x1_2) (thm_2198 y_3 f_4 x2_1 x1_2 hyp_1 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_2200 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_4 x_5))))) -> hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) -> hol.proof (hol.imp (hol.not hol.false) hol.false) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => y_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_4 x_5))))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) => hyp_3 : hol.proof (hol.not hol.false) => hol.EQ_MP hol.false hol.false thm_731 (thm_2199 x2_1 x1_2 y_3 f_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) Data.Bool.F) ;)

(; dict ;)

def thm_2201 : y_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) -> hol.proof (hol.imp (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) hol.false) :=
  y_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) => hyp_2 : hol.proof (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) => hol.EQ_MP (hol.imp (hol.not hol.false) hol.false) hol.false thm_700 (thm_2200 x2_2 x1_3 y_1 f_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2202 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) -> hol.proof (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2203 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) -> hyp_2 : hol.proof (hol.imp (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) hol.false) -> hyp_3 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) => hyp_2 : hol.proof (hol.imp (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) hol.false) => hyp_3 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) hol.false hyp_2 hyp_1 hyp_3.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2204 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) -> hyp_2 : hol.proof (hol.imp (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) hol.false) -> hyp_3 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) => hyp_2 : hol.proof (hol.imp (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) hol.false) => hyp_3 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) => hol.PROVE_HYP (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) hol.false (thm_2202 x2_1 x1_2 f_3 hyp_3) (hyp_4 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) => thm_2203 x2_1 x1_2 f_3 hyp_1 hyp_2 hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2205 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_4 x_5))))) -> hyp_2 : hol.proof (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) -> hyp_3 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => y_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_4 x_5))))) => hyp_2 : hol.proof (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) => hyp_3 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) => hol.PROVE_HYP (hol.imp (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) hol.false) hol.false (thm_2201 y_3 x2_1 x1_2 f_4 hyp_1) (hyp_4 : hol.proof (hol.imp (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) hol.false) => thm_2204 x2_1 x1_2 f_4 hyp_2 hyp_4 hyp_3).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2206 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> y_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_4 x_5))))) -> hyp_2 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => y_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_4 x_5))))) => hyp_2 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) => hol.PROVE_HYP (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) hol.false (thm_2158 x2_1 x1_2 f_4) (hyp_3 : hol.proof (hol.imp (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1)) hol.false) => thm_2205 x2_1 x1_2 y_3 f_4 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) Data.Bool.F) ;)

(; dict ;)

def thm_2207 : y_1 : hol.term hol.ind -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) -> hol.proof (hol.imp (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) hol.false) :=
  y_1 : hol.term hol.ind => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_5 : hol.term hol.ind => hol.forall hol.ind (x2__1_6 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1__1_5) (f_4 x2__1_6))) (hol.eq hol.ind x1__1_5 x2__1_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_4 x_5))))) => hyp_2 : hol.proof (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) => thm_2206 x2_2 x1_3 y_1 f_4 hyp_1 hyp_2.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2208 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_27_3 : hol.term (hol.arr hol.ind hol.ind) -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.imp (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5)) hol.false) -> hyp_2 : hol.proof (hol.imp (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) hol.false) -> hyp_3 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_27_3 : hol.term (hol.arr hol.ind hol.ind) => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5)) hol.false) => hyp_2 : hol.proof (hol.imp (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) hol.false) => hyp_3 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5)) (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) hol.false hyp_2 hyp_1 hyp_3.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2209 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_27_3 : hol.term (hol.arr hol.ind hol.ind) -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.imp (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5)) hol.false) -> hyp_2 : hol.proof (hol.imp (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) hol.false) -> hyp_3 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_27_3 : hol.term (hol.arr hol.ind hol.ind) => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.imp (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5)) hol.false) => hyp_2 : hol.proof (hol.imp (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) hol.false) => hyp_3 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5))) => hol.PROVE_HYP (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5))) hol.false (thm_2084 f_27_3 x2_1 x1_2 f_4 hyp_3) (hyp_4 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_2) (f_4 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_3 z_5)) z_5))) => thm_2208 x2_1 x1_2 f_27_3 f_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2210 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_27_3 : hol.term (hol.arr hol.ind hol.ind) -> y_4 : hol.term hol.ind -> f_5 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_6 : hol.term hol.ind => hol.forall hol.ind (x2__1_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1__1_6) (f_5 x2__1_7))) (hol.eq hol.ind x1__1_6 x2__1_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) -> hyp_2 : hol.proof (hol.imp (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_3 z_6)) z_6)) hol.false) -> hyp_3 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_2) (f_5 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_2) (f_5 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_3 z_6)) z_6))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_27_3 : hol.term (hol.arr hol.ind hol.ind) => y_4 : hol.term hol.ind => f_5 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_6 : hol.term hol.ind => hol.forall hol.ind (x2__1_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1__1_6) (f_5 x2__1_7))) (hol.eq hol.ind x1__1_6 x2__1_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) => hyp_2 : hol.proof (hol.imp (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_3 z_6)) z_6)) hol.false) => hyp_3 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_2) (f_5 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_2) (f_5 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_3 z_6)) z_6))) => hol.PROVE_HYP (hol.imp (hol.or (hol.and (hol.eq hol.ind (f_5 x1_2) (f_5 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_2) (f_5 x2_1))) (hol.eq hol.ind x1_2 x2_1))) hol.false) hol.false (thm_2207 y_4 x2_1 x1_2 f_5 hyp_1) (hyp_4 : hol.proof (hol.imp (hol.or (hol.and (hol.eq hol.ind (f_5 x1_2) (f_5 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_2) (f_5 x2_1))) (hol.eq hol.ind x1_2 x2_1))) hol.false) => thm_2209 x2_1 x1_2 f_27_3 f_5 hyp_2 hyp_4 hyp_3).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2211 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> y_4 : hol.term hol.ind -> f_5 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_6 : hol.term hol.ind => hol.forall hol.ind (x2__1_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1__1_6) (f_5 x2__1_7))) (hol.eq hol.ind x1__1_6 x2__1_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) -> hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) -> hol.proof hol.false :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => y_4 : hol.term hol.ind => f_5 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1__1_6 : hol.term hol.ind => hol.forall hol.ind (x2__1_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1__1_6) (f_5 x2__1_7))) (hol.eq hol.ind x1__1_6 x2__1_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) => hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) => hol.PROVE_HYP (hol.imp (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6)) hol.false) hol.false (thm_2133 y_4 f_27_1 f_5 hyp_1) (hyp_3 : hol.proof (hol.imp (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6)) hol.false) => thm_2210 x2_2 x1_3 f_27_1 y_4 f_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2212 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> y_4 : hol.term hol.ind -> f_5 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) -> hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) -> hol.proof hol.false :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => y_4 : hol.term hol.ind => f_5 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) => hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) => hol.PROVE_HYP (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) hol.false (hol.EQ_MP (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) (thm_2099 y_4 f_5) (thm_2100 y_4 f_5 hyp_1)) (hyp_3 : hol.proof (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) => thm_2211 f_27_1 x2_2 x1_3 y_4 f_5 hyp_3 hyp_2).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2213 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> y_4 : hol.term hol.ind -> f_5 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) -> hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) -> hol.proof hol.false :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => y_4 : hol.term hol.ind => f_5 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) => hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) => hol.PROVE_HYP (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) hol.false (hol.EQ_MP (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) (thm_2083 f_27_1 x2_2 x1_3 f_5) (thm_2084 f_27_1 x2_2 x1_3 f_5 hyp_2)) (hyp_3 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) => thm_2212 f_27_1 x2_2 x1_3 y_4 f_5 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) Data.Bool.F) ;)

(; dict ;)

def thm_2214 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> y_4 : hol.term hol.ind -> f_5 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) hol.false) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => y_4 : hol.term hol.ind => f_5 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_6) (f_5 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_4 (f_5 x_6))))) => thm_2213 f_27_1 x2_2 x1_3 y_4 f_5 hyp_2 hyp_1.

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) y)) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ;)

(; dict ;)

def thm_2215 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) y_1) (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3)))))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) y_1.

(; Theorem: |- (\lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) y) ;)

(; dict ;)

def thm_2216 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) y_1) -> hol.proof ((y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) y_1) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) y_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2217 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) y_1) -> hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) y_1) => hol.EQ_MP ((y_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5))) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4))))) y_1) (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) (thm_2215 y_1 f_2) (thm_2216 y_1 f_2 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2218 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> y_4 : hol.term hol.ind -> f_5 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((y_6 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_7 : hol.term hol.ind => hol.forall hol.ind (x2_8 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_7) (f_5 x2_8))) (hol.eq hol.ind x1_7 x2_8)))) (hol.forall hol.ind (x_7 : hol.term hol.ind => hol.not (hol.eq hol.ind y_6 (f_5 x_7))))) y_4) -> hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) -> hol.proof hol.false :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => y_4 : hol.term hol.ind => f_5 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((y_6 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_7 : hol.term hol.ind => hol.forall hol.ind (x2_8 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_7) (f_5 x2_8))) (hol.eq hol.ind x1_7 x2_8)))) (hol.forall hol.ind (x_7 : hol.term hol.ind => hol.not (hol.eq hol.ind y_6 (f_5 x_7))))) y_4) => hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) => thm_2214 f_27_1 x2_2 x1_3 y_4 f_5 hyp_2 (thm_2217 y_4 f_5 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) y)) Data.Bool.F) ;)

(; dict ;)

def thm_2219 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> y_4 : hol.term hol.ind -> f_5 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) -> hol.proof (hol.imp ((y_6 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_7 : hol.term hol.ind => hol.forall hol.ind (x2_8 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_7) (f_5 x2_8))) (hol.eq hol.ind x1_7 x2_8)))) (hol.forall hol.ind (x_7 : hol.term hol.ind => hol.not (hol.eq hol.ind y_6 (f_5 x_7))))) y_4) hol.false) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => y_4 : hol.term hol.ind => f_5 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_5 x1_3) (f_5 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_5 (f_27_1 z_6)) z_6))) => hyp_2 : hol.proof ((y_6 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_7 : hol.term hol.ind => hol.forall hol.ind (x2_8 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_5 x1_7) (f_5 x2_8))) (hol.eq hol.ind x1_7 x2_8)))) (hol.forall hol.ind (x_7 : hol.term hol.ind => hol.not (hol.eq hol.ind y_6 (f_5 x_7))))) y_4) => thm_2218 f_27_1 x2_2 x1_3 y_4 f_5 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> (\lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) y)) Data.Bool.F)) ;)

(; dict ;)

def thm_2220 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) -> hol.proof (hol.forall hol.ind (y_5 : hol.term hol.ind => hol.imp ((y_6 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_7 : hol.term hol.ind => hol.forall hol.ind (x2_8 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1_7) (f_4 x2_8))) (hol.eq hol.ind x1_7 x2_8)))) (hol.forall hol.ind (x_7 : hol.term hol.ind => hol.not (hol.eq hol.ind y_6 (f_4 x_7))))) y_5) hol.false)) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) => y_5 : hol.term hol.ind => thm_2219 f_27_1 x2_2 x1_3 y_5 f_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) Data.Bool.F) ;)

(; dict ;)

def thm_2221 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7))) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind y_5 (f_4 x_6)))))) hol.false) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) => thm_2061 f_4 (thm_2220 f_27_1 x2_2 x1_3 f_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))) ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2222 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_1486 q_1 p_2) (hol.eq hol.ind x1_2 x2_1) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))) ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2223 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.imp (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (hol.or (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (thm_2222 x2_1 x1_2 f_3) (thm_2086 x2_1 x1_2 f_3).

(; Theorem: |- ((= \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))) \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2224 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => thm_2223 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))) (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2225 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) thm_72 (thm_2224 x1_1 f_2).

(; Theorem: |- ((= \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))) \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2226 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => thm_2225 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2227 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) thm_72 (thm_2226 f_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))))) (Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2228 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) thm_191 (thm_2227 f_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_2229 : P_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_2 : hol.term hol.ind => hol.not (P_1 x_2)))) :=
  P_1 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_1604 A P_1) hol.ind P_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda y. (Data.Bool.? \lambda x. ((= y) (f x))) x)))) ;)

(; dict ;)

def thm_2230 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_2 : hol.term hol.ind => hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_1 x_4))) x_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (P_1 : hol.term (hol.arr hol.ind hol.bool) => thm_2229 P_1) (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))).

(; Theorem: |- ((= (\lambda y. (Data.Bool.? \lambda x. ((= y) (f x))) y)) (Data.Bool.? \lambda x. ((= y) (f x)))) ;)

(; dict ;)

def thm_2231 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4))) y_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_1 (f_2 x_3)))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4))) y_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda y. (Data.Bool.? \lambda x. ((= y) (f x))) y))) (Data.Bool.~ (Data.Bool.? \lambda x. ((= y) (f x))))) ;)

(; dict ;)

def thm_2232 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4))) y_1)) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_1 (f_2 x_3))))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4))) y_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_1 (f_2 x_3))) thm_509 (thm_2231 y_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_2233 : P_1 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) P_1)) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (P_1 x_2)))) :=
  P_1 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_1623 A P_1) hol.ind P_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda x. ((= y) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.~ (\lambda x. ((= y) (f x)) x)))) ;)

(; dict ;)

def thm_2234 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> y_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_4)) x_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => y_2 : hol.term hol.ind => (P_1 : hol.term (hol.arr hol.ind hol.bool) => thm_2233 P_1) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)).

(; Theorem: |- ((= (\lambda x. ((= y) (f x)) x)) ((= y) (f x))) ;)

(; dict ;)

def thm_2235 : x_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool ((x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)) x_1) (hol.eq hol.ind y_3 (f_2 x_1))) :=
  x_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.BETA_CONV hol.ind hol.bool (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)) x_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda x. ((= y) (f x)) x))) (Data.Bool.~ ((= y) (f x)))) ;)

(; dict ;)

def thm_2236 : x_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)) x_1)) (hol.not (hol.eq hol.ind y_3 (f_2 x_1)))) :=
  x_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool hol.not hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)) x_1) (hol.eq hol.ind y_3 (f_2 x_1)) thm_509 (thm_2235 x_1 f_2 y_3).

(; Theorem: |- ((= (Data.Bool.~ (\lambda x. ((= y) (f x)) x))) (Data.Bool.~ ((= y) (f x)))) ;)

(; dict ;)

def thm_2237 : x_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> y_3 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)) x_1)) (hol.not (hol.eq hol.ind y_3 (f_2 x_1)))) :=
  x_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => y_3 : hol.term hol.ind => hol.TRANS hol.bool (hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)) x_1)) (hol.not (hol.eq hol.ind y_3 (f_2 x_1))) (hol.not (hol.eq hol.ind y_3 (f_2 x_1))) (thm_2236 x_1 f_2 y_3) (thm_2096 x_1 f_2 y_3).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ (\lambda x. ((= y) (f x)) x))) \lambda x. (Data.Bool.~ ((= y) (f x)))) ;)

(; dict ;)

def thm_2238 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> y_2 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_4)) x_3)) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => y_2 : hol.term hol.ind => hol.ABS_THM hol.ind hol.bool (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_4)) x_3)) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))) (x_3 : hol.term hol.ind => thm_2237 x_3 f_1 y_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ (\lambda x. ((= y) (f x)) x)))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2239 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> y_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_4)) x_3))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => y_2 : hol.term hol.ind => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_4)) x_3)) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))) thm_72 (thm_2238 f_1 y_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda x. ((= y) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2240 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> y_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => y_2 : hol.term hol.ind => hol.TRANS hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_4)) x_3))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) (thm_2234 f_1 y_2) (thm_2239 f_1 y_2).

(; Theorem: |- ((= (Data.Bool.~ (\lambda y. (Data.Bool.? \lambda x. ((= y) (f x))) y))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2241 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4))) y_1)) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4))) y_1)) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_1 (f_2 x_3)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3)))) (thm_2232 y_1 f_2) (thm_2240 f_2 y_1).

(; Theorem: |- ((= \lambda y. (Data.Bool.~ (\lambda y. (Data.Bool.? \lambda x. ((= y) (f x))) y))) \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2242 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (y_2 : hol.term hol.ind => hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_1 x_4))) y_2)) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (y_2 : hol.term hol.ind => hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_1 x_4))) y_2)) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) (y_2 : hol.term hol.ind => thm_2241 y_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (Data.Bool.~ (\lambda y. (Data.Bool.? \lambda x. ((= y) (f x))) y)))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ;)

(; dict ;)

def thm_2243 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_1 x_4))) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (y_2 : hol.term hol.ind => hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_1 x_4))) y_2)) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) thm_134 (thm_2242 f_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ;)

(; dict ;)

def thm_2244 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_2 : hol.term hol.ind => hol.not ((y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_1 x_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) (thm_2230 f_1) (thm_2243 f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) ;)

(; dict ;)

def thm_2245 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) (thm_2228 f_1) (thm_2244 f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) ;)

(; dict ;)

def thm_2246 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))).

(; Theorem: |- ((= (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y)) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2247 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4)))) y_1) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3))))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4)))) y_1.

(; Theorem: |- ((= \lambda y. (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y)) \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))) ;)

(; dict ;)

def thm_2248 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) (y_2 : hol.term hol.ind => thm_2247 y_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ;)

(; dict ;)

def thm_2249 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) thm_134 (thm_2248 f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y)))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) ;)

(; dict ;)

def thm_2250 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) (thm_2091 f_1) (thm_2249 f_1).

(; Theorem: |- ((= (= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y))))) (= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))))) ;)

(; dict ;)

def thm_2251 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)))) (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) thm_561 (thm_2250 f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ;)

(; dict ;)

def thm_2252 : y_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4)))) y_1)) (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3)))))) :=
  y_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))))) (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_2 x_4)))) y_1) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_1 (f_2 x_3)))) (thm_2091 f_2) (thm_2247 y_1 f_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y))) \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ;)

(; dict ;)

def thm_2253 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) (y_2 : hol.term hol.ind => thm_2252 y_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) ;)

(; dict ;)

def thm_2254 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))) thm_134 (thm_2253 f_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))))) ;)

(; dict ;)

def thm_2255 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)))) (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)))) (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (thm_2251 f_1) (thm_2254 f_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x))))) ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x))))) ;)

(; dict ;)

def thm_2256 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))).

(; Theorem: |- ((= ((= ((Data.Bool./\ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ p) (q y))))) ((= ((Data.Bool./\ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ p) (q y))))) ;)

(; dict ;)

def thm_2257 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and p_2 (q_1 y_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and p_2 (q_1 y_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and p_2 (q_1 y_3)))).

(; Theorem: |- ((= ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x))))) ((= ((Data.Bool./\ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ p) (q y))))) ;)

(; dict ;)

def thm_2258 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and p_2 (q_1 y_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and p_2 (q_1 y_3)))) (thm_2256 A q_1 p_2) (thm_2257 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x))))) ;)

(; dict ;)

def thm_2259 : A : hol.type -> p_1 : hol.term hol.bool -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.and p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_1 (q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term hol.bool => thm_53 A p_1.

(; Theorem: |- ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x)))) ;)

(; dict ;)

def thm_2260 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_2259 A p_2 q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ p) (q y)))) ;)

(; dict ;)

def thm_2261 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and p_2 (q_1 y_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and p_2 (q_1 y_3)))) (thm_2258 A q_1 p_2) (thm_2260 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool./\ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ p) (q y)))) ;)

(; dict ;)

def thm_2262 : q_1 : hol.term (hol.arr hol.ind hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_3 : hol.term hol.ind => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_3 : hol.term hol.ind => hol.and p_2 (q_1 y_3)))) :=
  q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term hol.bool => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_2261 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (\lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))) y)))) ;)

(; dict ;)

def thm_2263 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term hol.bool => thm_2262 q_1 p_2) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) ;)

(; dict ;)

def thm_2264 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => (y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) ((y_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind y_3 (f_1 x_4)))) y_2)))) (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) (thm_2255 f_1) (thm_2263 f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) ;)

(; dict ;)

def thm_2265 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (thm_2246 f_1) (thm_2264 f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x))))))) ;)

(; dict ;)

def thm_2266 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (thm_2245 f_1) (thm_2265 f_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ;)

(; dict ;)

def thm_2267 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) -> hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.\/ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= y) (f x)))))) ;)

(; dict ;)

def thm_2268 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => hol.EQ_MP (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (y_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.or (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind y_2 (f_1 x_3)))))) (thm_2266 f_1) (thm_2267 f_1 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2269 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.not (hol.forall hol.ind (y_5 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_6 : hol.term hol.ind => hol.eq hol.ind y_5 (f_4 x_6)))))) -> hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) -> hol.proof hol.false :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.not (hol.forall hol.ind (y_5 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_6 : hol.term hol.ind => hol.eq hol.ind y_5 (f_4 x_6)))))) => hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) => thm_2221 f_27_1 x2_2 x1_3 f_4 hyp_2 (thm_2268 f_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) Data.Bool.F) ;)

(; dict ;)

def thm_2270 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.not (hol.forall hol.ind (y_5 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_6 : hol.term hol.ind => hol.eq hol.ind y_5 (f_4 x_6)))))) -> hol.proof (hol.imp (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) hol.false) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.not (hol.forall hol.ind (y_5 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_6 : hol.term hol.ind => hol.eq hol.ind y_5 (f_4 x_6)))))) => hyp_2 : hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) => thm_2269 f_27_1 x2_2 x1_3 f_4 hyp_1 hyp_2.

(; Theorem: |- ((= (\lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) f')) ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2271 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5)))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV (hol.arr hol.ind hol.ind) hol.bool (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1.

(; Theorem: |- (\lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) f') ;)

(; dict ;)

def thm_2272 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) -> hol.proof ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) => hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) ;)

(; dict ;)

def thm_2273 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) -> hol.proof (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) => hol.EQ_MP ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5))) (thm_2271 f_27_1 x2_2 x1_3 f_4) (thm_2272 f_27_1 x2_2 x1_3 f_4 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2274 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.not (hol.forall hol.ind (y_5 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_6 : hol.term hol.ind => hol.eq hol.ind y_5 (f_4 x_6)))))) -> hol.proof hol.false :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.not (hol.forall hol.ind (y_5 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_6 : hol.term hol.ind => hol.eq hol.ind y_5 (f_4 x_6)))))) => thm_2270 f_27_1 x2_2 x1_3 f_4 hyp_2 (thm_2273 f_27_1 x2_2 x1_3 f_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) f')) Data.Bool.F) ;)

(; dict ;)

def thm_2275 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.not (hol.forall hol.ind (y_5 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_6 : hol.term hol.ind => hol.eq hol.ind y_5 (f_4 x_6)))))) -> hol.proof (hol.imp ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) hol.false) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_4 x1_5) (f_4 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.not (hol.forall hol.ind (y_5 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_6 : hol.term hol.ind => hol.eq hol.ind y_5 (f_4 x_6)))))) => hyp_2 : hol.proof ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6))) f_27_1) => thm_2274 f_27_1 x2_2 x1_3 f_4 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda f'. ((Data.Bool.==> (\lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) f')) Data.Bool.F)) ;)

(; dict ;)

def thm_2276 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) -> hol.proof (hol.forall (hol.arr hol.ind hol.ind) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.imp ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6))) f_27_4) hol.false)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) => f_27_4 : hol.term (hol.arr hol.ind hol.ind) => thm_2275 f_27_4 x2_1 x1_2 f_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) Data.Bool.F) ;)

(; dict ;)

def thm_2277 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) hol.false) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) => thm_2060 x2_1 x1_2 f_3 (thm_2276 x2_1 x1_2 f_3 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2278 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2279 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) => thm_2277 x2_1 x1_2 f_3 hyp_2 (thm_2278 x2_1 x1_2 f_3 hyp_1).

(; Theorem: |- ((= (\lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) x2)) (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2280 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1.

(; Theorem: |- (\lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) x2) ;)

(; dict ;)

def thm_2281 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) -> hol.proof ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2282 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) => hol.EQ_MP ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) (thm_2280 x2_1 x1_2 f_3) (thm_2281 x2_1 x1_2 f_3 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2283 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) -> hol.proof hol.false :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) => (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) => thm_2279 x2_1 x1_2 f_3 hyp_3 hyp_2) (thm_2282 x2_1 x1_2 f_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) x2)) Data.Bool.F) ;)

(; dict ;)

def thm_2284 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) -> hol.proof (hol.imp ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) hol.false) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_3 x1_4) (f_3 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.not (hol.forall hol.ind (y_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_5 : hol.term hol.ind => hol.eq hol.ind y_4 (f_3 x_5)))))) => hyp_2 : hol.proof ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)))) x2_1) => thm_2283 x2_1 x1_2 f_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x2. ((Data.Bool.==> (\lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) x2)) Data.Bool.F)) ;)

(; dict ;)

def thm_2285 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) -> hol.proof (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp ((x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6)))) x2_3) hol.false)) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) => x2_3 : hol.term hol.ind => thm_2284 x2_3 x1_1 f_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) Data.Bool.F) ;)

(; dict ;)

def thm_2286 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) hol.false) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) => thm_2059 x1_1 f_2 (thm_2285 x1_1 f_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2287 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2288 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) -> hol.proof hol.false :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) => thm_2286 x1_1 f_2 hyp_2 (thm_2287 x1_1 f_2 hyp_1).

(; Theorem: |- ((= (\lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) x1)) (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2289 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1.

(; Theorem: |- (\lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) x1) ;)

(; dict ;)

def thm_2290 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) -> hol.proof ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2291 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) => hol.EQ_MP ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) (thm_2289 x1_1 f_2) (thm_2290 x1_1 f_2 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2292 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) -> hol.proof hol.false :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) => (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) => thm_2288 x1_1 f_2 hyp_3 hyp_2) (thm_2291 x1_1 f_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) x1)) Data.Bool.F) ;)

(; dict ;)

def thm_2293 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) -> hol.proof (hol.imp ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) hol.false) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.not (hol.forall hol.ind (y_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_4 : hol.term hol.ind => hol.eq hol.ind y_3 (f_2 x_4)))))) => hyp_2 : hol.proof ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_5 z_6)) z_6))))) x1_1) => thm_2292 x1_1 f_2 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x1. ((Data.Bool.==> (\lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) x1)) Data.Bool.F)) ;)

(; dict ;)

def thm_2294 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) -> hol.proof (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.imp ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) (hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_5 z_6)) z_6))))) x1_2) hol.false)) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => x1_2 : hol.term hol.ind => thm_2293 x1_2 f_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) Data.Bool.F) ;)

(; dict ;)

def thm_2295 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) hol.false) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => thm_2058 f_1 (thm_2294 f_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2296 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2297 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_2296 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p))) (= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p))) ;)

(; dict ;)

def thm_2298 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)).

(; Theorem: |- ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2299 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1))) hol.false) (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) Data.Bool.F))) ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_2300 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false)) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (thm_2298 p_1 q_2) (thm_2299 q_2).

(; Theorem: |- ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2301 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p))) (= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_2302 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) thm_561 (thm_2301 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2303 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))).

(; Theorem: |- ((= ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))))) ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_2304 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (thm_2302 p_1 q_2) (thm_2303 q_2).

(; Theorem: |- ((= ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) Data.Bool.F))) ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_2305 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false)) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2)))) (thm_2300 p_1 q_2) (thm_2304 p_1 q_2).

(; Theorem: |- ((= \lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q)))) \lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2306 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1))) (__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1))).

(; Theorem: |- ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) Data.Bool.F)) ;)

(; dict ;)

def thm_2307 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) (__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1 hol.false (thm_2306 q_2) (thm_662 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2308 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_1)) (hol.or (hol.not __530_3) (hol.not q_1))) p_2) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_1)) (hol.or (hol.not __530_3) (hol.not q_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) (thm_2305 p_2 q_1) (thm_2307 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2309 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (thm_2308 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) q)) Data.Bool.F) ;)

(; dict ;)

def thm_2310 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false q_1) hol.false) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_882 t_1) q_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_2311 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.not hol.false)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.and hol.false q_1) hol.false thm_509 (thm_2310 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) Data.Bool.T) ;)

(; dict ;)

def thm_2312 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.not (hol.and hol.false q_1)) (hol.not hol.false) hol.true (thm_2311 q_1) thm_17.

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q)))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_2313 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.and hol.false q_1))) (hol.eq hol.bool hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.and hol.false q_1)) hol.true thm_561 (thm_2312 q_1).

(; Theorem: |- ((= (Data.Bool.~ q)) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_2314 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.not q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))) ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2315 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) (hol.not q_1)) (hol.or hol.true (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.false)) (hol.or hol.true) (hol.not q_1) (hol.not q_1) thm_1222 (thm_2314 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))) Data.Bool.T) ;)

(; dict ;)

def thm_2316 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) (hol.not q_1)) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.false) (hol.not q_1)) (hol.or hol.true (hol.not q_1)) hol.true (thm_2315 q_1) (thm_1354 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_2317 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (hol.eq hol.bool hol.true hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1))) (hol.eq hol.bool hol.true) (hol.or (hol.not hol.false) (hol.not q_1)) hol.true (thm_2313 q_1) (thm_2316 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) Data.Bool.T) ;)

(; dict ;)

def thm_2318 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (hol.eq hol.bool hol.true hol.true) hol.true (thm_2317 q_1) thm_836.

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2319 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) hol.true (thm_2318 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2320 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (thm_2319 q_1) thm_4.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2321 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_2309 p_2 q_1 hyp_1) (thm_2320 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2322 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_2321 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p))) (= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p))) ;)

(; dict ;)

def thm_2323 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)).

(; Theorem: |- ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2324 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1))) hol.true) (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) Data.Bool.T))) ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_2325 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true)) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (thm_2323 p_1 q_2) (thm_2324 q_2).

(; Theorem: |- ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2326 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p))) (= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_2327 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) thm_561 (thm_2326 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2328 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))).

(; Theorem: |- ((= ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))))) ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_2329 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (thm_2327 p_1 q_2) (thm_2328 q_2).

(; Theorem: |- ((= ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) Data.Bool.T))) ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_2330 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true)) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2)))) (thm_2325 p_1 q_2) (thm_2329 p_1 q_2).

(; Theorem: |- ((= \lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q)))) \lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2331 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1))) (__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1))).

(; Theorem: |- ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) Data.Bool.T)) ;)

(; dict ;)

def thm_2332 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) (__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1 hol.true (thm_2331 q_2) (thm_716 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2333 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_1)) (hol.or (hol.not __528_3) (hol.not q_1))) p_2) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_1)) (hol.or (hol.not __528_3) (hol.not q_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) (thm_2330 p_2 q_1) (thm_2332 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2334 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (thm_2333 q_2 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_2335 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.and hol.true q_1) q_1 thm_509 (thm_1360 q_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q)))) (= (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2336 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.and hol.true q_1))) (hol.eq hol.bool (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.and hol.true q_1)) (hol.not q_1) thm_561 (thm_2335 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))) ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2337 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) (hol.not q_1)) (hol.or hol.false (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.true)) (hol.or hol.false) (hol.not q_1) (hol.not q_1) thm_1246 (thm_2314 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_2338 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) (hol.not q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.true) (hol.not q_1)) (hol.or hol.false (hol.not q_1)) (hol.not q_1) (thm_2337 q_1) (thm_1325 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ((= (Data.Bool.~ q)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2339 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1))) (hol.eq hol.bool (hol.not q_1)) (hol.or (hol.not hol.true) (hol.not q_1)) (hol.not q_1) (thm_2336 q_1) (thm_2338 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) Data.Bool.T) ;)

(; dict ;)

def thm_2340 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true (thm_2339 q_1) (thm_1334 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2341 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) hol.true (thm_2340 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2342 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (thm_2341 q_1) thm_4.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2343 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_2334 p_2 q_1 hyp_1) (thm_2342 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_2344 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_2343 q_1 p_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2345 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2346 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_726 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_2345 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2347 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_2344 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => thm_2346 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2348 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_2322 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => thm_2347 q_1 p_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)))))) (Data.Bool.~ (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2349 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.or (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_2297 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_2296 q_1 p_2) (thm_2348 q_1 p_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))) (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))) x)))) ;)

(; dict ;)

def thm_2350 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_2 : hol.term hol.ind => hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (P_1 : hol.term (hol.arr hol.ind hol.bool) => thm_2229 P_1) (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))).

(; Theorem: |- ((= (\lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))) x1)) (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2351 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_1) (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))) x1))) (Data.Bool.~ (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2352 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_1)) (hol.not (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_1) (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3))) thm_509 (thm_2351 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)) x)))) ;)

(; dict ;)

def thm_2353 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.eq hol.ind x1_1 x2_4)) x_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => (P_1 : hol.term (hol.arr hol.ind hol.bool) => thm_2229 P_1) (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)).

(; Theorem: |- ((= (\lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)) x2)) ((= ((= (f x1)) (f x2))) ((= x1) x2))) ;)

(; dict ;)

def thm_2354 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.eq hol.ind x1_2 x2_4)) x2_1) (hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.eq hol.ind x1_2 x2_4)) x2_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)) x2))) (Data.Bool.~ ((= ((= (f x1)) (f x2))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2355 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.eq hol.ind x1_2 x2_4)) x2_1)) (hol.not (hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.eq hol.ind x1_2 x2_4)) x2_1) (hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1)) thm_509 (thm_2354 x2_1 x1_2 f_3).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_2356 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_2357 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_2356 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p))) (= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p))) ;)

(; dict ;)

def thm_2358 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)).

(; Theorem: |- ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) Data.Bool.F)) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_2359 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1))) hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) Data.Bool.F))) ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_2360 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false)) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (thm_2358 p_1 q_2) (thm_2359 q_2).

(; Theorem: |- ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_2361 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p))) (= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))))) ;)

(; dict ;)

def thm_2362 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) thm_561 (thm_2361 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_2363 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))).

(; Theorem: |- ((= ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))))) ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_2364 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (thm_2362 p_1 q_2) (thm_2363 q_2).

(; Theorem: |- ((= ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) Data.Bool.F))) ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_2365 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false)) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2)))) (thm_2360 p_1 q_2) (thm_2364 p_1 q_2).

(; Theorem: |- ((= \lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q)))) \lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q)))) ;)

(; dict ;)

def thm_2366 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1))) (__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1))).

(; Theorem: |- ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) Data.Bool.F)) ;)

(; dict ;)

def thm_2367 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) (__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1 hol.false (thm_2366 q_2) (thm_662 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_2368 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_1)) (hol.or (hol.and __550_3 (hol.not q_1)) (hol.and (hol.not __550_3) q_1))) p_2) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_1)) (hol.or (hol.and __550_3 (hol.not q_1)) (hol.and (hol.not __550_3) q_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) (thm_2365 p_2 q_1) (thm_2367 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_2369 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (thm_2368 q_2 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.F) q))) (Data.Bool.~ (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2370 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.not (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.bool hol.false q_1) (hol.not q_1) thm_509 (thm_1323 q_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ q))) q) ;)

(; dict ;)

def thm_2371 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not q_1)) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_599 t_1) q_1.

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.F) q))) q) ;)

(; dict ;)

def thm_2372 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.not (hol.not q_1)) q_1 (thm_2370 q_1) (thm_2371 q_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((= Data.Bool.F) q)))) (= q)) ;)

(; dict ;)

def thm_2373 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1))) (hol.eq hol.bool q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.eq hol.bool hol.false q_1)) q_1 thm_561 (thm_2372 q_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) Data.Bool.F) ;)

(; dict ;)

def thm_2374 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.not q_1)) hol.false) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_882 t_1) (hol.not q_1).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) (Data.Bool.\/ Data.Bool.F)) ;)

(; dict ;)

def thm_2375 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.and hol.false (hol.not q_1))) (hol.or hol.false)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.and hol.false (hol.not q_1)) hol.false thm_1019 (thm_2374 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)) ((Data.Bool./\ Data.Bool.T) q)) ;)

(; dict ;)

def thm_2376 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.false) q_1) (hol.and hol.true q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.not hol.false)) (hol.and hol.true) q_1 q_1 thm_864 (thm_102 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)) q) ;)

(; dict ;)

def thm_2377 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.false) q_1) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.not hol.false) q_1) (hol.and hol.true q_1) q_1 (thm_2376 q_1) (thm_1360 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))) ((Data.Bool.\/ Data.Bool.F) q)) ;)

(; dict ;)

def thm_2378 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)) (hol.or hol.false q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.and hol.false (hol.not q_1))) (hol.or hol.false) (hol.and (hol.not hol.false) q_1) q_1 (thm_2375 q_1) (thm_2377 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))) q) ;)

(; dict ;)

def thm_2379 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)) (hol.or hol.false q_1) q_1 (thm_2378 q_1) (thm_1357 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ((= q) q)) ;)

(; dict ;)

def thm_2380 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (hol.eq hol.bool q_1 q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1))) (hol.eq hol.bool q_1) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)) q_1 (thm_2373 q_1) (thm_2379 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) Data.Bool.T) ;)

(; dict ;)

def thm_2381 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (hol.eq hol.bool q_1 q_1) hol.true (thm_2380 q_1) (thm_1363 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_2382 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) hol.true (thm_2381 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_2383 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (thm_2382 q_1) thm_4.

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_2384 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_2369 p_2 q_1 hyp_1) (thm_2383 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_2385 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_2384 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p))) (= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p))) ;)

(; dict ;)

def thm_2386 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)).

(; Theorem: |- ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) Data.Bool.T)) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_2387 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1))) hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) Data.Bool.T))) ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_2388 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true)) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (thm_2386 p_1 q_2) (thm_2387 q_2).

(; Theorem: |- ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_2389 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p))) (= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))))) ;)

(; dict ;)

def thm_2390 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) thm_561 (thm_2389 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_2391 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))).

(; Theorem: |- ((= ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))))) ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_2392 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (thm_2390 p_1 q_2) (thm_2391 q_2).

(; Theorem: |- ((= ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) Data.Bool.T))) ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_2393 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true)) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2)))) (thm_2388 p_1 q_2) (thm_2392 p_1 q_2).

(; Theorem: |- ((= \lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q)))) \lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q)))) ;)

(; dict ;)

def thm_2394 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1))) (__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1))).

(; Theorem: |- ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) Data.Bool.T)) ;)

(; dict ;)

def thm_2395 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) (__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1 hol.true (thm_2394 q_2) (thm_716 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_2396 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_1)) (hol.or (hol.and __548_3 (hol.not q_1)) (hol.and (hol.not __548_3) q_1))) p_2) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_1)) (hol.or (hol.and __548_3 (hol.not q_1)) (hol.and (hol.not __548_3) q_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) (thm_2393 p_2 q_1) (thm_2395 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_2397 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (thm_2396 q_2 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.T) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_2398 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.bool hol.true q_1) q_1 thm_509 (thm_1352 q_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((= Data.Bool.T) q)))) (= (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2399 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1))) (hol.eq hol.bool (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.eq hol.bool hol.true q_1)) (hol.not q_1) thm_561 (thm_2398 q_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_2400 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.not q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_872 t_1) (hol.not q_1).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) (Data.Bool.\/ (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2401 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.and hol.true (hol.not q_1))) (hol.or (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.and hol.true (hol.not q_1)) (hol.not q_1) thm_1019 (thm_2400 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)) ((Data.Bool./\ Data.Bool.F) q)) ;)

(; dict ;)

def thm_2402 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.true) q_1) (hol.and hol.false q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.not hol.true)) (hol.and hol.false) q_1 q_1 thm_924 (thm_102 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)) Data.Bool.F) ;)

(; dict ;)

def thm_2403 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.true) q_1) hol.false) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.not hol.true) q_1) (hol.and hol.false q_1) hol.false (thm_2402 q_1) (thm_2310 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))) ((Data.Bool.\/ (Data.Bool.~ q)) Data.Bool.F)) ;)

(; dict ;)

def thm_2404 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)) (hol.or (hol.not q_1) hol.false)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.and hol.true (hol.not q_1))) (hol.or (hol.not q_1)) (hol.and (hol.not hol.true) q_1) hol.false (thm_2401 q_1) (thm_2403 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ q)) Data.Bool.F)) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_2405 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not q_1) hol.false) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_790 t_1) (hol.not q_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_2406 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)) (hol.or (hol.not q_1) hol.false) (hol.not q_1) (thm_2404 q_1) (thm_2405 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ((= (Data.Bool.~ q)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_2407 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1))) (hol.eq hol.bool (hol.not q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)) (hol.not q_1) (thm_2399 q_1) (thm_2406 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) Data.Bool.T) ;)

(; dict ;)

def thm_2408 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true (thm_2407 q_1) (thm_1334 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_2409 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) hol.true (thm_2408 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_2410 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (thm_2409 q_1) thm_4.

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_2411 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_2397 p_2 q_1 hyp_1) (thm_2410 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_2412 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_2411 q_1 p_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_2413 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_388 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_2414 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_726 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_2413 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_2415 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_2412 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => thm_2414 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_2416 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_2385 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => thm_2415 q_1 p_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= ((= (f x1)) (f x2))) ((= x1) x2)))) ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2417 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_2357 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_2356 q_1 p_2) (thm_2416 q_1 p_2))) (hol.eq hol.ind x1_2 x2_1) (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)).

(; Theorem: |- ((= (Data.Bool.~ ((= ((= (f x1)) (f x2))) ((= x1) x2)))) ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2418 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (thm_2417 x2_1 x1_2 f_3) (thm_2074 x2_1 x1_2 f_3).

(; Theorem: |- ((= (Data.Bool.~ (\lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)) x2))) ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2419 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.eq hol.ind x1_2 x2_4)) x2_1)) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.eq hol.ind x1_2 x2_4)) x2_1)) (hol.not (hol.eq hol.bool (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.eq hol.ind x1_2 x2_1))) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (thm_2355 x2_1 x1_2 f_3) (thm_2418 x2_1 x1_2 f_3).

(; Theorem: |- ((= \lambda x2. (Data.Bool.~ (\lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)) x2))) \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2420 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.eq hol.ind x1_1 x2_4)) x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.eq hol.ind x1_1 x2_4)) x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (x2_3 : hol.term hol.ind => thm_2419 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. (Data.Bool.~ (\lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)) x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2421 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x2_3 : hol.term hol.ind => hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.eq hol.ind x1_1 x2_4)) x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) thm_134 (thm_2420 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2422 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.not ((x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.eq hol.ind x1_1 x2_4)) x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (thm_2353 x1_1 f_2) (thm_2421 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ (\lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))) x1))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2423 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_1)) (hol.not (hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (thm_2352 x1_1 f_2) (thm_2422 x1_1 f_2).

(; Theorem: |- ((= \lambda x1. (Data.Bool.~ (\lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))) x1))) \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2424 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_2)) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_2)) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => thm_2423 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. (Data.Bool.~ (\lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))) x1)))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2425 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x1_2)) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) thm_134 (thm_2424 f_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2426 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_2 : hol.term hol.ind => hol.not ((x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (thm_2350 f_1) (thm_2425 f_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))))) (Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) ;)

(; dict ;)

def thm_2427 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) thm_1019 (thm_2426 f_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) (Data.Bool.! \lambda x. (Data.Bool.~ (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) x)))) ;)

(; dict ;)

def thm_2428 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) x_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (P_1 : hol.term (hol.arr hol.ind hol.bool) => thm_2233 P_1) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))).

(; Theorem: |- ((= (Data.Bool.~ (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z))) (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) ;)

(; dict ;)

def thm_2429 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))) z_1)) (hol.not (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1))))) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))) z_1) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1))) thm_509 (thm_2027 z_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.~ ((= (f x)) z)) x)))) ;)

(; dict ;)

def thm_2430 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_1)) x_3)))) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => (P_1 : hol.term (hol.arr hol.ind hol.bool) => thm_2229 P_1) (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1)).

(; Theorem: |- ((= (\lambda x. (Data.Bool.~ ((= (f x)) z)) x)) (Data.Bool.~ ((= (f x)) z))) ;)

(; dict ;)

def thm_2431 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_4) z_2)) x_1) (hol.not (hol.eq hol.ind (f_3 x_1) z_2))) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_4) z_2)) x_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda x. (Data.Bool.~ ((= (f x)) z)) x))) (Data.Bool.~ (Data.Bool.~ ((= (f x)) z)))) ;)

(; dict ;)

def thm_2432 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_4) z_2)) x_1)) (hol.not (hol.not (hol.eq hol.ind (f_3 x_1) z_2)))) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_4) z_2)) x_1) (hol.not (hol.eq hol.ind (f_3 x_1) z_2)) thm_509 (thm_2431 x_1 z_2 f_3).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= (f x)) z)))) ((= (f x)) z)) ;)

(; dict ;)

def thm_2433 : z_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq hol.ind (f_3 x_2) z_1))) (hol.eq hol.ind (f_3 x_2) z_1)) :=
  z_1 : hol.term hol.ind => x_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => (p_1 : hol.term hol.bool => thm_600 p_1) (hol.eq hol.ind (f_3 x_2) z_1).

(; Theorem: |- ((= ((= (f x)) z)) ((= (f x)) z)) ;)

(; dict ;)

def thm_2434 : z_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (f_3 x_2) z_1) (hol.eq hol.ind (f_3 x_2) z_1)) :=
  z_1 : hol.term hol.ind => x_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.eq hol.ind (f_3 x_2) z_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((= (f x)) z)))) ((= (f x)) z)) ;)

(; dict ;)

def thm_2435 : z_1 : hol.term hol.ind -> x_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.not (hol.eq hol.ind (f_3 x_2) z_1))) (hol.eq hol.ind (f_3 x_2) z_1)) :=
  z_1 : hol.term hol.ind => x_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.not (hol.eq hol.ind (f_3 x_2) z_1))) (hol.eq hol.ind (f_3 x_2) z_1) (hol.eq hol.ind (f_3 x_2) z_1) (thm_2433 z_1 x_2 f_3) (thm_2434 z_1 x_2 f_3).

(; Theorem: |- ((= (Data.Bool.~ (\lambda x. (Data.Bool.~ ((= (f x)) z)) x))) ((= (f x)) z)) ;)

(; dict ;)

def thm_2436 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_4) z_2)) x_1)) (hol.eq hol.ind (f_3 x_1) z_2)) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_4) z_2)) x_1)) (hol.not (hol.not (hol.eq hol.ind (f_3 x_1) z_2))) (hol.eq hol.ind (f_3 x_1) z_2) (thm_2432 x_1 z_2 f_3) (thm_2435 z_2 x_1 f_3).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.~ ((= (f x)) z)) x))) \lambda x. ((= (f x)) z)) ;)

(; dict ;)

def thm_2437 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_1)) x_3)) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1)) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_1)) x_3)) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1) (x_3 : hol.term hol.ind => thm_2436 x_3 z_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.~ ((= (f x)) z)) x)))) (Data.Bool.? \lambda x. ((= (f x)) z))) ;)

(; dict ;)

def thm_2438 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_1)) x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1))) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_1)) x_3)) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1) thm_134 (thm_2437 z_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) (Data.Bool.? \lambda x. ((= (f x)) z))) ;)

(; dict ;)

def thm_2439 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1))) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.not ((x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_1)) x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1)) (thm_2430 z_1 f_2) (thm_2438 z_1 f_2).

(; Theorem: |- ((= (Data.Bool.~ (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z))) (Data.Bool.? \lambda x. ((= (f x)) z))) ;)

(; dict ;)

def thm_2440 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))) z_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1))) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))) z_1)) (hol.not (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_3) z_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1)) (thm_2429 z_1 f_2) (thm_2439 z_1 f_2).

(; Theorem: |- ((= \lambda z. (Data.Bool.~ (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z))) \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))) ;)

(; dict ;)

def thm_2441 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (z_2 : hol.term hol.ind => hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)) (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (z_2 : hol.term hol.ind => hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)) (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)) (z_2 : hol.term hol.ind => thm_2440 z_2 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda z. (Data.Bool.~ (\lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))) z)))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z)))) ;)

(; dict ;)

def thm_2442 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (z_2 : hol.term hol.ind => hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) z_2)) (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)) thm_72 (thm_2441 f_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z)))) ;)

(; dict ;)

def thm_2443 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not ((z_3 : hol.term hol.ind => hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_4) z_3))) x_2))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (thm_2428 f_1) (thm_2442 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2)))))) (Data.Bool.~ (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))))) ;)

(; dict ;)

def thm_2444 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (thm_2427 f_1) (thm_2443 f_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))))) ;)

(; dict ;)

def thm_2445 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.or (hol.not (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3))))) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (thm_2349 f_1) (thm_2444 f_1).

(; Theorem: |- ((= (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ;)

(; dict ;)

def thm_2446 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) x2_1) (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) x2_1.

(; Theorem: |- ((= (Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2))) (Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) ;)

(; dict ;)

def thm_2447 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) x2_1)) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) x2_1) (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) thm_1019 (thm_2446 x2_1 x1_2 f_3).

(; Theorem: |- ((= (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2448 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4)) x2_1) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4)) x2_1.

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2))) ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2449 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) x2_1) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4)) x2_1)) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) x2_1)) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1)))) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4)) x2_1) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)) (thm_2447 x2_1 x1_2 f_3) (thm_2448 x2_1 x1_2 f_3).

(; Theorem: |- ((= \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2))) \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2450 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (x2_3 : hol.term hol.ind => thm_2449 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2451 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) thm_134 (thm_2450 x1_1 f_2).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2))))) (= (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2452 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) thm_561 (thm_2451 x1_1 f_2).

(; Theorem: |- ((= \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ;)

(; dict ;)

def thm_2453 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (x2_3 : hol.term hol.ind => thm_2446 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2))) (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) ;)

(; dict ;)

def thm_2454 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) thm_134 (thm_2453 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)))) (Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) ;)

(; dict ;)

def thm_2455 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) thm_1019 (thm_2454 x1_1 f_2).

(; Theorem: |- ((= \lambda x2. (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)) \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) ;)

(; dict ;)

def thm_2456 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => thm_2448 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2457 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) thm_134 (thm_2456 x1_1 f_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2))) (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2458 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (thm_2455 x1_1 f_2) (thm_2457 x1_1 f_2).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2))) (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2))))) ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2459 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (thm_2452 x1_1 f_2) (thm_2458 x1_1 f_2).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ;)

(; dict ;)

def thm_2460 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2)))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2))))) ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2)))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2))))) ;)

(; dict ;)

def thm_2461 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2)))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2))))) ;)

(; dict ;)

def thm_2462 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3)))) (thm_2460 A q_1 p_2) (thm_2461 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ;)

(; dict ;)

def thm_2463 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) (q_2 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_54 A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) ;)

(; dict ;)

def thm_2464 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_2463 A p_2 q_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2)))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2)))) ;)

(; dict ;)

def thm_2465 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3)))) (thm_2462 A q_1 p_2) (thm_2464 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2)))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2)))) ;)

(; dict ;)

def thm_2466 : q_1 : hol.term (hol.arr hol.ind hol.bool) -> p_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (p_2 x2_3) (q_1 x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => q_1 x2_3)))) :=
  q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_2465 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2))) (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)))) ;)

(; dict ;)

def thm_2467 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => thm_2466 q_1 p_2) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2468 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) (thm_2459 x1_1 f_2) (thm_2467 x1_1 f_2).

(; Theorem: |- ((= \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2469 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => thm_2468 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2470 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) thm_134 (thm_2469 f_1).

(; Theorem: |- ((= (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) ;)

(; dict ;)

def thm_2471 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_1.

(; Theorem: |- ((= (Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1))) (Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) ;)

(; dict ;)

def thm_2472 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) thm_1019 (thm_2471 x1_1 f_2).

(; Theorem: |- ((= (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2473 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_1.

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2474 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_1) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))))) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (thm_2472 x1_1 f_2) (thm_2473 x1_1 f_2).

(; Theorem: |- ((= \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1))) \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2475 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => thm_2474 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2476 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) thm_134 (thm_2475 f_1).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1))))) (= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) ;)

(; dict ;)

def thm_2477 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) thm_561 (thm_2476 f_1).

(; Theorem: |- ((= \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) ;)

(; dict ;)

def thm_2478 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => thm_2471 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) ;)

(; dict ;)

def thm_2479 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) thm_134 (thm_2478 f_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)))) (Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))))) ;)

(; dict ;)

def thm_2480 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) thm_1019 (thm_2479 f_1).

(; Theorem: |- ((= \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)) \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2481 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => thm_2473 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2482 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) thm_134 (thm_2481 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1))) (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2483 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (thm_2480 f_1) (thm_2482 f_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1))) (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1))))) ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) ;)

(; dict ;)

def thm_2484 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (thm_2477 f_1) (thm_2483 f_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1)))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1))))) ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1)))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1))))) ;)

(; dict ;)

def thm_2485 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1)))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1))))) ;)

(; dict ;)

def thm_2486 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3)))) (thm_2460 A q_1 p_2) (thm_2485 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1)))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1)))) ;)

(; dict ;)

def thm_2487 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3)))) (thm_2486 A q_1 p_2) (thm_2464 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1)))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1)))) ;)

(; dict ;)

def thm_2488 : q_1 : hol.term (hol.arr hol.ind hol.bool) -> p_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_3 : hol.term hol.ind => hol.or (p_2 x1_3) (q_1 x1_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_3 : hol.term hol.ind => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_3 : hol.term hol.ind => q_1 x1_3)))) :=
  q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_2487 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1))) (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)))) ;)

(; dict ;)

def thm_2489 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => thm_2488 q_1 p_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2490 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (thm_2484 f_1) (thm_2489 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2491 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (thm_2470 f_1) (thm_2490 f_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) (Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) ;)

(; dict ;)

def thm_2492 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) thm_1019 (thm_2491 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z)))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z)))) ;)

(; dict ;)

def thm_2493 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))))) ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))))) ;)

(; dict ;)

def thm_2494 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (thm_2492 f_1) (thm_2493 f_1).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1))) (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1))))) (= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) ;)

(; dict ;)

def thm_2495 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) thm_561 (thm_2483 f_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1))) (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) ;)

(; dict ;)

def thm_2496 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (thm_2495 f_1) (thm_2476 f_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ;)

(; dict ;)

def thm_2497 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1)))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1)))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1))))) ;)

(; dict ;)

def thm_2498 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1)))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1))))) ;)

(; dict ;)

def thm_2499 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3)))) (thm_2497 A q_1 p_2) (thm_2498 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ;)

(; dict ;)

def thm_2500 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) (q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_55 A p_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ;)

(; dict ;)

def thm_2501 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_2500 A p_2 q_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1)))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1)))) ;)

(; dict ;)

def thm_2502 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => q_1 x1_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) (q_1 x1_3)))) (thm_2499 A q_1 p_2) (thm_2501 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) (Data.Bool.? \lambda x1. (q x1)))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) (q x1)))) ;)

(; dict ;)

def thm_2503 : q_1 : hol.term (hol.arr hol.ind hol.bool) -> p_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_3 : hol.term hol.ind => p_2 x1_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_3 : hol.term hol.ind => q_1 x1_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_3 : hol.term hol.ind => hol.or (p_2 x1_3) (q_1 x1_3)))) :=
  q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_2502 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1))) (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) x1)) (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x1)))) ;)

(; dict ;)

def thm_2504 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => thm_2503 q_1 p_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2505 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4)))) x1_2) ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4))) x1_2)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (thm_2496 f_1) (thm_2504 f_1).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2))) (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2))))) (= ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2506 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) thm_561 (thm_2458 x1_1 f_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2))) (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2507 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (thm_2506 x1_1 f_2) (thm_2451 x1_1 f_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2))))) ;)

(; dict ;)

def thm_2508 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2))))) ;)

(; dict ;)

def thm_2509 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3)))) (thm_2497 A q_1 p_2) (thm_2508 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2)))) ;)

(; dict ;)

def thm_2510 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => q_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) (q_1 x2_3)))) (thm_2509 A q_1 p_2) (thm_2501 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) (Data.Bool.? \lambda x2. (q x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) (q x2)))) ;)

(; dict ;)

def thm_2511 : q_1 : hol.term (hol.arr hol.ind hol.bool) -> p_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => p_2 x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => q_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (p_2 x2_3) (q_1 x2_3)))) :=
  q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_2510 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2))) (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))) x2)) (\lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)) x2)))) ;)

(; dict ;)

def thm_2512 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term (hol.arr hol.ind hol.bool) => p_2 : hol.term (hol.arr hol.ind hol.bool) => thm_2511 q_1 p_2) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2513 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) x2_3) ((x2_4 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4)) x2_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) (thm_2507 x1_1 f_2) (thm_2512 x1_1 f_2).

(; Theorem: |- ((= \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2514 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => thm_2513 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2))))) (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2515 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) thm_134 (thm_2514 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2516 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (thm_2505 f_1) (thm_2515 f_1).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) (Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) ;)

(; dict ;)

def thm_2517 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) thm_1019 (thm_2516 f_1).

(; Theorem: |- ((= (\lambda z. \lambda x. ((= (f x)) z) z)) \lambda x. ((= (f x)) z)) ;)

(; dict ;)

def thm_2518 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) ((z_3 : hol.term hol.ind => x_4 : hol.term hol.ind => hol.eq hol.ind (f_2 x_4) z_3) z_1) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1)) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind (hol.arr hol.ind hol.bool) (z_3 : hol.term hol.ind => x_4 : hol.term hol.ind => hol.eq hol.ind (f_2 x_4) z_3) z_1.

(; Theorem: |- ((= ((\lambda z. \lambda x. ((= (f x)) z) z) x)) (\lambda x. ((= (f x)) z) x)) ;)

(; dict ;)

def thm_2519 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_3 x_5) z_4) z_2 x_1) ((x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) x_1)) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.bool ((z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_3 x_5) z_4) z_2) (x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) x_1 x_1 (thm_2518 z_2 f_3) (thm_1980 x_1).

(; Theorem: |- ((= (\lambda x. ((= (f x)) z) x)) ((= (f x)) z)) ;)

(; dict ;)

def thm_2520 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) x_1) (hol.eq hol.ind (f_3 x_1) z_2)) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) x_1.

(; Theorem: |- ((= ((\lambda z. \lambda x. ((= (f x)) z) z) x)) ((= (f x)) z)) ;)

(; dict ;)

def thm_2521 : x_1 : hol.term hol.ind -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_3 x_5) z_4) z_2 x_1) (hol.eq hol.ind (f_3 x_1) z_2)) :=
  x_1 : hol.term hol.ind => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool ((z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_3 x_5) z_4) z_2 x_1) ((x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) x_1) (hol.eq hol.ind (f_3 x_1) z_2) (thm_2519 x_1 z_2 f_3) (thm_2520 x_1 z_2 f_3).

(; Theorem: |- ((= \lambda x. ((\lambda z. \lambda x. ((= (f x)) z) z) x)) \lambda x. ((= (f x)) z)) ;)

(; dict ;)

def thm_2522 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_2 x_5) z_4) z_1 x_3) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1)) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_2 x_5) z_4) z_1 x_3) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1) (x_3 : hol.term hol.ind => thm_2521 x_3 z_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((\lambda z. \lambda x. ((= (f x)) z) z) x))) (Data.Bool.? \lambda x. ((= (f x)) z))) ;)

(; dict ;)

def thm_2523 : z_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_2 x_5) z_4) z_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1))) :=
  z_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_2 x_5) z_4) z_1 x_3) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_2 x_3) z_1) thm_134 (thm_2522 z_1 f_2).

(; Theorem: |- ((= \lambda z. (Data.Bool.? \lambda x. ((\lambda z. \lambda x. ((= (f x)) z) z) x))) \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))) ;)

(; dict ;)

def thm_2524 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3)) (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3)) (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)) (z_2 : hol.term hol.ind => thm_2523 z_2 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((\lambda z. \lambda x. ((= (f x)) z) z) x)))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z)))) ;)

(; dict ;)

def thm_2525 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3)) (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)) thm_72 (thm_2524 f_1).

(; Theorem: |- ((= (= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((\lambda z. \lambda x. ((= (f x)) z) z) x))))) (= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))))) ;)

(; dict ;)

def thm_2526 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3)))) (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) thm_561 (thm_2525 f_1).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_2527 : hol.proof (hol.eq (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool))) :=
  hol.REFL (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool)).

(; Theorem: |- ((= ((\lambda z. \lambda x. ((= (f x)) z) z) (f' z))) (\lambda x. ((= (f x)) z) (f' z))) ;)

(; dict ;)

def thm_2528 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_3 x_5) z_4) z_2 (f_27_1 z_2)) ((x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) (f_27_1 z_2))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.ind hol.bool ((z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_3 x_5) z_4) z_2) (x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) (f_27_1 z_2) (f_27_1 z_2) (thm_2518 z_2 f_3) (thm_2077 z_2 f_27_1).

(; Theorem: |- ((= (\lambda x. ((= (f x)) z) (f' z))) ((= (f (f' z))) z)) ;)

(; dict ;)

def thm_2529 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) (f_27_1 z_2)) (hol.eq hol.ind (f_3 (f_27_1 z_2)) z_2)) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) (f_27_1 z_2).

(; Theorem: |- ((= ((\lambda z. \lambda x. ((= (f x)) z) z) (f' z))) ((= (f (f' z))) z)) ;)

(; dict ;)

def thm_2530 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> z_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_3 x_5) z_4) z_2 (f_27_1 z_2)) (hol.eq hol.ind (f_3 (f_27_1 z_2)) z_2)) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => z_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool ((z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_3 x_5) z_4) z_2 (f_27_1 z_2)) ((x_4 : hol.term hol.ind => hol.eq hol.ind (f_3 x_4) z_2) (f_27_1 z_2)) (hol.eq hol.ind (f_3 (f_27_1 z_2)) z_2) (thm_2528 f_27_1 z_2 f_3) (thm_2529 f_27_1 z_2 f_3).

(; Theorem: |- ((= \lambda z. ((\lambda z. \lambda x. ((= (f x)) z) z) (f' z))) \lambda z. ((= (f (f' z))) z)) ;)

(; dict ;)

def thm_2531 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_2 x_5) z_4) z_3 (f_27_1 z_3)) (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3)) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_2 x_5) z_4) z_3 (f_27_1 z_3)) (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3) (z_3 : hol.term hol.ind => thm_2530 f_27_1 z_3 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((\lambda z. \lambda x. ((= (f x)) z) z) (f' z)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) ;)

(; dict ;)

def thm_2532 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_2 x_5) z_4) z_3 (f_27_1 z_3))) (hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_2 x_5) z_4) z_3 (f_27_1 z_3)) (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3) thm_72 (thm_2531 f_27_1 f_2).

(; Theorem: |- ((= \lambda f'. (Data.Bool.! \lambda z. ((\lambda z. \lambda x. ((= (f x)) z) z) (f' z)))) \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))) ;)

(; dict ;)

def thm_2533 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.ind) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_3 (f_27_2 z_3))) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM (hol.arr hol.ind hol.ind) hol.bool (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_3 (f_27_2 z_3))) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => thm_2532 f_27_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((\lambda z. \lambda x. ((= (f x)) z) z) (f' z))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2534 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_3 (f_27_2 z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool)) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_3 (f_27_2 z_3))) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)) thm_2527 (thm_2533 f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((\lambda z. \lambda x. ((= (f x)) z) z) x)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((\lambda z. \lambda x. ((= (f x)) z) z) (f' z)))))) ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2535 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_3 (f_27_2 z_3))))) (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3)))) (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_3 (f_27_2 z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))) (thm_2526 f_1) (thm_2534 f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x)))))) ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x)))))) ;)

(; dict ;)

def thm_2536 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((r z) x)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda z. ((r z) (f z)))))) ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((r z) x)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda z. ((r z) (f z)))))) ;)

(; dict ;)

def thm_2537 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => r_1 z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (z_3 : hol.term A => r_1 z_3 (f_2 z_3))))) (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => r_1 z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (z_3 : hol.term A => r_1 z_3 (f_2 z_3)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => r_1 z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (z_3 : hol.term A => r_1 z_3 (f_2 z_3))))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x)))))) ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((r z) x)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda z. ((r z) (f z)))))) ;)

(; dict ;)

def thm_2538 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => r_1 z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (z_3 : hol.term A => r_1 z_3 (f_2 z_3)))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => r_1 z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (z_3 : hol.term A => r_1 z_3 (f_2 z_3))))) (thm_2536 B A r_1) (thm_2537 B A r_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) ;)

(; dict ;)

def thm_2539 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_56 B A r_1.

(; Theorem: |- ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((r z) x)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda z. ((r z) (f z))))) ;)

(; dict ;)

def thm_2540 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => r_1 z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (z_3 : hol.term A => r_1 z_3 (f_2 z_3))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (hol.eq hol.bool (hol.forall A (z_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => r_1 z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (z_3 : hol.term A => r_1 z_3 (f_2 z_3))))) (thm_2538 B A r_1) (thm_2539 B A r_1).

(; Theorem: |- ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((r z) x)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda z. ((r z) (f z))))) ;)

(; dict ;)

def thm_2541 : r_1 : hol.term (hol.arr hol.ind (hol.arr hol.ind hol.bool)) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => r_1 z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => r_1 z_3 (f_2 z_3))))) :=
  r_1 : hol.term (hol.arr hol.ind (hol.arr hol.ind hol.bool)) => (B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_2540 B A r_1) hol.ind hol.ind r_1.

(; Theorem: |- ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((\lambda z. \lambda x. ((= (f x)) z) z) x)))) (Data.Bool.? \lambda f_1. (Data.Bool.! \lambda z. ((\lambda z. \lambda x. ((= (f x)) z) z) (f_1 z))))) ;)

(; dict ;)

def thm_2542 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f__1_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_3 (f__1_2 z_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (r_1 : hol.term (hol.arr hol.ind (hol.arr hol.ind hol.bool)) => thm_2541 r_1) (z_2 : hol.term hol.ind => x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2).

(; Theorem: |- ((= (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2543 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f__1_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => (z_4 : hol.term hol.ind => x_5 : hol.term hol.ind => hol.eq hol.ind (f_1 x_5) z_4) z_3 (f__1_2 z_3))))) (hol.eq hol.bool (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (thm_2535 f_1) (thm_2542 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2544 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))) (thm_2517 f_1) (thm_2543 f_1).

(; Theorem: |- ((= (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1)) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2545 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_1.

(; Theorem: |- ((= \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1)) \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2546 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (x1_2 : hol.term hol.ind => thm_2545 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2547 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) thm_134 (thm_2546 f_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1)))) (Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))))) ;)

(; dict ;)

def thm_2548 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) thm_1019 (thm_2547 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2549 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2550 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))) (thm_2548 f_1) (thm_2549 f_1).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) (= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2551 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) thm_561 (thm_2550 f_1).

(; Theorem: |- ((= (Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1))) (Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2552 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) thm_1019 (thm_2545 x1_1 f_2).

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2553 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_3) (f_2 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))) (thm_2552 x1_1 f_2) (thm_2549 f_2).

(; Theorem: |- ((= \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2554 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))) (x1_2 : hol.term hol.ind => thm_2553 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2555 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))) thm_134 (thm_2554 f_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ;)

(; dict ;)

def thm_2556 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4))))) (thm_2551 f_1) (thm_2555 f_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) q)))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) q)))) ;)

(; dict ;)

def thm_2557 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1)))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) q)) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) q)))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) q)) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) q)))) ;)

(; dict ;)

def thm_2558 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) q_1)))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) q_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) q)))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) q)) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) q)))) ;)

(; dict ;)

def thm_2559 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) q_1)))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) q_1))) (thm_2557 A q_1 p_2) (thm_2558 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) q)))) ;)

(; dict ;)

def thm_2560 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) q_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) q_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_57 A p_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) q))) ;)

(; dict ;)

def thm_2561 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_2560 A p_2 q_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) q)) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) q))) ;)

(; dict ;)

def thm_2562 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) q_1))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => p_2 x1_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x1_3 : hol.term A => hol.or (p_2 x1_3) q_1))) (thm_2559 A q_1 p_2) (thm_2561 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (p x1))) q)) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (p x1)) q))) ;)

(; dict ;)

def thm_2563 : q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_3 : hol.term hol.ind => p_2 x1_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_3 : hol.term hol.ind => hol.or (p_2 x1_3) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_2562 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (\lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) x1)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2564 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr hol.ind hol.bool) => thm_2563 q_1 p_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2565 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => (x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or ((x1_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.not (hol.eq hol.ind x1_3 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4))) (hol.eq hol.ind x1_3 x2_4)))) x1_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))))) (thm_2556 f_1) (thm_2564 f_1).

(; Theorem: |- ((= (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2)) ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2566 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) x2_1) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV hol.ind hol.bool (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) x2_1.

(; Theorem: |- ((= \lambda x2. (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2)) \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2567 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (x2_3 : hol.term hol.ind => thm_2566 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2568 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) thm_134 (thm_2567 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2)))) (Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) ;)

(; dict ;)

def thm_2569 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) thm_1019 (thm_2568 x1_1 f_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2570 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))) (thm_2569 x1_1 f_2) (thm_2549 f_2).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) (= ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2571 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) thm_561 (thm_2570 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.\/ (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2))) (Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) ;)

(; dict ;)

def thm_2572 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) x2_1)) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) x2_1) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) thm_1019 (thm_2566 x2_1 x1_2 f_3).

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2573 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) x2_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4)) (hol.not (hol.eq hol.ind x1_2 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_4))) (hol.eq hol.ind x1_2 x2_4))) x2_1)) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))) (thm_2572 x2_1 x1_2 f_3) (thm_2549 f_3).

(; Theorem: |- ((= \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) \lambda x2. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2574 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) (x2_3 : hol.term hol.ind => thm_2573 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2575 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) thm_134 (thm_2574 x1_1 f_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ;)

(; dict ;)

def thm_2576 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) (thm_2571 x1_1 f_2) (thm_2575 x1_1 f_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) q)) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) q)))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) q)) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) q)))) ;)

(; dict ;)

def thm_2577 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) q_1)))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) q_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) q)))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) q)) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) q)))) ;)

(; dict ;)

def thm_2578 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) q_1)))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) q_1))) (thm_2557 A q_1 p_2) (thm_2577 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) q)) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) q))) ;)

(; dict ;)

def thm_2579 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) q_1))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) q_1))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => p_2 x2_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x2_3 : hol.term A => hol.or (p_2 x2_3) q_1))) (thm_2578 A q_1 p_2) (thm_2561 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (p x2))) q)) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (p x2)) q))) ;)

(; dict ;)

def thm_2580 : q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr hol.ind hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => p_2 x2_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (p_2 x2_3) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr hol.ind hol.bool) => (A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_2579 A q_1 p_2) hol.ind q_1 p_2.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ (\lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))) x2)) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2581 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr hol.ind hol.bool) => thm_2580 q_1 p_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4))) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2582 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => (x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or ((x2_4 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4)) (hol.not (hol.eq hol.ind x1_1 x2_4))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_4))) (hol.eq hol.ind x1_1 x2_4))) x2_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) (thm_2576 x1_1 f_2) (thm_2581 x1_1 f_2).

(; Theorem: |- ((= (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f')) (Data.Bool.! \lambda z. ((= (f (f' z))) z))) ;)

(; dict ;)

def thm_2583 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)) f_27_1) (hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_1 z_3)) z_3))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV (hol.arr hol.ind hol.ind) hol.bool (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)) f_27_1.

(; Theorem: |- ((= \lambda f'. (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f')) \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))) ;)

(; dict ;)

def thm_2584 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.ind) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)) f_27_2) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM (hol.arr hol.ind hol.ind) hol.bool (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)) f_27_2) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => thm_2583 f_27_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda f'. (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f'))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2585 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)) f_27_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool)) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)) f_27_2) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)) thm_2527 (thm_2584 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f')))) ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2586 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))) (thm_2075 x2_1 x1_2 f_3) (thm_2585 f_3).

(; Theorem: |- ((= (= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f'))))) (= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2587 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)))) (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) thm_561 (thm_2586 x2_1 x1_2 f_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f'))) ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2588 : f_27_1 : hol.term (hol.arr hol.ind hol.ind) -> x2_2 : hol.term hol.ind -> x1_3 : hol.term hol.ind -> f_4 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6)) f_27_1)) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5)))) :=
  f_27_1 : hol.term (hol.arr hol.ind hol.ind) => x2_2 : hol.term hol.ind => x1_3 : hol.term hol.ind => f_4 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2)))) (hol.or (hol.or (hol.and (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2)) (hol.not (hol.eq hol.ind x1_3 x2_2))) (hol.and (hol.not (hol.eq hol.ind (f_4 x1_3) (f_4 x2_2))) (hol.eq hol.ind x1_3 x2_2)))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_5 z_6)) z_6)) f_27_1) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_4 (f_27_1 z_5)) z_5)) (thm_2075 x2_2 x1_3 f_4) (thm_2583 f_27_1 f_4).

(; Theorem: |- ((= \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f'))) \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))) ;)

(; dict ;)

def thm_2589 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr (hol.arr hol.ind hol.ind) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM (hol.arr hol.ind hol.ind) hol.bool (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => thm_2588 f_27_4 x2_1 x1_2 f_3).

(; Theorem: |- ((= (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f')))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2590 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool)) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))) thm_2527 (thm_2589 x2_1 x1_2 f_3).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f')))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f'))))) ((= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2591 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)))) (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)))) (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) (thm_2587 x2_1 x1_2 f_3) (thm_2590 x2_1 x1_2 f_3).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x))))) ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x))))) ;)

(; dict ;)

def thm_2592 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda f'. (q f')))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ p) (q f'))))) ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda f'. (q f')))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ p) (q f'))))) ;)

(; dict ;)

def thm_2593 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => q_1 f_27_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => hol.or p_2 (q_1 f_27_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => q_1 f_27_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => hol.or p_2 (q_1 f_27_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => q_1 f_27_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => hol.or p_2 (q_1 f_27_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x))))) ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda f'. (q f')))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ p) (q f'))))) ;)

(; dict ;)

def thm_2594 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => q_1 f_27_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => hol.or p_2 (q_1 f_27_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => q_1 f_27_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => hol.or p_2 (q_1 f_27_3)))) (thm_2592 A q_1 p_2) (thm_2593 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x))))) ;)

(; dict ;)

def thm_2595 : A : hol.type -> p_1 : hol.term hol.bool -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.or p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_1 (q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term hol.bool => thm_58 A p_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x)))) ;)

(; dict ;)

def thm_2596 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_2595 A p_2 q_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda f'. (q f')))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ p) (q f')))) ;)

(; dict ;)

def thm_2597 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => q_1 f_27_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => hol.or p_2 (q_1 f_27_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => q_1 f_27_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_27_3 : hol.term A => hol.or p_2 (q_1 f_27_3)))) (thm_2594 A q_1 p_2) (thm_2596 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda f'. (q f')))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ p) (q f')))) ;)

(; dict ;)

def thm_2598 : q_1 : hol.term (hol.arr (hol.arr hol.ind hol.ind) hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => q_1 f_27_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.or p_2 (q_1 f_27_3)))) :=
  q_1 : hol.term (hol.arr (hol.arr hol.ind hol.ind) hol.bool) => p_2 : hol.term hol.bool => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_2597 A q_1 p_2) (hol.arr hol.ind hol.ind) q_1 p_2.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f')))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (\lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)) f')))) ;)

(; dict ;)

def thm_2599 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => (q_1 : hol.term (hol.arr (hol.arr hol.ind hol.ind) hol.bool) => p_2 : hol.term hol.bool => thm_2598 q_1 p_2) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)) (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2600 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> f_3 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => f_3 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => (f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) ((f_27_5 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_6 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_5 z_6)) z_6)) f_27_4)))) (hol.eq hol.bool (hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1)) (hol.not (hol.eq hol.ind x1_2 x2_1))) (hol.and (hol.not (hol.eq hol.ind (f_3 x1_2) (f_3 x2_1))) (hol.eq hol.ind x1_2 x2_1))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_3 (f_27_4 z_5)) z_5))))) (thm_2591 x2_1 x1_2 f_3) (thm_2599 x2_1 x1_2 f_3).

(; Theorem: |- ((= \lambda x2. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) ;)

(; dict ;)

def thm_2601 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) (x2_3 : hol.term hol.ind => thm_2600 x2_3 x1_1 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2602 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))) thm_134 (thm_2601 x1_1 f_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2603 : x1_1 : hol.term hol.ind -> f_2 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5)))))) :=
  x1_1 : hol.term hol.ind => f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_3 z_4)) z_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3)) (hol.not (hol.eq hol.ind x1_1 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_2 x1_1) (f_2 x2_3))) (hol.eq hol.ind x1_1 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_2 (f_27_4 z_5)) z_5))))) (thm_2582 x1_1 f_2) (thm_2602 x1_1 f_2).

(; Theorem: |- ((= \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2604 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.ABS_THM hol.ind hol.bool (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5))))) (x1_2 : hol.term hol.ind => thm_2603 x1_2 f_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x1. ((Data.Bool.\/ (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ;)

(; dict ;)

def thm_2605 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool)) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4)))) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5))))) thm_134 (thm_2604 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.? \lambda f'. (Data.Bool.! \lambda z. ((= (f (f' z))) z))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ;)

(; dict ;)

def thm_2606 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_3 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_4 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_3 z_4)) z_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) (thm_2565 f_1) (thm_2605 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ;)

(; dict ;)

def thm_2607 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_2 : hol.term (hol.arr hol.ind hol.ind) => hol.forall hol.ind (z_3 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_2 z_3)) z_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) (thm_2544 f_1) (thm_2606 f_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))))) (Data.Bool.! \lambda z. (Data.Bool.? \lambda x. ((= (f x)) z))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ;)

(; dict ;)

def thm_2608 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (hol.or (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) (thm_2494 f_1) (thm_2607 f_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z))))))) ;)

(; dict ;)

def thm_2609 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.TRANS hol.bool (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))))) (hol.forall hol.ind (z_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind (f_1 x_3) z_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) (thm_2445 f_1) (thm_2608 f_1).

(; Theorem: |- (Data.Bool.? \lambda x1. (Data.Bool.? \lambda x2. (Data.Bool.? \lambda f'. ((Data.Bool.\/ ((Data.Bool.\/ ((Data.Bool./\ ((= (f x1)) (f x2))) (Data.Bool.~ ((= x1) x2)))) ((Data.Bool./\ (Data.Bool.~ ((= (f x1)) (f x2)))) ((= x1) x2)))) (Data.Bool.! \lambda z. ((= (f (f' z))) z)))))) ;)

(; dict ;)

def thm_2610 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) => hol.EQ_MP (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x1_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x2_3 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_27_4 : hol.term (hol.arr hol.ind hol.ind) => hol.or (hol.or (hol.and (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.not (hol.eq hol.ind x1_2 x2_3))) (hol.and (hol.not (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3))) (hol.eq hol.ind x1_2 x2_3))) (hol.forall hol.ind (z_5 : hol.term hol.ind => hol.eq hol.ind (f_1 (f_27_4 z_5)) z_5)))))) (thm_2609 f_1) (thm_2057 f_1 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2611 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) -> hol.proof hol.false :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => thm_2295 f_1 hyp_2 (thm_2610 f_1 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2612 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) -> hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) -> hol.proof hol.false :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) => hyp_2 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => hol.PROVE_HYP (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) hol.false (thm_2057 f_1 hyp_1) (hyp_3 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) => thm_2611 f_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) Data.Bool.F) ;)

(; dict ;)

def thm_2613 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) -> hol.proof (hol.imp (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) hol.false) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => hyp_2 : hol.proof (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) => thm_2612 f_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) ;)

(; dict ;)

def thm_2614 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) -> hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => hol.EQ_MP (hol.imp (hol.not (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) hol.false) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (thm_2056 f_1) (thm_2613 f_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2615 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) => thm_2614 f_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.? \lambda z. (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2616 : hol.proof (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => thm_2615 f_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2617 : hol.proof (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) :=
  hol.EQ_MP (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) thm_2054 (hol.EQ_MP (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) thm_2049 thm_2616).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) Data.Bool.F) ;)

(; dict ;)

def thm_2618 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => thm_2617 f_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2619 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) -> hol.proof hol.false :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) => hol.EQ_MP (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (thm_2015 f_1) (hol.EQ_MP (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (hol.imp (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false)) (thm_2017 f_1) (thm_2022 f_1 (thm_2023 f_1)) (thm_2618 f_1)) (thm_2013 f_1 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2620 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) -> hol.proof hol.false :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) => hol.PROVE_HYP (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false (thm_2013 f_1 hyp_1) (hyp_2 : hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) => thm_2619 f_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.~ (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2621 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.imp (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) hol.false) (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (thm_2012 f_1) (hyp_1 : hol.proof (hol.not (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) => thm_2620 f_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f)))) (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2622 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.EQ_MP (hol.imp (hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.imp (hol.eq hol.ind (f_1 x1_2) (f_1 x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.not (hol.forall hol.ind (y_2 : hol.term hol.ind => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (x_3 : hol.term hol.ind => hol.eq hol.ind y_2 (f_1 x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) (thm_2010 f_1) (thm_2621 f_1).

(; Theorem: |- ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))) ;)

(; dict ;)

def thm_2623 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) -> hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) ;)

(; dict ;)

def thm_2624 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) => thm_2622 f_1 (thm_2623 f_1 hyp_1).

(; Theorem: |- (\lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) f) ;)

(; dict ;)

def thm_2625 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) -> hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1) (thm_1995 f_1) (thm_2624 f_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2626 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_265 A x_1 P_2 hyp_1) (hol.arr hol.ind hol.ind) f_1 (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2627 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) => hol.PROVE_HYP ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) (thm_2625 f_1 hyp_1) (hyp_2 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))) f_1) => thm_2626 f_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f)))) (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2628 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) => thm_2627 f_1 hyp_1.

(; Theorem: |- ((= (\lambda f. ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))) f)) ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f)))) ;)

(; dict ;)

def thm_2629 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.eq hol.bool ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.BETA_CONV (hol.arr hol.ind hol.ind) hol.bool (f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1.

(; Theorem: |- (\lambda f. ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))) f) ;)

(; dict ;)

def thm_2630 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) -> hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))) ;)

(; dict ;)

def thm_2631 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) -> hol.proof (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) => hol.EQ_MP ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) (hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1))) (thm_2629 f_1) (thm_2630 f_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2632 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) => thm_2628 f_1 (thm_2631 f_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda f. ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))) f)) (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2633 : f_1 : hol.term (hol.arr hol.ind hol.ind) -> hol.proof (hol.imp ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => hyp_1 : hol.proof ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) => thm_2632 f_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> (\lambda f. ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))) f)) (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))))) ;)

(; dict ;)

def thm_2634 : hol.proof (hol.forall (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.imp ((f_2 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_2))) f_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_2 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_3 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_4 : hol.term hol.ind => hol.forall hol.ind (x2_5 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_2 x1_4) (f_2 x2_5)) (hol.eq hol.ind x1_4 x2_5)))) (hol.forall hol.ind (x_4 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_2 x_4) z_3)))))))) :=
  f_1 : hol.term (hol.arr hol.ind hol.ind) => thm_2633 f_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda f. ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f))))) (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2635 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => hol.and (Function_2Einjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1) (hol.not (Function_2Esurjective (hol.arr (hol.arr hol.ind hol.ind) hol.bool) f_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  thm_1993 thm_2634.

(; Theorem: |- (Data.Bool.? \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) ;)

(; dict ;)

def thm_2636 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr hol.ind hol.ind) hol.bool) hol.bool) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2)))))) :=
  thm_2635 thm_59.

(; Theorem: |- (\lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))) (select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z))))))) ;)

(; dict ;)

def thm_2637 : hol.proof ((f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) :=
  thm_1992 thm_2636.

(; Theorem: |- (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x1)) ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= ((select \lambda f. (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (f x1)) (f x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (f x)) z)))))) x)) z))))) ;)

(; dict ;)

def thm_2638 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1))))) :=
  hol.EQ_MP ((f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))) (hol.select (hol.arr hol.ind hol.ind) (f_1 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_1 x1_3) (f_1 x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_1 x_3) z_2))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1))))) thm_1991 thm_2637.

(; Theorem: |- (Data.Bool.? \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))) ;)

(; dict ;)

def thm_2639 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) :=
  hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x1_2) (hol.select (hol.arr hol.ind hol.ind) (f_4 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_5 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_6 : hol.term hol.ind => hol.forall hol.ind (x2_7 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_4 x1_6) (f_4 x2_7)) (hol.eq hol.ind x1_6 x2_7)))) (hol.forall hol.ind (x_6 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_4 x_6) z_5))))) x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (hol.select (hol.arr hol.ind hol.ind) (f_3 : hol.term (hol.arr hol.ind hol.ind) => Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_4 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_5 : hol.term hol.ind => hol.forall hol.ind (x2_6 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (f_3 x1_5) (f_3 x2_6)) (hol.eq hol.ind x1_5 x2_6)))) (hol.forall hol.ind (x_5 : hol.term hol.ind => hol.not (hol.eq hol.ind (f_3 x_5) z_4))))) x_2) z_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1))))) thm_1990 thm_2638.

(; Theorem: |- (\lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z)))))) ;)

(; dict ;)

def thm_2640 : hol.proof ((z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))) (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) :=
  thm_1957 thm_2639.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) (select \lambda z. ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) z))))))))) ;)

(; dict ;)

def thm_2641 : hol.proof (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))))))) :=
  hol.EQ_MP ((z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))) (hol.select hol.ind (z_1 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_2 : hol.term hol.ind => hol.forall hol.ind (x2_3 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_3)) (hol.eq hol.ind x1_2 x2_3)))) (hol.forall hol.ind (x_2 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_2) z_1)))))) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))))))) thm_1818 thm_2640.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))))) (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0)))) ;)

(; dict ;)

def thm_2642 : hol.proof (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) :=
  hol.EQ_MP (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) (hol.select hol.ind (z_2 : hol.term hol.ind => hol.and (hol.forall hol.ind (x1_3 : hol.term hol.ind => hol.forall hol.ind (x2_4 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_3) (HOLLight_2EIND__SUC x2_4)) (hol.eq hol.ind x1_3 x2_4)))) (hol.forall hol.ind (x_3 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_3) z_2))))))))) (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) thm_1817 thm_2641.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) ;)

(; dict ;)

def thm_2643 : hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) -> hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) :=
  hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((= (HOLLight.IND_SUC x)) HOLLight.IND_0))) ;)

(; dict ;)

def thm_2644 : hol.proof (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) :=
  hol.PROVE_HYP (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) thm_2642 (hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) => thm_2643 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F))) ;)

(; dict ;)

def thm_2645 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.imp (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false))) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => thm_1802 hyp_1 thm_2644.

(; Theorem: |- (Data.Bool.! \lambda r. ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ;)

(; dict ;)

def thm_2646 : hol.proof (hol.forall hol.ind (r_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1))) :=
  r_1 : hol.term hol.ind => thm_507 r_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F)) ;)

(; dict ;)

def thm_2647 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false)) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => thm_2645 hyp_1 thm_2646.

(; Theorem: |- (Data.Bool.! \lambda a. ((= (HOLLight.mk_num (HOLLight.dest_num a))) a)) ;)

(; dict ;)

def thm_2648 : hol.proof (hol.forall Number_2ENatural_2Enatural (a_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num a_1)) a_1)) :=
  a_1 : hol.term Number_2ENatural_2Enatural => thm_506 a_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))))) Data.Bool.F) ;)

(; dict ;)

def thm_2649 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof (hol.imp (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) hol.false) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => thm_2647 hyp_1 thm_2648.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2650 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof hol.false :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => thm_2649 hyp_1 thm_503.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_2651 : hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) -> hol.proof hol.false :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => hol.PROVE_HYP (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) hol.false (thm_609 hyp_1) (hyp_2 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => thm_2650 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))))) Data.Bool.F) ;)

(; dict ;)

def thm_2652 : hol.proof (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) hol.false) :=
  hyp_1 : hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) => thm_2651 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.~ ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_2653 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  hol.EQ_MP (hol.imp (hol.not (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0))))) hol.false) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) thm_608 thm_2652.

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.~ ((= (Number.Natural.suc n)) Number.Natural.zero))) ;)

(; dict ;)

def thm_2654 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero))) :=
  hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num HOLLight_2EIND__0)))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc n_1) Number_2ENatural_2Ezero))) thm_532 thm_2653.

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)))) \lambda m. (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)))) ;)

(; dict ;)

def thm_2655 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))).

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)))) \lambda m. (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)))) ;)

(; dict ;)

def thm_2656 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)))) :=
  hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) thm_2655 thm_2655.

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))))) ;)

(; dict ;)

def thm_2657 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) thm_508 thm_2656.

(; Theorem: |- ((= \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))) \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))) ;)

(; dict ;)

def thm_2658 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)).

(; Theorem: |- ((= \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))) \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))) ;)

(; dict ;)

def thm_2659 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)) (thm_2658 m_1) (thm_2658 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)))) (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)))) ;)

(; dict ;)

def thm_2660 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)) thm_508 (thm_2659 m_1).

(; Theorem: |- ((= (Number.Natural.suc m)) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) ;)

(; dict ;)

def thm_2661 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => (n_1 : hol.term Number_2ENatural_2Enatural => thm_519 n_1) m_1.

(; Theorem: |- ((= (= (Number.Natural.suc m))) (= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) ;)

(; dict ;)

def thm_2662 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc m_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1))) thm_510 (thm_2661 m_1).

(; Theorem: |- ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_2663 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (Number_2ENatural_2Esuc n_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_2662 m_2) (thm_519 n_1).

(; Theorem: |- ((= (= ((= (Number.Natural.suc m)) (Number.Natural.suc n)))) (= ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ;)

(; dict ;)

def thm_2664 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1))) (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) thm_561 (thm_2663 n_1 m_2).

(; Theorem: |- ((= ((= m) n)) ((= m) n)) ;)

(; dict ;)

def thm_2665 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural m_2 n_1).

(; Theorem: |- ((= ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))) ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= m) n))) ;)

(; dict ;)

def thm_2666 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1))) (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (thm_2664 n_1 m_2) (thm_2665 n_1 m_2).

(; Theorem: |- ((= ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= m) n))) ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))) ;)

(; dict ;)

def thm_2667 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.SYM hol.bool (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (thm_2666 n_1 m_2).

(; Theorem: |- ((= HOLLight.IND_SUC) HOLLight.IND_SUC) ;)

(; dict ;)

def thm_2668 : hol.proof (hol.eq (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC HOLLight_2EIND__SUC) :=
  hol.REFL (hol.arr hol.ind hol.ind) HOLLight_2EIND__SUC.

(; Theorem: |- ((= m) n) ;)

(; dict ;)

def thm_2669 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hyp_1.

(; Theorem: |- ((= (HOLLight.dest_num m)) (HOLLight.dest_num n)) ;)

(; dict ;)

def thm_2670 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hol.APP_THM Number_2ENatural_2Enatural hol.ind HOLLight_2Edest__num HOLLight_2Edest__num m_2 n_1 thm_1260 (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (thm_2665 n_1 m_2) (thm_2669 n_1 m_2 hyp_1)).

(; Theorem: |- ((= (HOLLight.IND_SUC (HOLLight.dest_num m))) (HOLLight.IND_SUC (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_2671 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) -> hol.proof (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hol.APP_THM hol.ind hol.ind HOLLight_2EIND__SUC HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1) thm_2668 (thm_2670 n_1 m_2 hyp_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_2672 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hol.APP_THM hol.ind Number_2ENatural_2Enatural HOLLight_2Emk__num HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) thm_647 (thm_2671 n_1 m_2 hyp_1).

(; Theorem: |- ((= (= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_2673 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) thm_510 (thm_2672 n_1 m_2 hyp_1).

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_2674 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (thm_2673 n_1 m_2 hyp_1) (thm_520 n_1).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_2675 : x_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural x_1 x_1) hol.true) :=
  x_1 : hol.term Number_2ENatural_2Enatural => (A : hol.type => x_1 : hol.term A => thm_314 A x_1) Number_2ENatural_2Enatural x_1.

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) Data.Bool.T) ;)

(; dict ;)

def thm_2676 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (x_1 : hol.term Number_2ENatural_2Enatural => thm_2675 x_1) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))).

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) Data.Bool.T) ;)

(; dict ;)

def thm_2677 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) hol.true (thm_2674 n_1 m_2 hyp_1) (thm_2676 n_1).

(; Theorem: |- ((= Data.Bool.T) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_2678 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) -> hol.proof (hol.eq hol.bool hol.true (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hol.SYM hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) hol.true (thm_2677 n_1 m_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= m) n)) ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_2679 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => hol.EQ_MP hol.true (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (thm_2678 n_1 m_2 hyp_1) thm_4.

(; Theorem: |- ((= \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2680 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))).

(; Theorem: |- ((= \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2681 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) thm_2680 thm_2680.

(; Theorem: |- ((= (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p))))) (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p))))) ;)

(; dict ;)

def thm_2682 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) thm_508 thm_2681.

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2683 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => hol.REFL hol.bool (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2684 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (thm_2683 i_1) (thm_2683 i_1).

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2685 : hyp_1 : hol.proof (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) -> hol.proof (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_2686 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)))) -> hol.proof (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)))) => thm_2685 hyp_1 i_1.

(; Theorem: |- (HOLLight.NUM_REP i) ;)

(; dict ;)

def thm_2687 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (HOLLight_2ENUM__REP i_1) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => hyp_1.

(; Theorem: |- (HOLLight.NUM_REP (HOLLight.IND_SUC i)) ;)

(; dict ;)

def thm_2688 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)))) -> hyp_2 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)))) => hyp_2 : hol.proof (HOLLight_2ENUM__REP i_1) => thm_2686 i_1 hyp_1 (thm_2687 i_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) (HOLLight.NUM_REP (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_2689 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)))) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => hyp_2 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_2) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)))) => thm_2688 i_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_2690 : hol.proof (hol.imp (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) :=
  hyp_1 : hol.proof (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) => i_1 : hol.term hol.ind => hyp_2 : hol.proof (HOLLight_2ENUM__REP i_1) => thm_2689 i_1 hyp_2 (thm_2685 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2691 : hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) -> hol.proof (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2692 : hol.proof (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) :=
  hol.PROVE_HYP (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)))) thm_503 (hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) => thm_2691 hyp_1).

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP i)) (HOLLight.NUM_REP (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_2693 : i_1 : hol.term hol.ind -> hol.proof (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => thm_2690 thm_2692 i_1.

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num p))) (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2694 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num p_1)) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => (i_1 : hol.term hol.ind => hol.EQ_MP (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))) (thm_2684 i_1) (thm_2693 i_1)) (HOLLight_2Edest__num p_1).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.dest_num p))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num p)))) (HOLLight.dest_num p))) ;)

(; dict ;)

def thm_2695 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num p_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1))) (HOLLight_2Edest__num p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => (r_1 : hol.term hol.ind => thm_507 r_1) (HOLLight_2Edest__num p_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.dest_num p))) p) ;)

(; dict ;)

def thm_2696 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num p_1)) p_1) :=
  p_1 : hol.term Number_2ENatural_2Enatural => (a_1 : hol.term Number_2ENatural_2Enatural => thm_506 a_1) p_1.

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num p)))) (HOLLight.dest_num p)) ;)

(; dict ;)

def thm_2697 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1))) (HOLLight_2Edest__num p_1)) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.ind HOLLight_2Edest__num HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1)) p_1 thm_1260 (thm_2696 p_1).

(; Theorem: |- ((= (= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num p))))) (= (HOLLight.dest_num p))) ;)

(; dict ;)

def thm_2698 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1)))) (hol.eq hol.ind (HOLLight_2Edest__num p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1))) (HOLLight_2Edest__num p_1) thm_1298 (thm_2697 p_1).

(; Theorem: |- ((= (HOLLight.dest_num p)) (HOLLight.dest_num p)) ;)

(; dict ;)

def thm_2699 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num p_1) (HOLLight_2Edest__num p_1)) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.ind (HOLLight_2Edest__num p_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num p)))) (HOLLight.dest_num p))) ((= (HOLLight.dest_num p)) (HOLLight.dest_num p))) ;)

(; dict ;)

def thm_2700 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1))) (HOLLight_2Edest__num p_1)) (hol.eq hol.ind (HOLLight_2Edest__num p_1) (HOLLight_2Edest__num p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1)))) (hol.eq hol.ind (HOLLight_2Edest__num p_1)) (HOLLight_2Edest__num p_1) (HOLLight_2Edest__num p_1) (thm_2698 p_1) (thm_2699 p_1).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_2701 : x_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind x_1 x_1) hol.true) :=
  x_1 : hol.term hol.ind => (A : hol.type => x_1 : hol.term A => thm_314 A x_1) hol.ind x_1.

(; Theorem: |- ((= ((= (HOLLight.dest_num p)) (HOLLight.dest_num p))) Data.Bool.T) ;)

(; dict ;)

def thm_2702 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num p_1) (HOLLight_2Edest__num p_1)) hol.true) :=
  p_1 : hol.term Number_2ENatural_2Enatural => (x_1 : hol.term hol.ind => thm_2701 x_1) (HOLLight_2Edest__num p_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num p)))) (HOLLight.dest_num p))) Data.Bool.T) ;)

(; dict ;)

def thm_2703 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1))) (HOLLight_2Edest__num p_1)) hol.true) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1))) (HOLLight_2Edest__num p_1)) (hol.eq hol.ind (HOLLight_2Edest__num p_1) (HOLLight_2Edest__num p_1)) hol.true (thm_2700 p_1) (thm_2702 p_1).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.dest_num p))) Data.Bool.T) ;)

(; dict ;)

def thm_2704 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num p_1)) hol.true) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num p_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num p_1))) (HOLLight_2Edest__num p_1)) hol.true (thm_2695 p_1) (thm_2703 p_1).

(; Theorem: |- ((= Data.Bool.T) (HOLLight.NUM_REP (HOLLight.dest_num p))) ;)

(; dict ;)

def thm_2705 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool hol.true (HOLLight_2ENUM__REP (HOLLight_2Edest__num p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.SYM hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num p_1)) hol.true (thm_2704 p_1).

(; Theorem: |- (HOLLight.NUM_REP (HOLLight.dest_num p)) ;)

(; dict ;)

def thm_2706 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (HOLLight_2ENUM__REP (HOLLight_2Edest__num p_1)) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP hol.true (HOLLight_2ENUM__REP (HOLLight_2Edest__num p_1)) (thm_2705 p_1) thm_4.

(; Theorem: |- (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p))) ;)

(; dict ;)

def thm_2707 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => thm_2694 p_1 (thm_2706 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2708 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => thm_2707 p_1.

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2709 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => (r_1 : hol.term hol.ind => thm_507 r_1) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)).

(; Theorem: |- ((= \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) \lambda p. ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2710 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => thm_2709 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p))))) (Data.Bool.! \lambda p. ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p))))) ;)

(; dict ;)

def thm_2711 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) thm_508 thm_2710.

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))))) (Data.Bool.==> (Data.Bool.! \lambda p. ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p)))))) ;)

(; dict ;)

def thm_2712 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) thm_126 thm_2711.

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n))) ;)

(; dict ;)

def thm_2713 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p))))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n)))) ((Data.Bool.==> (Data.Bool.! \lambda p. ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p))))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n)))) ;)

(; dict ;)

def thm_2714 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3))))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) thm_2712 (thm_2713 n_1 m_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda p. ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p))))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n)))) ((Data.Bool.==> (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p))))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n)))) ;)

(; dict ;)

def thm_2715 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.SYM hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) (thm_2714 n_1 m_2).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2716 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p)))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2717 : p_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (thm_2716 p_1) (thm_2716 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2718 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) => hyp_1.

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p))) ;)

(; dict ;)

def thm_2719 : p_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) => thm_2718 hyp_1 p_1.

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.IND_SUC (HOLLight.dest_num m))) ;)

(; dict ;)

def thm_2720 : m_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) => (p_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1))) (thm_2717 p_1) (thm_2719 p_1 hyp_1)) m_1 hyp_1.

(; Theorem: |- ((= (= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))))) (= (HOLLight.IND_SUC (HOLLight.dest_num m)))) ;)

(; dict ;)

def thm_2721 : m_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1))))) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_1)) thm_1298 (thm_2720 m_1 hyp_1).

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) (HOLLight.IND_SUC (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_2722 : n_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) => (p_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_2)))) => thm_2719 p_1 hyp_1) n_1 hyp_1.

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= (HOLLight.IND_SUC (HOLLight.dest_num m))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_2723 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))))) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)) (thm_2721 m_2 hyp_1) (thm_2722 n_1 hyp_1).

(; Theorem: |- ((= ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))) ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))) ;)

(; dict ;)

def thm_2724 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)).

(; Theorem: |- ((= ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))) ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))) ;)

(; dict ;)

def thm_2725 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1))) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)) (thm_2724 x2_1 x1_2) (thm_2724 x2_1 x1_2).

(; Theorem: |- (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2726 : hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) -> hol.proof (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) :=
  hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0))) (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2)))) ;)

(; dict ;)

def thm_2727 : hol.proof (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) :=
  hol.PROVE_HYP (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) thm_2642 (hyp_1 : hol.proof (hol.and (hol.forall hol.ind (x1_1 : hol.term hol.ind => hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2)))) (hol.forall hol.ind (x_1 : hol.term hol.ind => hol.not (hol.eq hol.ind (HOLLight_2EIND__SUC x_1) HOLLight_2EIND__0)))) => thm_2726 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda x2. ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2))) ;)

(; dict ;)

def thm_2728 : x1_1 : hol.term hol.ind -> hol.proof (hol.forall hol.ind (x2_2 : hol.term hol.ind => hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_1) (HOLLight_2EIND__SUC x2_2)) (hol.eq hol.ind x1_1 x2_2))) :=
  x1_1 : hol.term hol.ind => thm_2727 x1_1.

(; Theorem: |- ((= ((= (HOLLight.IND_SUC x1)) (HOLLight.IND_SUC x2))) ((= x1) x2)) ;)

(; dict ;)

def thm_2729 : x2_1 : hol.term hol.ind -> x1_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)) :=
  x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => thm_2728 x1_2 x2_1.

(; Theorem: |- ((= ((= (HOLLight.IND_SUC (HOLLight.dest_num m))) (HOLLight.IND_SUC (HOLLight.dest_num n)))) ((= (HOLLight.dest_num m)) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_2730 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => (x2_1 : hol.term hol.ind => x1_2 : hol.term hol.ind => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2EIND__SUC x1_2) (HOLLight_2EIND__SUC x2_1)) (hol.eq hol.ind x1_2 x2_1)) (thm_2725 x2_1 x1_2) (thm_2729 x2_1 x1_2)) (HOLLight_2Edest__num n_1) (HOLLight_2Edest__num m_2).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= (HOLLight.dest_num m)) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_2731 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq hol.ind (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)) (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) (thm_2723 n_1 m_2 hyp_1) (thm_2730 n_1 m_2).

(; Theorem: |- ((= (Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))))) (Data.Bool.==> ((= (HOLLight.dest_num m)) (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_2732 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) thm_126 (thm_2731 n_1 m_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n))) ((Data.Bool.==> ((= (HOLLight.dest_num m)) (HOLLight.dest_num n))) ((= m) n))) ;)

(; dict ;)

def thm_2733 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (thm_2732 n_1 m_2 hyp_1) (thm_2665 n_1 m_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.dest_num m)) (HOLLight.dest_num n))) ((= m) n))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n))) ;)

(; dict ;)

def thm_2734 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => hol.SYM hol.bool (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (thm_2733 n_1 m_2 hyp_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.dest_num m))) m) ;)

(; dict ;)

def thm_2735 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_1)) m_1) :=
  m_1 : hol.term Number_2ENatural_2Enatural => (a_1 : hol.term Number_2ENatural_2Enatural => thm_506 a_1) m_1.

(; Theorem: |- ((= (= (HOLLight.mk_num (HOLLight.dest_num m)))) (= m)) ;)

(; dict ;)

def thm_2736 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_1))) (hol.eq Number_2ENatural_2Enatural m_1)) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (HOLLight_2Emk__num (HOLLight_2Edest__num m_1)) m_1 thm_510 (thm_2735 m_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.dest_num n))) n) ;)

(; dict ;)

def thm_2737 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (a_1 : hol.term Number_2ENatural_2Enatural => thm_506 a_1) n_1.

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.dest_num m))) (HOLLight.mk_num (HOLLight.dest_num n)))) ((= m) n)) ;)

(; dict ;)

def thm_2738 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2))) (hol.eq Number_2ENatural_2Enatural m_2) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1 (thm_2736 m_2) (thm_2737 n_1).

(; Theorem: |- ((= (Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.dest_num m))) (HOLLight.mk_num (HOLLight.dest_num n))))) (Data.Bool.==> ((= m) n))) ;)

(; dict ;)

def thm_2739 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)))) (hol.imp (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1) thm_126 (thm_2738 n_1 m_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.dest_num m))) (HOLLight.mk_num (HOLLight.dest_num n)))) ((= m) n))) ((Data.Bool.==> ((= m) n)) ((= m) n))) ;)

(; dict ;)

def thm_2740 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.imp (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)))) (hol.imp (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (thm_2739 n_1 m_2) (thm_2665 n_1 m_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= m) n)) ((= m) n))) Data.Bool.T) ;)

(; dict ;)

def thm_2741 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => (t_1 : hol.term hol.bool => thm_564 t_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.dest_num m))) (HOLLight.mk_num (HOLLight.dest_num n)))) ((= m) n))) Data.Bool.T) ;)

(; dict ;)

def thm_2742 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.imp (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) hol.true (thm_2740 n_1 m_2) (thm_2741 n_1 m_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.dest_num m))) (HOLLight.mk_num (HOLLight.dest_num n)))) ((= m) n))) ;)

(; dict ;)

def thm_2743 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.SYM hol.bool (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) hol.true (thm_2742 n_1 m_2).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.dest_num m))) (HOLLight.mk_num (HOLLight.dest_num n)))) ((= m) n)) ;)

(; dict ;)

def thm_2744 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP hol.true (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (thm_2743 n_1 m_2) thm_4.

(; Theorem: |- ((= (HOLLight.dest_num m)) (HOLLight.dest_num n)) ;)

(; dict ;)

def thm_2745 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) => hyp_1.

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.dest_num m))) (HOLLight.mk_num (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_2746 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2Edest__num m_2)) (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) => hol.APP_THM hol.ind Number_2ENatural_2Enatural HOLLight_2Emk__num HOLLight_2Emk__num (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1) thm_647 (thm_2745 n_1 m_2 hyp_1).

(; Theorem: |- ((= m) n) ;)

(; dict ;)

def thm_2747 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) -> hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) => thm_2744 n_1 m_2 (thm_2746 n_1 m_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.dest_num m)) (HOLLight.dest_num n))) ((= m) n)) ;)

(; dict ;)

def thm_2748 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) => thm_2747 n_1 m_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n)) ;)

(; dict ;)

def thm_2749 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) -> hol.proof (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => hol.EQ_MP (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num m_2) (HOLLight_2Edest__num n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (thm_2734 n_1 m_2 hyp_1) (thm_2748 n_1 m_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda p. ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num p))))) (HOLLight.IND_SUC (HOLLight.dest_num p))))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n))) ;)

(; dict ;)

def thm_2750 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => thm_2749 n_1 m_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p))))) ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n))) ;)

(; dict ;)

def thm_2751 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1))) (thm_2715 n_1 m_2) (thm_2750 n_1 m_2).

(; Theorem: |- (Data.Bool.! \lambda p. (HOLLight.NUM_REP (HOLLight.IND_SUC (HOLLight.dest_num p)))) ;)

(; dict ;)

def thm_2752 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_1 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_1)))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n)) ;)

(; dict ;)

def thm_2753 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) -> hol.proof (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => thm_2751 n_1 m_2 (thm_2752 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))))) ((= m) n)) ;)

(; dict ;)

def thm_2754 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.imp (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) thm_2682 thm_2708) (hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => HOLLight_2ENUM__REP (HOLLight_2EIND__SUC (HOLLight_2Edest__num p_3)))) => thm_2753 n_1 m_2 hyp_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n)))) ;)

(; dict ;)

def thm_2755 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) => hyp_1.

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m))))) (HOLLight.dest_num (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_2756 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2)))) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) => hol.APP_THM Number_2ENatural_2Enatural hol.ind HOLLight_2Edest__num HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1))) thm_1260 (thm_2755 n_1 m_2 hyp_1).

(; Theorem: |- ((= m) n) ;)

(; dict ;)

def thm_2757 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) -> hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) => thm_2754 n_1 m_2 (thm_2756 n_1 m_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= m) n)) ;)

(; dict ;)

def thm_2758 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) => hol.EQ_MP (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (thm_2665 n_1 m_2) (thm_2757 n_1 m_2 hyp_1).

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num m)))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num n))))) ((= m) n)) ;)

(; dict ;)

def thm_2759 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.PROP_EXT (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural m_2 n_1) (hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural m_2 n_1) => thm_2679 n_1 m_2 (thm_2669 n_1 m_2 hyp_1)) (hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) => thm_2758 n_1 m_2 (thm_2755 n_1 m_2 hyp_1)).

(; Theorem: |- ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)) ;)

(; dict ;)

def thm_2760 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num m_2))) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num n_1)))) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_2) (Number_2ENatural_2Esuc n_1)) (hol.eq Number_2ENatural_2Enatural m_2 n_1)) (thm_2667 n_1 m_2) (thm_2759 n_1 m_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n))) ;)

(; dict ;)

def thm_2761 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => thm_2760 n_2 m_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)))) ;)

(; dict ;)

def thm_2762 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2))) (thm_2660 m_1) (thm_2761 m_1).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((= (Number.Natural.suc m)) (Number.Natural.suc n))) ((= m) n)))) ;)

(; thm ;)

def thm_2763 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)))) :=
  hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc m_1) (Number_2ENatural_2Esuc n_2)) (hol.eq Number_2ENatural_2Enatural m_1 n_2)))) thm_2657 thm_2762.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_2764 : hol.proof (hol.eq (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool))) :=
  hol.REFL (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)).

(; Theorem: |- ((= \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; dict ;)

def thm_2765 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))).

(; Theorem: |- ((= \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; dict ;)

def thm_2766 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  hol.TRANS (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) thm_2765 thm_2765.

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))))) (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))))) ;)

(; dict ;)

def thm_2767 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))))) :=
  hol.APP_THM (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) thm_2764 thm_2766.

(; Theorem: |- ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n))))) ;)

(; dict ;)

def thm_2768 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) -> hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => hyp_1.

(; Theorem: |- (p Number.Natural.zero) ;)

(; dict ;)

def thm_2769 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) -> hol.proof (p_1 Number_2ENatural_2Ezero) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) (p_1 Number_2ENatural_2Ezero) hyp_1.

(; Theorem: |- (p Number.Natural.zero) ;)

(; dict ;)

def thm_2770 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) -> hol.proof (p_1 Number_2ENatural_2Ezero) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => hol.PROVE_HYP (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (p_1 Number_2ENatural_2Ezero) (thm_2768 p_1 hyp_1) (hyp_2 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => thm_2769 p_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))) ;)

(; dict ;)

def thm_2771 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))) ;)

(; dict ;)

def thm_2772 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => hol.PROVE_HYP (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) (thm_2768 p_1 hyp_1) (hyp_2 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => thm_2771 p_1 hyp_2).

(; Theorem: |- (p Number.Natural.zero) ;)

(; dict ;)

def thm_2773 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (p_1 Number_2ENatural_2Ezero) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))) ;)

(; dict ;)

def thm_2774 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) => hyp_1.

(; Theorem: |- ((= \lambda n. (p n)) \lambda n. (p n)) ;)

(; dict ;)

def thm_2775 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2).

(; Theorem: |- ((= \lambda n. (p n)) \lambda n. (p n)) ;)

(; dict ;)

def thm_2776 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2) (thm_2775 p_1) (thm_2775 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. (p n))) (Data.Bool.! \lambda n. (p n))) ;)

(; dict ;)

def thm_2777 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2) thm_508 (thm_2776 p_1).

(; Theorem: |- ((= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2778 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) i_1) (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.BETA_CONV hol.ind hol.bool (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) i_1.

(; Theorem: |- ((= \lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) \lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2779 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) (i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.ABS_THM hol.ind hol.bool (i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) (i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (i_2 : hol.term hol.ind => thm_2778 i_2 p_1).

(; Theorem: |- ((= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) HOLLight.IND_0)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) ;)

(; dict ;)

def thm_2780 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) HOLLight_2EIND__0) ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.ind hol.bool (i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) (i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0 HOLLight_2EIND__0 (thm_2779 p_1) thm_194.

(; Theorem: |- ((= (= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) HOLLight.IND_0))) (= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0))) ;)

(; dict ;)

def thm_2781 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) HOLLight_2EIND__0)) (hol.eq hol.bool ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) HOLLight_2EIND__0) ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) thm_561 (thm_2780 p_1).

(; Theorem: |- ((= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (p (HOLLight.mk_num HOLLight.IND_0)))) ;)

(; dict ;)

def thm_2782 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.BETA_CONV hol.ind hol.bool (i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0.

(; Theorem: |- ((= ((= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) HOLLight.IND_0)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0))) ((= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (p (HOLLight.mk_num HOLLight.IND_0))))) ;)

(; dict ;)

def thm_2783 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) HOLLight_2EIND__0) ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0)) (hol.eq hol.bool ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) HOLLight_2EIND__0)) (hol.eq hol.bool ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0)) ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0))) (thm_2781 p_1) (thm_2782 p_1).

(; Theorem: |- ((= ((= (HOLLight.NUM_REP HOLLight.IND_0)) Data.Bool.T)) ((= (HOLLight.NUM_REP HOLLight.IND_0)) Data.Bool.T)) ;)

(; dict ;)

def thm_2784 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true).

(; Theorem: |- ((= ((= (HOLLight.NUM_REP HOLLight.IND_0)) Data.Bool.T)) ((= (HOLLight.NUM_REP HOLLight.IND_0)) Data.Bool.T)) ;)

(; dict ;)

def thm_2785 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) thm_2784 thm_2784.

(; Theorem: |- ((= (HOLLight.NUM_REP HOLLight.IND_0)) ((= (HOLLight.NUM_REP HOLLight.IND_0)) Data.Bool.T)) ;)

(; dict ;)

def thm_2786 : hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true)) :=
  (t_1 : hol.term hol.bool => thm_173 t_1) (HOLLight_2ENUM__REP HOLLight_2EIND__0).

(; Theorem: |- ((= (HOLLight.NUM_REP HOLLight.IND_0)) Data.Bool.T) ;)

(; dict ;)

def thm_2787 : hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) :=
  hol.EQ_MP (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) thm_2786 thm_505.

(; Theorem: |- ((= (Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_2788 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0)) (hol.and hol.true)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true thm_191 (hol.EQ_MP (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) (hol.eq hol.bool (HOLLight_2ENUM__REP HOLLight_2EIND__0) hol.true) thm_2785 thm_2787).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_2789 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) p_1 p_1) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) p_1.

(; Theorem: |- ((= ((= (HOLLight.mk_num HOLLight.IND_0)) Number.Natural.zero)) ((= (HOLLight.mk_num HOLLight.IND_0)) Number.Natural.zero)) ;)

(; dict ;)

def thm_2790 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero)) :=
  hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero).

(; Theorem: |- ((= ((= (HOLLight.mk_num HOLLight.IND_0)) Number.Natural.zero)) ((= (HOLLight.mk_num HOLLight.IND_0)) Number.Natural.zero)) ;)

(; dict ;)

def thm_2791 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero)) :=
  hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) thm_2790 thm_2790.

(; Theorem: |- ((= (HOLLight.mk_num HOLLight.IND_0)) Number.Natural.zero) ;)

(; dict ;)

def thm_2792 : hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) :=
  hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) => hyp_1.

(; Theorem: |- ((= Number.Natural.zero) (HOLLight.mk_num HOLLight.IND_0)) ;)

(; dict ;)

def thm_2793 : hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) -> hol.proof (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) :=
  hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) => hol.SYM Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero (thm_2792 hyp_1).

(; Theorem: |- ((= Number.Natural.zero) (HOLLight.mk_num HOLLight.IND_0)) ;)

(; dict ;)

def thm_2794 : hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hol.proof (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) :=
  hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) => hyp_1.

(; Theorem: |- ((= (HOLLight.mk_num HOLLight.IND_0)) Number.Natural.zero) ;)

(; dict ;)

def thm_2795 : hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) :=
  hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) => hol.SYM Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0) (thm_2794 hyp_1).

(; Theorem: |- ((= ((= Number.Natural.zero) (HOLLight.mk_num HOLLight.IND_0))) ((= (HOLLight.mk_num HOLLight.IND_0)) Number.Natural.zero)) ;)

(; dict ;)

def thm_2796 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero)) :=
  hol.PROP_EXT (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) (hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) => thm_2793 hyp_1) (hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) => thm_2795 hyp_1).

(; Theorem: |- ((= (HOLLight.mk_num HOLLight.IND_0)) Number.Natural.zero) ;)

(; dict ;)

def thm_2797 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) :=
  hol.EQ_MP (hol.eq Number_2ENatural_2Enatural Number_2ENatural_2Ezero (HOLLight_2Emk__num HOLLight_2EIND__0)) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) thm_2796 thm_525.

(; Theorem: |- ((= (p (HOLLight.mk_num HOLLight.IND_0))) (p Number.Natural.zero)) ;)

(; dict ;)

def thm_2798 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0)) (p_1 Number_2ENatural_2Ezero)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM Number_2ENatural_2Enatural hol.bool p_1 p_1 (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero (thm_2789 p_1) (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num HOLLight_2EIND__0) Number_2ENatural_2Ezero) thm_2791 thm_2797).

(; Theorem: |- ((= ((= (p Number.Natural.zero)) Data.Bool.T)) ((= (p Number.Natural.zero)) Data.Bool.T)) ;)

(; dict ;)

def thm_2799 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true).

(; Theorem: |- ((= ((= (p Number.Natural.zero)) Data.Bool.T)) ((= (p Number.Natural.zero)) Data.Bool.T)) ;)

(; dict ;)

def thm_2800 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) (thm_2799 p_1) (thm_2799 p_1).

(; Theorem: |- ((= (p Number.Natural.zero)) ((= (p Number.Natural.zero)) Data.Bool.T)) ;)

(; dict ;)

def thm_2801 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (t_1 : hol.term hol.bool => thm_173 t_1) (p_1 Number_2ENatural_2Ezero).

(; Theorem: |- ((= (p Number.Natural.zero)) Data.Bool.T) ;)

(; dict ;)

def thm_2802 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.EQ_MP (p_1 Number_2ENatural_2Ezero) (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) (thm_2801 p_1) (thm_2773 p_1 hyp_1).

(; Theorem: |- ((= (p (HOLLight.mk_num HOLLight.IND_0))) Data.Bool.T) ;)

(; dict ;)

def thm_2803 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0)) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.TRANS hol.bool (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0)) (p_1 Number_2ENatural_2Ezero) hol.true (thm_2798 p_1) (hol.EQ_MP (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) (hol.eq hol.bool (p_1 Number_2ENatural_2Ezero) hol.true) (thm_2800 p_1) (thm_2802 p_1 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (p (HOLLight.mk_num HOLLight.IND_0)))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_2804 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.and hol.true hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.APP_THM hol.bool hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0)) (hol.and hol.true) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0)) hol.true thm_2788 (thm_2803 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_2805 : hol.proof (hol.eq hol.bool (hol.and hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_872 t_1) hol.true.

(; Theorem: |- ((= ((Data.Bool./\ (HOLLight.NUM_REP HOLLight.IND_0)) (p (HOLLight.mk_num HOLLight.IND_0)))) Data.Bool.T) ;)

(; dict ;)

def thm_2806 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0))) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.TRANS hol.bool (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0))) (hol.and hol.true hol.true) hol.true (thm_2804 p_1 hyp_1) thm_2805.

(; Theorem: |- ((= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) Data.Bool.T) ;)

(; dict ;)

def thm_2807 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.TRANS hol.bool ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0))) hol.true (hol.EQ_MP (hol.eq hol.bool ((i_2 : hol.term hol.ind => (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) HOLLight_2EIND__0) ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0)) (hol.eq hol.bool ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (p_1 (HOLLight_2Emk__num HOLLight_2EIND__0)))) (thm_2783 p_1) (thm_2780 p_1)) (thm_2806 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_2808 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0)) (hol.and hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) hol.true thm_191 (thm_2807 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i))) (Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))))) ;)

(; dict ;)

def thm_2809 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) i_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) i_1) (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))) thm_126 (thm_2778 i_1 p_2).

(; Theorem: |- ((= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) (HOLLight.IND_SUC i))) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_2810 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) (HOLLight_2EIND__SUC i_1)) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.ind hol.bool (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC i_1) (thm_2779 p_2) (thm_218 i_1).

(; Theorem: |- ((= (= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) (HOLLight.IND_SUC i)))) (= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2811 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) (HOLLight_2EIND__SUC i_1))) (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) (HOLLight_2EIND__SUC i_1)) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1)) thm_561 (thm_2810 i_1 p_2).

(; Theorem: |- ((= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_2812 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.BETA_CONV hol.ind hol.bool (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1).

(; Theorem: |- ((= ((= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) (HOLLight.IND_SUC i))) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))) ((= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_2813 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) (HOLLight_2EIND__SUC i_1)) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1))) (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) (HOLLight_2EIND__SUC i_1))) (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1))) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) (thm_2811 i_1 p_2) (thm_2812 i_1 p_2).

(; Theorem: |- ((= ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))) ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_2814 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) i_1) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1))) (hol.imp (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) i_1)) (hol.imp (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1)))) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) (thm_2809 i_1 p_2) (hol.EQ_MP (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) (HOLLight_2EIND__SUC i_1)) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1))) (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_1)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))))) (thm_2813 i_1 p_2) (thm_2810 i_1 p_2)).

(; Theorem: |- ((= \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))) \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_2815 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.ABS_THM hol.ind hol.bool (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => thm_2814 i_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i))))) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) ;)

(; dict ;)

def thm_2816 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) thm_72 (thm_2815 p_1).

(; Theorem: |- ((= ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))))) ;)

(; dict ;)

def thm_2817 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))))) (hol.and hol.true (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.APP_THM hol.bool hol.bool (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0)) (hol.and hol.true) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2)))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (thm_2808 p_1 hyp_1) (thm_2816 p_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))))) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) ;)

(; dict ;)

def thm_2818 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (t_1 : hol.term hol.bool => thm_872 t_1) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))).

(; Theorem: |- ((= ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) ;)

(; dict ;)

def thm_2819 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.TRANS hol.bool (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))))) (hol.and hol.true (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (thm_2817 p_1 hyp_1) (thm_2818 p_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i))))))) (Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))))) ;)

(; dict ;)

def thm_2820 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2)))))) (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) thm_126 (thm_2819 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> (HOLLight.NUM_REP a))) (Data.Bool.==> (HOLLight.NUM_REP a))) ;)

(; dict ;)

def thm_2821 : a_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (HOLLight_2ENUM__REP a_1)) (hol.imp (HOLLight_2ENUM__REP a_1))) :=
  a_1 : hol.term hol.ind => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (HOLLight_2ENUM__REP a_1)).

(; Theorem: |- ((= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a)) ;)

(; dict ;)

def thm_2822 : a_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) a_1) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1)) :=
  a_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.ind hol.bool (i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1 a_1 (thm_2779 p_2) (thm_404 a_1).

(; Theorem: |- ((= (= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) a))) (= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a))) ;)

(; dict ;)

def thm_2823 : a_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) a_1)) (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1))) :=
  a_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) a_1) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1) thm_561 (thm_2822 a_1 p_2).

(; Theorem: |- ((= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))) ;)

(; dict ;)

def thm_2824 : a_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1) (hol.and (HOLLight_2ENUM__REP a_1) (p_2 (HOLLight_2Emk__num a_1)))) :=
  a_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.BETA_CONV hol.ind hol.bool (i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1.

(; Theorem: |- ((= ((= (\lambda i. (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i) a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a))) ((= (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))) ;)

(; dict ;)

def thm_2825 : a_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) a_1) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1)) (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1) (hol.and (HOLLight_2ENUM__REP a_1) (p_2 (HOLLight_2Emk__num a_1))))) :=
  a_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) a_1)) (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1)) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) a_1) (hol.and (HOLLight_2ENUM__REP a_1) (p_2 (HOLLight_2Emk__num a_1))) (thm_2823 a_1 p_2) (thm_2824 a_1 p_2).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a))) ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))) ;)

(; dict ;)

def thm_2826 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> a_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2)) (hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => a_2 : hol.term hol.ind => hol.APP_THM hol.bool hol.bool (hol.imp (HOLLight_2ENUM__REP a_2)) (hol.imp (HOLLight_2ENUM__REP a_2)) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))) (thm_2821 a_2) (hol.EQ_MP (hol.eq hol.bool ((i_3 : hol.term hol.ind => (i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_1 (HOLLight_2Emk__num i_4))) i_3) a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2)) (hol.eq hol.bool ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))) (thm_2825 a_2 p_1) (thm_2822 a_2 p_1)).

(; Theorem: |- ((= \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a))) \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))) ;)

(; dict ;)

def thm_2827 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2)) (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.ABS_THM hol.ind hol.bool (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2)) (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))) (a_2 : hol.term hol.ind => thm_2826 p_1 a_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a)))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))) ;)

(; dict ;)

def thm_2828 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2)) (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))) thm_72 (thm_2827 p_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a))))) ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) ;)

(; dict ;)

def thm_2829 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2)))) (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2)))))) (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) (thm_2820 p_1 hyp_1) (thm_2828 p_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a)))))) (Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))))) ;)

(; dict ;)

def thm_2830 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2))))) (hol.imp (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2)))) (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) thm_126 (thm_2829 p_1 hyp_1).

(; Theorem: |- ((= (p n)) (p n)) ;)

(; dict ;)

def thm_2831 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (p_2 n_1) (p_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (p_2 n_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a))))) (p n))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) (p n))) ;)

(; dict ;)

def thm_2832 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_2 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.and ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) a_3)))) (p_2 n_1)) (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_2 Number_2ENatural_2Ezero) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.and ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) a_3))))) (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))))) (p_2 n_1) (p_2 n_1) (thm_2830 p_2 hyp_1) (thm_2831 n_1 p_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) (p n))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a))))) (p n))) ;)

(; dict ;)

def thm_2833 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_2 Number_2ENatural_2Ezero) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) (hol.imp (hol.imp (hol.and ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) a_3)))) (p_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_2 Number_2ENatural_2Ezero) => hol.SYM hol.bool (hol.imp (hol.imp (hol.and ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) a_3)))) (p_2 n_1)) (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) (thm_2832 n_1 p_2 hyp_1).

(; Theorem: |- ((= \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_2834 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr hol.ind hol.bool) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))).

(; Theorem: |- ((= \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_2835 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS (hol.arr hol.ind hol.bool) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (thm_2834 p_1) (thm_2834 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) ;)

(; dict ;)

def thm_2836 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) thm_72 (thm_2835 p_1).

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) ;)

(; dict ;)

def thm_2837 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) -> hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) => hyp_1.

(; Theorem: |- (HOLLight.NUM_REP i) ;)

(; dict ;)

def thm_2838 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) -> hol.proof (HOLLight_2ENUM__REP i_2) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (p_1 (HOLLight_2Emk__num i_2)) (HOLLight_2ENUM__REP i_2) hyp_1.

(; Theorem: |- (HOLLight.NUM_REP i) ;)

(; dict ;)

def thm_2839 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) -> hol.proof (HOLLight_2ENUM__REP i_2) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) => hol.PROVE_HYP (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (HOLLight_2ENUM__REP i_2) (thm_2837 p_1 i_2 hyp_1) (hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) => thm_2838 p_1 i_2 hyp_2).

(; Theorem: |- (p (HOLLight.mk_num i)) ;)

(; dict ;)

def thm_2840 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))) -> hol.proof (p_2 (HOLLight_2Emk__num i_1)) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1)) hyp_1.

(; Theorem: |- (p (HOLLight.mk_num i)) ;)

(; dict ;)

def thm_2841 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))) -> hol.proof (p_2 (HOLLight_2Emk__num i_1)) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))) => hol.PROVE_HYP (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))) (p_2 (HOLLight_2Emk__num i_1)) (thm_2837 p_2 i_1 hyp_1) (hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP i_1) (p_2 (HOLLight_2Emk__num i_1))) => thm_2840 i_1 p_2 hyp_2).

(; Theorem: |- (p (HOLLight.mk_num i)) ;)

(; dict ;)

def thm_2842 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_2 (HOLLight_2Emk__num i_1)) -> hol.proof (p_2 (HOLLight_2Emk__num i_1)) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_2 (HOLLight_2Emk__num i_1)) => hyp_1.

(; Theorem: |- (HOLLight.NUM_REP (HOLLight.IND_SUC i)) ;)

(; dict ;)

def thm_2843 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => thm_2693 i_1 (thm_2687 i_1 hyp_1).

(; Theorem: |- ((= (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_2844 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) -> hol.proof (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_121 p_1 q_2 hyp_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) hyp_1.

(; Theorem: |- ((= (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_2845 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => hol.PROVE_HYP (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))))) (thm_2843 i_1 hyp_1) (hyp_2 : hol.proof (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1)) => thm_2844 i_1 p_2 hyp_2).

(; Theorem: |- ((= (= (HOLLight.mk_num (HOLLight.IND_SUC i)))) (= (HOLLight.mk_num (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2846 : i_1 : hol.term hol.ind -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))).

(; Theorem: |- ((= (Number.Natural.suc (HOLLight.mk_num i))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num (HOLLight.mk_num i))))) ;)

(; dict ;)

def thm_2847 : i_1 : hol.term hol.ind -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))))) :=
  i_1 : hol.term hol.ind => (n_1 : hol.term Number_2ENatural_2Enatural => thm_519 n_1) (HOLLight_2Emk__num i_1).

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC i))) (Number.Natural.suc (HOLLight.mk_num i)))) ((= (HOLLight.mk_num (HOLLight.IND_SUC i))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num (HOLLight.mk_num i)))))) ;)

(; dict ;)

def thm_2848 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)))))) :=
  i_1 : hol.term hol.ind => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)))) (thm_2846 i_1) (thm_2847 i_1).

(; Theorem: |- ((= ((= (HOLLight.mk_num (HOLLight.IND_SUC i))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num (HOLLight.mk_num i)))))) ((= (HOLLight.mk_num (HOLLight.IND_SUC i))) (Number.Natural.suc (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2849 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => hol.SYM hol.bool (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))))) (thm_2848 i_1).

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num i))) i) ;)

(; dict ;)

def thm_2850 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) => hyp_1.

(; Theorem: |- ((= i) (HOLLight.dest_num (HOLLight.mk_num i))) ;)

(; dict ;)

def thm_2851 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) -> hol.proof (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) => hol.SYM hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1 (thm_2850 i_1 hyp_1).

(; Theorem: |- ((= i) (HOLLight.dest_num (HOLLight.mk_num i))) ;)

(; dict ;)

def thm_2852 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) -> hol.proof (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) => hyp_1.

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num i))) i) ;)

(; dict ;)

def thm_2853 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) => hol.SYM hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) (thm_2852 i_1 hyp_1).

(; Theorem: |- ((= ((= i) (HOLLight.dest_num (HOLLight.mk_num i)))) ((= (HOLLight.dest_num (HOLLight.mk_num i))) i)) ;)

(; dict ;)

def thm_2854 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1)) :=
  i_1 : hol.term hol.ind => hol.PROP_EXT (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) (hyp_1 : hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) => thm_2851 i_1 hyp_1) (hyp_1 : hol.proof (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) => thm_2853 i_1 hyp_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num i))) i)) ((= i) (HOLLight.dest_num (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2855 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => hol.SYM hol.bool (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) (thm_2854 i_1).

(; Theorem: |- ((= ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) (HOLLight.NUM_REP r))) ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) (HOLLight.NUM_REP r))) ;)

(; dict ;)

def thm_2856 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1))) :=
  r_1 : hol.term hol.ind => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)).

(; Theorem: |- ((= ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) (HOLLight.NUM_REP r))) ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) (HOLLight.NUM_REP r))) ;)

(; dict ;)

def thm_2857 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1))) :=
  r_1 : hol.term hol.ind => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (thm_2856 r_1) (thm_2856 r_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) (HOLLight.NUM_REP r)) ;)

(; dict ;)

def thm_2858 : r_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) :=
  r_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) => hyp_1.

(; Theorem: |- ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) ;)

(; dict ;)

def thm_2859 : r_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) :=
  r_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) => hol.SYM hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1) (thm_2858 r_1 hyp_1).

(; Theorem: |- ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) ;)

(; dict ;)

def thm_2860 : r_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) :=
  r_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) => hyp_1.

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) (HOLLight.NUM_REP r)) ;)

(; dict ;)

def thm_2861 : r_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) :=
  r_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) => hol.SYM hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (thm_2860 r_1 hyp_1).

(; Theorem: |- ((= ((= (HOLLight.NUM_REP r)) ((= (HOLLight.dest_num (HOLLight.mk_num r))) r))) ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) (HOLLight.NUM_REP r))) ;)

(; dict ;)

def thm_2862 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1))) :=
  r_1 : hol.term hol.ind => hol.PROP_EXT (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) => thm_2859 r_1 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) => thm_2861 r_1 hyp_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num r))) r)) (HOLLight.NUM_REP r)) ;)

(; dict ;)

def thm_2863 : r_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) :=
  r_1 : hol.term hol.ind => hol.EQ_MP (hol.eq hol.bool (HOLLight_2ENUM__REP r_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (thm_2862 r_1) (thm_507 r_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num i))) i)) (HOLLight.NUM_REP i)) ;)

(; dict ;)

def thm_2864 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) (HOLLight_2ENUM__REP i_1)) :=
  i_1 : hol.term hol.ind => (r_1 : hol.term hol.ind => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num r_1)) r_1) (HOLLight_2ENUM__REP r_1)) (thm_2857 r_1) (thm_2863 r_1)) i_1.

(; Theorem: |- ((= (HOLLight.NUM_REP i)) ((= (HOLLight.dest_num (HOLLight.mk_num i))) i)) ;)

(; dict ;)

def thm_2865 : i_1 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP i_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1)) :=
  i_1 : hol.term hol.ind => hol.SYM hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) (HOLLight_2ENUM__REP i_1) (thm_2864 i_1).

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num i))) i) ;)

(; dict ;)

def thm_2866 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => hol.EQ_MP (HOLLight_2ENUM__REP i_1) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) (thm_2865 i_1) (thm_2687 i_1 hyp_1).

(; Theorem: |- ((= i) (HOLLight.dest_num (HOLLight.mk_num i))) ;)

(; dict ;)

def thm_2867 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => hol.EQ_MP (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) i_1) (hol.eq hol.ind i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) (thm_2855 i_1) (thm_2866 i_1 hyp_1).

(; Theorem: |- ((= (HOLLight.IND_SUC i)) (HOLLight.IND_SUC (HOLLight.dest_num (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2868 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (hol.eq hol.ind (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => hol.APP_THM hol.ind hol.ind HOLLight_2EIND__SUC HOLLight_2EIND__SUC i_1 (HOLLight_2Edest__num (HOLLight_2Emk__num i_1)) thm_2668 (thm_2867 i_1 hyp_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC i))) (HOLLight.mk_num (HOLLight.IND_SUC (HOLLight.dest_num (HOLLight.mk_num i))))) ;)

(; dict ;)

def thm_2869 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => hol.APP_THM hol.ind Number_2ENatural_2Enatural HOLLight_2Emk__num HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1) (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))) thm_647 (thm_2868 i_1 hyp_1).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC i))) (Number.Natural.suc (HOLLight.mk_num i))) ;)

(; dict ;)

def thm_2870 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (HOLLight_2ENUM__REP i_1) => hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (HOLLight_2Emk__num (HOLLight_2EIND__SUC (HOLLight_2Edest__num (HOLLight_2Emk__num i_1))))) (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (thm_2849 i_1) (thm_2869 i_1 hyp_1).

(; Theorem: |- ((= (= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i))))) (= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_2871 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))).

(; Theorem: |- ((= (\lambda _1930. (p _1930) (Number.Natural.suc (HOLLight.mk_num i)))) (p (Number.Natural.suc (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2872 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)).

(; Theorem: |- ((= ((= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i)))) (\lambda _1930. (p _1930) (Number.Natural.suc (HOLLight.mk_num i))))) ((= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i)))) (p (Number.Natural.suc (HOLLight.mk_num i))))) ;)

(; dict ;)

def thm_2873 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (thm_2871 i_1 p_2) (thm_2872 i_1 p_2).

(; Theorem: |- ((= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i)))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2874 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)).

(; Theorem: |- ((= (= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i))))) (= (p (HOLLight.mk_num (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_2875 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) thm_561 (thm_2874 i_1 p_2).

(; Theorem: |- ((= (p (Number.Natural.suc (HOLLight.mk_num i)))) (p (Number.Natural.suc (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2876 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))).

(; Theorem: |- ((= ((= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i)))) (p (Number.Natural.suc (HOLLight.mk_num i))))) ((= (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) (p (Number.Natural.suc (HOLLight.mk_num i))))) ;)

(; dict ;)

def thm_2877 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (thm_2875 i_1 p_2) (thm_2876 i_1 p_2).

(; Theorem: |- ((= ((= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i)))) (\lambda _1930. (p _1930) (Number.Natural.suc (HOLLight.mk_num i))))) ((= (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) (p (Number.Natural.suc (HOLLight.mk_num i))))) ;)

(; dict ;)

def thm_2878 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) (thm_2873 i_1 p_2) (thm_2877 i_1 p_2).

(; Theorem: |- ((= \lambda _1930. (p _1930)) \lambda _1930. (p _1930)) ;)

(; dict ;)

def thm_2879 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (__1930_2 : hol.term Number_2ENatural_2Enatural => p_1 __1930_2) (__1930_2 : hol.term Number_2ENatural_2Enatural => p_1 __1930_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (__1930_2 : hol.term Number_2ENatural_2Enatural => p_1 __1930_2).

(; Theorem: |- ((= (HOLLight.mk_num (HOLLight.IND_SUC i))) (Number.Natural.suc (HOLLight.mk_num i))) ;)

(; dict ;)

def thm_2880 : i_1 : hol.term hol.ind -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) -> hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) :=
  i_1 : hol.term hol.ind => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) => hyp_1.

(; Theorem: |- ((= (\lambda _1930. (p _1930) (HOLLight.mk_num (HOLLight.IND_SUC i)))) (\lambda _1930. (p _1930) (Number.Natural.suc (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2881 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) -> hol.proof (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) => hol.APP_THM Number_2ENatural_2Enatural hol.bool (__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)) (thm_2879 p_2) (thm_2880 i_1 hyp_1).

(; Theorem: |- ((= (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) (p (Number.Natural.suc (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2882 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) -> hol.proof (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) => hol.EQ_MP (hol.eq hol.bool ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) ((__1930_3 : hol.term Number_2ENatural_2Enatural => p_2 __1930_3) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) (thm_2878 i_1 p_2) (thm_2881 i_1 p_2 hyp_1).

(; Theorem: |- ((= (p (Number.Natural.suc (HOLLight.mk_num i)))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2883 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) -> hol.proof (hol.eq hol.bool (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) => hol.SYM hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (thm_2882 i_1 p_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))) ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))) ;)

(; dict ;)

def thm_2884 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))) (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))).

(; Theorem: |- ((= ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))) ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))) ;)

(; dict ;)

def thm_2885 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))) (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS hol.bool (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))) (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))) (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))) (thm_2884 n_1 p_2) (thm_2884 n_1 p_2).

(; Theorem: |- ((Data.Bool.==> (p n)) (p (Number.Natural.suc n))) ;)

(; dict ;)

def thm_2886 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) -> hol.proof (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => thm_2774 p_2 hyp_1 n_1.

(; Theorem: |- ((Data.Bool.==> (p (HOLLight.mk_num i))) (p (Number.Natural.suc (HOLLight.mk_num i)))) ;)

(; dict ;)

def thm_2887 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) -> hol.proof (hol.imp (p_2 (HOLLight_2Emk__num i_1)) (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1)))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => (n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => hol.EQ_MP (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))) (hol.imp (p_2 n_1) (p_2 (Number_2ENatural_2Esuc n_1))) (thm_2885 n_1 p_2) (thm_2886 n_1 p_2 hyp_1)) (HOLLight_2Emk__num i_1) p_2 hyp_1.

(; Theorem: |- (p (Number.Natural.suc (HOLLight.mk_num i))) ;)

(; dict ;)

def thm_2888 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_2 (HOLLight_2Emk__num i_1)) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) -> hol.proof (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_2 (HOLLight_2Emk__num i_1)) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => thm_2887 i_1 p_2 hyp_2 (thm_2842 i_1 p_2 hyp_1).

(; Theorem: |- (p (HOLLight.mk_num (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_2889 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_2 (HOLLight_2Emk__num i_1)) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) -> hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) -> hol.proof (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_2 (HOLLight_2Emk__num i_1)) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => hyp_3 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) => hol.EQ_MP (p_2 (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (thm_2883 i_1 p_2 hyp_3) (thm_2888 i_1 p_2 hyp_1 hyp_2).

(; Theorem: |- (p (HOLLight.mk_num (HOLLight.IND_SUC i))) ;)

(; dict ;)

def thm_2890 : i_1 : hol.term hol.ind -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_2 (HOLLight_2Emk__num i_1)) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) -> hyp_3 : hol.proof (HOLLight_2ENUM__REP i_1) -> hol.proof (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) :=
  i_1 : hol.term hol.ind => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_2 (HOLLight_2Emk__num i_1)) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => hyp_3 : hol.proof (HOLLight_2ENUM__REP i_1) => hol.PROVE_HYP (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1))) (thm_2870 i_1 hyp_3) (hyp_4 : hol.proof (hol.eq Number_2ENatural_2Enatural (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_1)) (Number_2ENatural_2Esuc (HOLLight_2Emk__num i_1))) => thm_2889 i_1 p_2 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2891 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (p_1 (HOLLight_2Emk__num i_2)) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) -> hyp_3 : hol.proof (HOLLight_2ENUM__REP i_2) -> hol.proof (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (p_1 (HOLLight_2Emk__num i_2)) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) => hyp_3 : hol.proof (HOLLight_2ENUM__REP i_2) => hol.EQ_MP (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) (thm_2845 i_2 p_1 hyp_3) (thm_2890 i_2 p_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2892 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (p_1 (HOLLight_2Emk__num i_2)) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) -> hyp_3 : hol.proof (HOLLight_2ENUM__REP i_2) -> hol.proof (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (p_1 (HOLLight_2Emk__num i_2)) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) => hyp_3 : hol.proof (HOLLight_2ENUM__REP i_2) => hol.PROVE_HYP (p_1 (HOLLight_2Emk__num i_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) (thm_2842 i_2 p_1 hyp_1) (hyp_4 : hol.proof (p_1 (HOLLight_2Emk__num i_2)) => thm_2891 p_1 i_2 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2893 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (p_1 (HOLLight_2Emk__num i_2)) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) -> hyp_3 : hol.proof (HOLLight_2ENUM__REP i_2) -> hol.proof (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (p_1 (HOLLight_2Emk__num i_2)) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) => hyp_3 : hol.proof (HOLLight_2ENUM__REP i_2) => hol.PROVE_HYP (HOLLight_2ENUM__REP i_2) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) (thm_2687 i_2 hyp_3) (hyp_4 : hol.proof (HOLLight_2ENUM__REP i_2) => thm_2892 p_1 i_2 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2894 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) -> hyp_2 : hol.proof (HOLLight_2ENUM__REP i_2) -> hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) -> hol.proof (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) => hyp_2 : hol.proof (HOLLight_2ENUM__REP i_2) => hyp_3 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) => hol.PROVE_HYP (p_1 (HOLLight_2Emk__num i_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) (thm_2841 i_2 p_1 hyp_3) (hyp_4 : hol.proof (p_1 (HOLLight_2Emk__num i_2)) => thm_2893 p_1 i_2 hyp_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))) ;)

(; dict ;)

def thm_2895 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) -> hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) -> hol.proof (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) => hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) => hol.PROVE_HYP (HOLLight_2ENUM__REP i_2) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))) (thm_2839 p_1 i_2 hyp_2) (hyp_3 : hol.proof (HOLLight_2ENUM__REP i_2) => thm_2894 p_1 i_2 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_2896 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) -> hol.proof (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_3) (p_1 (Number_2ENatural_2Esuc n_3)))) => hyp_2 : hol.proof (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) => thm_2895 p_1 i_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_2897 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) -> hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) => i_2 : hol.term hol.ind => thm_2896 p_1 i_2 hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) Data.Bool.T)) ((= ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) Data.Bool.T)) ;)

(; dict ;)

def thm_2898 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) Data.Bool.T)) ((= ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) Data.Bool.T)) ;)

(; dict ;)

def thm_2899 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) (thm_2898 p_1 i_2) (thm_2898 p_1 i_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) ((= ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) Data.Bool.T)) ;)

(; dict ;)

def thm_2900 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => (t_1 : hol.term hol.bool => thm_173 t_1) (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))).

(; Theorem: |- (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) ;)

(; dict ;)

def thm_2901 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) -> hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))) ;)

(; dict ;)

def thm_2902 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) -> hol.proof (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) => thm_2901 p_1 hyp_1 i_2.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) Data.Bool.T) ;)

(; dict ;)

def thm_2903 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> i_2 : hol.term hol.ind -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => i_2 : hol.term hol.ind => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) => hol.EQ_MP (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) (thm_2900 p_1 i_2) (thm_2902 p_1 i_2 hyp_1).

(; Theorem: |- ((= \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))) \lambda i. Data.Bool.T) ;)

(; dict ;)

def thm_2904 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) => hol.ABS_THM hol.ind hol.bool (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => hol.true) (i_2 : hol.term hol.ind => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) hol.true) (thm_2899 p_1 i_2) (thm_2903 p_1 i_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda i. Data.Bool.T)) ;)

(; dict ;)

def thm_2905 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.true))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) => hol.APP_THM (hol.arr hol.ind hol.bool) hol.bool (hol.forall hol.ind) (hol.forall hol.ind) (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))) (i_2 : hol.term hol.ind => hol.true) thm_72 (thm_2904 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_2906 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda i. t)) t)) ((= (Data.Bool.! \lambda i. t)) t)) ;)

(; dict ;)

def thm_2907 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (i_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (i_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (i_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda i. t)) t)) ;)

(; dict ;)

def thm_2908 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (i_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (i_2 : hol.term A => t_1)) t_1) (thm_2906 A t_1) (thm_2907 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. t)) t) ;)

(; dict ;)

def thm_2909 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => thm_60 A t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda i. t)) t) ;)

(; dict ;)

def thm_2910 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (i_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (i_2 : hol.term A => t_1)) t_1) (thm_2908 A t_1) (thm_2909 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda i. t)) t) ;)

(; dict ;)

def thm_2911 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => t_1)) t_1) :=
  t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_2910 A t_1) hol.ind t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda i. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_2912 : hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.true)) hol.true) :=
  (t_1 : hol.term hol.bool => thm_2911 t_1) hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) Data.Bool.T) ;)

(; dict ;)

def thm_2913 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) => hol.TRANS hol.bool (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.true)) hol.true (thm_2905 p_1 hyp_1) thm_2912.

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i)))))))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_2914 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) (hol.imp hol.true)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) hol.true thm_126 (thm_2913 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))) ;)

(; dict ;)

def thm_2915 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) ((Data.Bool.==> Data.Bool.T) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) ;)

(; dict ;)

def thm_2916 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) (hol.imp hol.true (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2))))))) (hol.imp hol.true) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) (thm_2914 p_1 hyp_1) (thm_2915 p_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))) ;)

(; dict ;)

def thm_2917 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (t_1 : hol.term hol.bool => thm_543 t_1) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))) ;)

(; dict ;)

def thm_2918 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) => hol.TRANS hol.bool (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) (hol.imp hol.true (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) (thm_2916 p_1 hyp_1) (thm_2917 p_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))))) (Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) ;)

(; dict ;)

def thm_2919 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))))) (hol.imp (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2)))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) thm_126 (thm_2918 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) (p n))) ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))) (p n))) ;)

(; dict ;)

def thm_2920 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))) (p_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))))) (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1) (p_2 n_1) (thm_2919 p_2 hyp_1) (thm_2831 n_1 p_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))) (p n))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) (p n))) ;)

(; dict ;)

def thm_2921 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))) (p_2 n_1)) (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) => hol.SYM hol.bool (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))) (p_2 n_1)) (thm_2920 n_1 p_2 hyp_1).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.dest_num n))) ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_2922 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (r_1 : hol.term hol.ind => thm_507 r_1) (HOLLight_2Edest__num n_1).

(; Theorem: |- ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n)) ;)

(; dict ;)

def thm_2923 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.ind HOLLight_2Edest__num HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1 thm_1260 (thm_2737 n_1).

(; Theorem: |- ((= (= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n))))) (= (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_2924 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.ind hol.bool) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.ind (hol.arr hol.ind hol.bool) (hol.eq hol.ind) (hol.eq hol.ind) (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1) thm_1298 (thm_2923 n_1).

(; Theorem: |- ((= (HOLLight.dest_num n)) (HOLLight.dest_num n)) ;)

(; dict ;)

def thm_2925 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.ind (HOLLight_2Edest__num n_1) (HOLLight_2Edest__num n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.ind (HOLLight_2Edest__num n_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) ((= (HOLLight.dest_num n)) (HOLLight.dest_num n))) ;)

(; dict ;)

def thm_2926 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num n_1) (HOLLight_2Edest__num n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.ind hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)))) (hol.eq hol.ind (HOLLight_2Edest__num n_1)) (HOLLight_2Edest__num n_1) (HOLLight_2Edest__num n_1) (thm_2924 n_1) (thm_2925 n_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num n)) (HOLLight.dest_num n))) Data.Bool.T) ;)

(; dict ;)

def thm_2927 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num n_1) (HOLLight_2Edest__num n_1)) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (x_1 : hol.term hol.ind => thm_2701 x_1) (HOLLight_2Edest__num n_1).

(; Theorem: |- ((= ((= (HOLLight.dest_num (HOLLight.mk_num (HOLLight.dest_num n)))) (HOLLight.dest_num n))) Data.Bool.T) ;)

(; dict ;)

def thm_2928 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num n_1) (HOLLight_2Edest__num n_1)) hol.true (thm_2926 n_1) (thm_2927 n_1).

(; Theorem: |- ((= (HOLLight.NUM_REP (HOLLight.dest_num n))) Data.Bool.T) ;)

(; dict ;)

def thm_2929 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) (hol.eq hol.ind (HOLLight_2Edest__num (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (HOLLight_2Edest__num n_1)) hol.true (thm_2922 n_1) (thm_2928 n_1).

(; Theorem: |- ((= (Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n)))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_2930 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) (hol.imp hol.true)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) hol.true thm_126 (thm_2929 n_1).

(; Theorem: |- ((= (Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n)))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_2931 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1))) (hol.and hol.true)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_1)) hol.true thm_191 (thm_2929 n_1).

(; Theorem: |- ((= (p (HOLLight.mk_num (HOLLight.dest_num n)))) (p n)) ;)

(; dict ;)

def thm_2932 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (p_2 (HOLLight_2Emk__num (HOLLight_2Edest__num n_1))) (p_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM Number_2ENatural_2Enatural hol.bool p_2 p_2 (HOLLight_2Emk__num (HOLLight_2Edest__num n_1)) n_1 (thm_2789 p_2) (thm_2737 n_1).

(; Theorem: |- ((= ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n))))) ((Data.Bool./\ Data.Bool.T) (p n))) ;)

(; dict ;)

def thm_2933 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2)))) (hol.and hol.true (p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2))) (hol.and hol.true) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))) (p_1 n_2) (thm_2931 n_2) (thm_2932 n_2 p_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (p n))) (p n)) ;)

(; dict ;)

def thm_2934 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.and hol.true (p_2 n_1)) (p_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (t_1 : hol.term hol.bool => thm_872 t_1) (p_2 n_1).

(; Theorem: |- ((= ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n))))) (p n)) ;)

(; dict ;)

def thm_2935 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2)))) (p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2)))) (hol.and hol.true (p_1 n_2)) (p_1 n_2) (thm_2933 p_1 n_2) (thm_2934 n_2 p_1).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n)))))) ((Data.Bool.==> Data.Bool.T) (p n))) ;)

(; dict ;)

def thm_2936 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (hol.imp hol.true (p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2))) (hol.imp hol.true) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2)))) (p_1 n_2) (thm_2930 n_2) (thm_2935 p_1 n_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) (p n))) (p n)) ;)

(; dict ;)

def thm_2937 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (p_2 n_1)) (p_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (t_1 : hol.term hol.bool => thm_543 t_1) (p_2 n_1).

(; Theorem: |- ((= ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n)))))) (p n)) ;)

(; dict ;)

def thm_2938 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (hol.imp hol.true (p_1 n_2)) (p_1 n_2) (thm_2936 p_1 n_2) (thm_2937 n_2 p_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n))))))) (Data.Bool.==> (p n))) ;)

(; dict ;)

def thm_2939 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2)))))) (hol.imp (p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2) thm_126 (thm_2938 p_1 n_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n)))))) (p n))) ((Data.Bool.==> (p n)) (p n))) ;)

(; dict ;)

def thm_2940 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2)) (hol.imp (p_1 n_2) (p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2)))))) (hol.imp (p_1 n_2)) (p_1 n_2) (p_1 n_2) (thm_2939 p_1 n_2) (thm_2831 n_2 p_1).

(; Theorem: |- ((= ((Data.Bool.==> (p n)) (p n))) Data.Bool.T) ;)

(; dict ;)

def thm_2941 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (p_2 n_1) (p_2 n_1)) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (t_1 : hol.term hol.bool => thm_564 t_1) (p_2 n_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n)))))) (p n))) Data.Bool.T) ;)

(; dict ;)

def thm_2942 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2)) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2)) (hol.imp (p_1 n_2) (p_1 n_2)) hol.true (thm_2940 p_1 n_2) (thm_2941 n_2 p_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n)))))) (p n))) ;)

(; dict ;)

def thm_2943 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.SYM hol.bool (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2)) hol.true (thm_2942 p_1 n_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n)))))) (p n)) ;)

(; dict ;)

def thm_2944 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP hol.true (hol.imp (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) (p_1 n_2)) (thm_2943 p_1 n_2) thm_4.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))) ;)

(; dict ;)

def thm_2945 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) -> hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (hol.and (HOLLight_2ENUM__REP a_2) (p_1 (HOLLight_2Emk__num a_2))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (HOLLight.NUM_REP (HOLLight.dest_num n))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.dest_num n))) (p (HOLLight.mk_num (HOLLight.dest_num n))))) ;)

(; dict ;)

def thm_2946 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> n_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_1 (HOLLight_2Emk__num a_3))))) -> hol.proof (hol.imp (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (hol.and (HOLLight_2ENUM__REP (HOLLight_2Edest__num n_2)) (p_1 (HOLLight_2Emk__num (HOLLight_2Edest__num n_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => n_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_1 (HOLLight_2Emk__num a_3))))) => thm_2945 p_1 hyp_1 (HOLLight_2Edest__num n_2).

(; Theorem: |- (p n) ;)

(; dict ;)

def thm_2947 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))) -> hol.proof (p_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))) => thm_2944 p_2 n_1 (thm_2946 p_2 n_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a)))))) (p n)) ;)

(; dict ;)

def thm_2948 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))) (p_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))) => thm_2947 n_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) (p n)) ;)

(; dict ;)

def thm_2949 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) -> hol.proof (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) => hol.EQ_MP (hol.imp (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3))))) (p_2 n_1)) (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) (thm_2921 n_1 p_2 hyp_1) (thm_2948 n_1 p_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i)))) ((Data.Bool./\ (HOLLight.NUM_REP (HOLLight.IND_SUC i))) (p (HOLLight.mk_num (HOLLight.IND_SUC i))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) ((Data.Bool./\ (HOLLight.NUM_REP a)) (p (HOLLight.mk_num a))))))) (p n)) ;)

(; dict ;)

def thm_2950 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) -> hol.proof (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => hol.PROVE_HYP (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) (hol.EQ_MP (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (thm_2836 p_2) (thm_2897 p_2 hyp_1)) (hyp_2 : hol.proof (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) => thm_2949 n_1 p_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a))))) (p n)) ;)

(; dict ;)

def thm_2951 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_2 Number_2ENatural_2Ezero) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) -> hol.proof (hol.imp (hol.imp (hol.and ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) a_3)))) (p_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_2 Number_2ENatural_2Ezero) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => hol.EQ_MP (hol.imp (hol.imp (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp (hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) (hol.and (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_3)) (p_2 (HOLLight_2Emk__num (HOLLight_2EIND__SUC i_3)))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) (hol.and (HOLLight_2ENUM__REP a_3) (p_2 (HOLLight_2Emk__num a_3)))))) (p_2 n_1)) (hol.imp (hol.imp (hol.and ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_2 (HOLLight_2Emk__num i_3))) HOLLight_2EIND__0) (hol.forall hol.ind (i_3 : hol.term hol.ind => hol.imp ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) i_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) (HOLLight_2EIND__SUC i_3))))) (hol.forall hol.ind (a_3 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_3) ((i_4 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_4) (p_2 (HOLLight_2Emk__num i_4))) a_3)))) (p_2 n_1)) (thm_2833 n_1 p_2 hyp_1) (thm_2950 n_1 p_2 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (HOLLight.NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (HOLLight.NUM_REP i))))))) ;)

(; dict ;)

def thm_2952 : hyp_1 : hol.proof (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) -> hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) :=
  hyp_1 : hol.proof (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_113 p_1 q_2 hyp_1) (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (NUM_REP' a)))))) (Data.Bool.! \lambda a. ((= (HOLLight.NUM_REP a)) ((Data.Bool.\/ ((= a) HOLLight.IND_0)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((= a) (HOLLight.IND_SUC i))) (HOLLight.NUM_REP i))))))) ;)

(; dict ;)

def thm_2953 : hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) :=
  hol.PROVE_HYP (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) thm_501 (hyp_1 : hol.proof (hol.and (hol.and (HOLLight_2ENUM__REP HOLLight_2EIND__0) (hol.forall hol.ind (i_1 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP i_1) (HOLLight_2ENUM__REP (HOLLight_2EIND__SUC i_1))))) (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))))) => thm_2952 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (NUM_REP' a))))) ;)

(; dict ;)

def thm_2954 : hyp_1 : hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) -> hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) :=
  hyp_1 : hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_233 q_1 p_2 hyp_1) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2)))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda NUM_REP'. ((Data.Bool.==> ((Data.Bool./\ (NUM_REP' HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (NUM_REP' i)) (NUM_REP' (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (NUM_REP' a))))) ;)

(; dict ;)

def thm_2955 : hol.proof (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) :=
  hol.PROVE_HYP (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) thm_2953 (hyp_1 : hol.proof (hol.and (hol.forall (hol.arr hol.ind hol.bool) (NUM__REP_27_1 : hol.term (hol.arr hol.ind hol.bool) => hol.imp (hol.and (NUM__REP_27_1 HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp (NUM__REP_27_1 i_2) (NUM__REP_27_1 (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) (NUM__REP_27_1 a_2))))) (hol.forall hol.ind (a_1 : hol.term hol.ind => hol.eq hol.bool (HOLLight_2ENUM__REP a_1) (hol.or (hol.eq hol.ind a_1 HOLLight_2EIND__0) (Data_2EBool_2E_3F (hol.arr (hol.arr hol.ind hol.bool) hol.bool) (i_2 : hol.term hol.ind => hol.and (hol.eq hol.ind a_1 (HOLLight_2EIND__SUC i_2)) (HOLLight_2ENUM__REP i_2))))))) => thm_2954 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) HOLLight.IND_0)) (Data.Bool.! \lambda i. ((Data.Bool.==> (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) i)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) (HOLLight.IND_SUC i)))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (HOLLight.NUM_REP a)) (\lambda i. ((Data.Bool./\ (HOLLight.NUM_REP i)) (p (HOLLight.mk_num i))) a)))) ;)

(; dict ;)

def thm_2956 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.imp (hol.and ((i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))) HOLLight_2EIND__0) (hol.forall hol.ind (i_2 : hol.term hol.ind => hol.imp ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) i_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) (HOLLight_2EIND__SUC i_2))))) (hol.forall hol.ind (a_2 : hol.term hol.ind => hol.imp (HOLLight_2ENUM__REP a_2) ((i_3 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_3) (p_1 (HOLLight_2Emk__num i_3))) a_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_2955 (i_2 : hol.term hol.ind => hol.and (HOLLight_2ENUM__REP i_2) (p_1 (HOLLight_2Emk__num i_2))).

(; Theorem: |- (p n) ;)

(; dict ;)

def thm_2957 : n_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_2 Number_2ENatural_2Ezero) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) -> hol.proof (p_2 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_2 Number_2ENatural_2Ezero) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.imp (p_2 n_3) (p_2 (Number_2ENatural_2Esuc n_3)))) => thm_2951 n_1 p_2 hyp_1 hyp_2 (thm_2956 p_2).

(; Theorem: |- (Data.Bool.! \lambda n. (p n)) ;)

(; dict ;)

def thm_2958 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) => n_2 : hol.term Number_2ENatural_2Enatural => thm_2957 n_2 p_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda n. (p n)) ;)

(; dict ;)

def thm_2959 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (thm_2774 p_1 hyp_2) (hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (thm_2777 p_1) (thm_2958 p_1 hyp_1 hyp_3)).

(; Theorem: |- (Data.Bool.! \lambda n. (p n)) ;)

(; dict ;)

def thm_2960 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) => hol.PROVE_HYP (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (thm_2773 p_1 hyp_1) (hyp_3 : hol.proof (p_1 Number_2ENatural_2Ezero) => thm_2959 p_1 hyp_3 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda n. (p n)) ;)

(; dict ;)

def thm_2961 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) -> hyp_2 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (p_1 Number_2ENatural_2Ezero) => hyp_2 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (thm_2772 p_1 hyp_2) (hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2)))) => thm_2960 p_1 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda n. (p n)) ;)

(; dict ;)

def thm_2962 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => hol.PROVE_HYP (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (thm_2770 p_1 hyp_1) (hyp_2 : hol.proof (p_1 Number_2ENatural_2Ezero) => thm_2961 p_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n))) ;)

(; dict ;)

def thm_2963 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) => thm_2962 p_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; dict ;)

def thm_2964 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_2963 p_1.

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Number.Natural.zero)) (Data.Bool.! \lambda n. ((Data.Bool.==> (p n)) (p (Number.Natural.suc n)))))) (Data.Bool.! \lambda n. (p n)))) ;)

(; thm ;)

def thm_2965 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  hol.EQ_MP (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.imp (hol.and (p_1 Number_2ENatural_2Ezero) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.imp (p_1 n_2) (p_1 (Number_2ENatural_2Esuc n_2))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) thm_2767 thm_2964.
