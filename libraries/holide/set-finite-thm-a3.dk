
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dfinite_2Dthm_2Da3.

Set_2Eset : hol.type -> hol.type.

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

Set_2Efinite : A : hol.type -> hol.term A.

Set_2Ecross : A : hol.type -> hol.term A.

Set_2E_7B_7D : A : hol.type -> hol.term A.

Set_2Emember : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Set_2Esubset : A : hol.type -> hol.term A.

Set_2Eimage : A : hol.type -> hol.term A.

Data_2EPair_2Efst : A : hol.type -> hol.term A.

Data_2EPair_2E_2C : A : hol.type -> hol.term A.

Data_2EPair_2Esnd : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : hol.proof (hol.eq hol.bool hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1))).

(; axiom ;)

thm_1 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not (p_1 : hol.term hol.bool => hol.imp p_1 hol.false)).

(; axiom ;)

thm_2 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.true t_1) hol.true)).

(; axiom ;)

thm_3 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_4 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.true) hol.true)).

(; axiom ;)

thm_5 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.false t_1) t_1)).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.false) t_1)).

(; axiom ;)

thm_7 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 t_1) t_1)).

(; axiom ;)

thm_8 : hol.proof hol.true.

(; axiom ;)

thm_9 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))).

(; axiom ;)

thm_10 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_11 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))).

(; axiom ;)

thm_12 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))).

(; axiom ;)

thm_14 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (y_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))))))).

(; axiom ;)

thm_15 : B : hol.type -> A : hol.type -> hol.proof (hol.forall A (a_1 : hol.term A => hol.forall B (b_2 : hol.term B => hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) a_1))).

(; axiom ;)

thm_16 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_17 : B : hol.type -> A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall B (y_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 y_2) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_4))))))).

(; axiom ;)

thm_18 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_19 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_20 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_21 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_22 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_23 : B : hol.type -> A : hol.type -> hol.proof (hol.forall A (a_1 : hol.term A => hol.forall B (b_2 : hol.term B => hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) b_2))).

(; axiom ;)

thm_24 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))))).

(; axiom ;)

thm_25 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))).

(; axiom ;)

thm_26 : A : hol.type -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))).

(; axiom ;)

thm_27 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)).

(; axiom ;)

thm_28 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)).

(; axiom ;)

thm_29 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))).

(; axiom ;)

thm_30 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_31 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or t_1 (hol.not t_1))).

(; axiom ;)

thm_32 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; axiom ;)

thm_33 : A : hol.type -> B : hol.type -> hol.proof (hol.forall (Set_2Eset B) (s_1 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_34 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) ;)

(; dict ;)

def thm_35 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) ;)

(; dict ;)

def thm_36 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (thm_35 B A) (thm_35 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))))) ;)

(; dict ;)

def thm_37 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (thm_34 A) (thm_36 B A).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_38 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B))) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)).

(; Theorem: |- ((= \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_39 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))).

(; Theorem: |- ((= \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_40 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) (thm_39 A B s_1) (thm_39 A B s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) ;)

(; dict ;)

def thm_41 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) (thm_38 B) (thm_40 A B s_1).

(; Theorem: |- ((= (= (Set.finite ((Set.cross s) t)))) (= (Set.finite ((Set.cross s) t)))) ;)

(; dict ;)

def thm_42 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))).

(; Theorem: |- ((= Data.Bool.\/) Data.Bool.\/) ;)

(; dict ;)

def thm_43 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or hol.or) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or.

(; Theorem: |- ((= ((= ((= s) Set.{})) Data.Bool.F)) ((= ((= s) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_44 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false).

(; Theorem: |- ((= ((= ((= s) Set.{})) Data.Bool.F)) ((= ((= s) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_45 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (thm_44 A s_1) (thm_44 A s_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_46 : hyp_1 : hol.proof hol.false -> hol.proof hol.false :=
  hyp_1 : hol.proof hol.false => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. p) ;)

(; dict ;)

def thm_47 : hyp_1 : hol.proof hol.false -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) :=
  hyp_1 : hol.proof hol.false => hol.EQ_MP hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) thm_0 (thm_46 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_48 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof hol.false -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_47 hyp_1 P_1.

(; Theorem: |- ((Data.Bool.==> Data.Bool.F) P) ;)

(; dict ;)

def thm_49 : P_1 : hol.term hol.bool -> hol.proof (hol.imp hol.false P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_48 P_1 hyp_1.

(; Theorem: |- ((= (= (Data.Bool.~ P))) (= (Data.Bool.~ P))) ;)

(; dict ;)

def thm_50 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)).

(; Theorem: |- ((= (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_51 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1.

(; Theorem: |- ((= ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P))) ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F))) ;)

(; dict ;)

def thm_52 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false))) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1)) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false) (thm_50 P_1) (thm_51 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_53 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ;)

(; dict ;)

def thm_54 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1 P_1 thm_1 (thm_53 P_1).

(; Theorem: |- ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_55 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) (thm_52 P_1) (thm_54 P_1).

(; Theorem: |- (Data.Bool.~ P) ;)

(; dict ;)

def thm_56 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.not P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> P) Data.Bool.F) ;)

(; dict ;)

def thm_57 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.imp P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.EQ_MP (hol.not P_1) (hol.imp P_1 hol.false) ((P_1 : hol.term hol.bool => thm_55 P_1) P_1) (thm_56 P_1 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_58 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_59 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hyp_2 : hol.proof (hol.not P_1) -> hol.proof hol.false :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_2 : hol.proof (hol.not P_1) => thm_57 P_1 hyp_2 (thm_58 P_1 hyp_1).

(; Theorem: |- ((= P) Data.Bool.F) ;)

(; dict ;)

def thm_60 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.eq hol.bool P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.PROP_EXT P_1 hol.false (hyp_2 : hol.proof hol.false => thm_49 P_1 (thm_46 hyp_2)) (hyp_2 : hol.proof P_1 => thm_59 P_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ P)) ((= P) Data.Bool.F)) ;)

(; dict ;)

def thm_61 : P_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.not P_1) (hol.eq hol.bool P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => thm_60 P_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= s) Set.{}))) ((= ((= s) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_62 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (P_1 : hol.term hol.bool => thm_61 P_1) (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- (Data.Bool.~ ((= s) Set.{})) ;)

(; dict ;)

def thm_63 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_1.

(; Theorem: |- ((= ((= s) Set.{})) Data.Bool.F) ;)

(; dict ;)

def thm_64 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => thm_62 A s_1 (thm_63 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.\/ ((= s) Set.{}))) (Data.Bool.\/ Data.Bool.F)) ;)

(; dict ;)

def thm_65 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.or hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false thm_43 (hol.EQ_MP (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (thm_45 A s_1) (thm_64 A s_1 hyp_1)).

(; Theorem: |- ((= ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_66 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.REFL hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))).

(; Theorem: |- ((= ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ((Data.Bool.\/ Data.Bool.F) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_67 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.or hol.false (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.or hol.false) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (thm_65 A s_2 hyp_1) (thm_66 A B s_2 t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_68 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_69 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_68 t_1) (thm_68 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_70 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_71 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_72 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_71 thm_71.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) ;)

(; dict ;)

def thm_73 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_70 thm_72.

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_74 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_75 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_74 t_1) (thm_74 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_76 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_2 t_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_77 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_78 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_79 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_77 q_1 p_2) (thm_78 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_80 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_81 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_82 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_80 p_1) (thm_81 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_83 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_84 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_3 (thm_83 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_85 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_82 p_1) (thm_84 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_86 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_87 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_85 p_2) (thm_86 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_88 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_79 q_1 p_2) (thm_87 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_89 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_90 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_88 q_1 p_2) (thm_89 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_91 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_90 q_1 p_2 hyp_1 q_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_92 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_93 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_94 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_92 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_93 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_95 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_94 q_2 p_1 hyp_1 hyp_2) (thm_92 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_96 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_95 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_97 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_96 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_98 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 q_2 p_1 hyp_1 (thm_97 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_99 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_88 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_100 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_101 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_100 x_2 q_3 p_1 hyp_2 (thm_92 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_102 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_101 p_2 x_3 q_1 hyp_1 hyp_3 (thm_93 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_103 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_102 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_104 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_103 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_105 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_99 q_1 p_2) (thm_104 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_106 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_98 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_105 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_107 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_108 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_75 t_1) (thm_76 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => thm_107 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_109 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_110 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_109 t_1) (thm_109 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_111 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_4 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_112 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_113 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_110 t_1) (thm_111 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => thm_112 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_114 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_5 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_115 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_116 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_68 t_1) (thm_114 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => thm_115 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_117 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_118 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_117 t_1) (thm_117 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.F)) t) ;)

(; dict ;)

def thm_119 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_120 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_121 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_118 t_1) (thm_119 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => thm_120 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_122 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_123 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_122 t_1) (thm_122 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) t)) t) ;)

(; dict ;)

def thm_124 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_7 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_125 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (thm_121 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_123 t_1) (thm_124 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_126 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_116 t_1) (thm_125 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_127 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (thm_113 t_1) (thm_126 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_128 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (thm_108 t_1) (thm_127 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_129 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_128 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_130 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_98 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_131 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) thm_73 thm_129 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => thm_130 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_132 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_98 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_133 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_131 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) => thm_132 t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_134 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_90 q_1 p_2 hyp_1 p_2.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_135 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_94 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_136 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_135 p_2 q_1 hyp_1 hyp_2) (thm_93 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_137 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_136 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_138 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_137 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_139 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_134 q_1 p_2 hyp_1 (thm_138 q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_140 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_139 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.eq hol.bool (hol.or hol.false t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_141 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_133 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) => thm_140 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_142 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.or hol.false (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_69 t_1) (thm_141 t_1)) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))).

(; Theorem: |- ((= ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_143 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hol.TRANS hol.bool (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.or hol.false (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (thm_67 B A t_1 s_2 hyp_1) (thm_142 A B s_2 t_1).

(; Theorem: |- ((= ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_144 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (thm_42 B A t_1 s_2) (thm_143 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_145 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hol.SYM hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (thm_144 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= ((= ((= t) Set.{})) Data.Bool.F)) ((= ((= t) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_146 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.REFL hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false).

(; Theorem: |- ((= ((= ((= t) Set.{})) Data.Bool.F)) ((= ((= t) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_147 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false) (thm_146 B t_1) (thm_146 B t_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= t) Set.{}))) ((= ((= t) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_148 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => (P_1 : hol.term hol.bool => thm_61 P_1) (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))).

(; Theorem: |- (Data.Bool.~ ((= t) Set.{})) ;)

(; dict ;)

def thm_149 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => hyp_1.

(; Theorem: |- ((= ((= t) Set.{})) Data.Bool.F) ;)

(; dict ;)

def thm_150 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => thm_148 B t_1 (thm_149 B t_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.\/ ((= t) Set.{}))) (Data.Bool.\/ Data.Bool.F)) ;)

(; dict ;)

def thm_151 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.or hol.false)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false thm_43 (hol.EQ_MP (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false) (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.false) (thm_147 B t_1) (thm_150 B t_1 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_152 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)).

(; Theorem: |- ((= ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((Data.Bool.\/ Data.Bool.F) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_153 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (hol.or hol.false (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) (hol.or hol.false) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (thm_151 B t_2 hyp_1) (thm_152 B A t_2 s_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_154 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.or hol.false (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_114 t_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)).

(; Theorem: |- ((= ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_155 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) => hol.TRANS hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (hol.or hol.false (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (thm_153 A B s_1 t_2 hyp_1) (thm_154 B A t_2 s_1).

(; Theorem: |- ((= ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_156 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (thm_42 B A t_1 s_2) (thm_155 A B s_2 t_1 hyp_1).

(; Theorem: |- ((= ((= (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_157 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => hol.SYM hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (thm_156 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) Data.Bool.T)) ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) Data.Bool.T)) ;)

(; dict ;)

def thm_158 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) Data.Bool.T)) ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) Data.Bool.T)) ;)

(; dict ;)

def thm_159 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) (thm_158 B A t_1 s_2) (thm_158 B A t_1 s_2).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_160 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_161 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_160 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_162 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_161 t_1 hyp_1) thm_8.

(; Theorem: |- t ;)

(; dict ;)

def thm_163 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_164 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_163 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_8).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_165 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_162 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_164 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) Data.Bool.T)) ;)

(; dict ;)

def thm_166 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_165 t_1) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) ;)

(; dict ;)

def thm_167 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => thm_9 B A s_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t))) ;)

(; dict ;)

def thm_168 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => thm_167 A B s_2 t_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) Data.Bool.T) ;)

(; dict ;)

def thm_169 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) (thm_166 B A t_1 s_2) (thm_168 B A t_1 s_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t)))) ;)

(; dict ;)

def thm_170 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true ((B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) (thm_159 B A t_1 s_2) (thm_169 B A t_1 s_2)) B A t_1 s_2).

(; Theorem: |- ((Data.Bool./\ (Set.finite s)) (Set.finite t)) ;)

(; dict ;)

def thm_171 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => hyp_1.

(; Theorem: |- (Set.finite ((Set.cross s) t)) ;)

(; dict ;)

def thm_172 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => hol.EQ_MP hol.true (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (thm_170 B A t_1 s_2) thm_8 (thm_171 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_173 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_174 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (thm_173 B A t_1 s_2).

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_175 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_176 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_175 q_2 p_1 hyp_2) (thm_92 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_177 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_176 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_178 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_177 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_179 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_178 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_180 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_181 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_182 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_180 A P_1) (thm_181 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_183 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_184 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_10 A) (thm_183 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_185 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_182 A P_1) (thm_184 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_186 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_179 A P_1 (thm_185 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_187 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_188 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_186 A P_1 (thm_187 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_189 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_188 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_190 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_191 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_189 A Q_2 P_1 hyp_2 (thm_190 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_192 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_191 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_193 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_192 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Set.member x) t) x)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Set.member x) t))) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_194 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.imp (hol.forall B (x_3 : hol.term B => hol.imp ((x_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_2) x_3) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_193 A Q_1 P_2) B (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Set.member x) s) x)) ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Set.member x) s))) ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_195 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp ((x_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) x_4) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_193 A Q_1 P_2) A (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_196 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hyp_1.

(; Theorem: |- ((Set.member y) t) ;)

(; dict ;)

def thm_197 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) => hyp_1.

(; Theorem: |- (Set.finite ((Set.cross s) t)) ;)

(; dict ;)

def thm_198 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_199 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_200 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_199 A s_1) (thm_199 A s_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) x)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))))) ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)))) ;)

(; dict ;)

def thm_201 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (x_2 : hol.term (Set_2Eset A) => hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) x_2) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_193 A Q_1 P_2) (Set_2Eset A) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s)))) ;)

(; dict ;)

def thm_202 : A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))) ;)

(; dict ;)

def thm_203 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => thm_202 A hyp_1 s_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s)) ;)

(; dict ;)

def thm_204 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => thm_203 A s_1 hyp_1 t_2.

(; Theorem: |- ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ;)

(; dict ;)

def thm_205 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) => hyp_1.

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_206 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) -> hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) => thm_204 A s_2 t_1 hyp_1 (thm_205 A s_2 t_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_207 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1)) => hyp_2 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) => thm_206 A t_1 s_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_208 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) => thm_207 A t_2 s_1 hyp_1.

(; Theorem: |- ((= (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_209 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1.

(; Theorem: |- (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t) ;)

(; dict ;)

def thm_210 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) -> hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ;)

(; dict ;)

def thm_211 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) => hol.EQ_MP ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (thm_209 A t_2 s_1) (thm_210 A t_2 s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_212 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => thm_208 A s_2 t_1 (thm_211 A s_2 t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_213 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) t_1) => thm_212 A t_1 s_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) t)) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)))) ;)

(; dict ;)

def thm_214 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_3)) t_2) (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => thm_213 A t_2 s_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s))) ;)

(; dict ;)

def thm_215 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_201 A s_1 (thm_214 A s_1).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_216 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Set.finite s)) ;)

(; dict ;)

def thm_217 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_215 A s_1 (thm_216 A s_1 hyp_1).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_218 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_217 A s_1 hyp_2 (thm_202 A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)) ;)

(; dict ;)

def thm_219 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) => thm_218 A s_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_220 : A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => s_1 : hol.term (Set_2Eset A) => thm_219 A s_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)))) ;)

(; dict ;)

def thm_221 : A : hol.type -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)))) => thm_220 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s))) ;)

(; dict ;)

def thm_222 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => thm_221 A (thm_11 A).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)) ;)

(; dict ;)

def thm_223 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_222 A s_1.

(; Theorem: |- ((= (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_224 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t))))) (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_225 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) (thm_224 B A t_1 s_2).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ;)

(; dict ;)

def thm_226 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))).

(; Theorem: |- ((= ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ;)

(; dict ;)

def thm_227 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (thm_226 B A f_1 s_2) (thm_226 B A f_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))))) ;)

(; dict ;)

def thm_228 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ;)

(; dict ;)

def thm_229 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))))) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))))) => thm_228 B A hyp_1 f_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_230 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) => thm_229 B A f_1 hyp_1 s_2.

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_231 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hyp_1.

(; Theorem: |- (Set.finite ((Set.image f) s)) ;)

(; dict ;)

def thm_232 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => thm_230 B A f_2 s_1 hyp_1 (thm_231 A s_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))))) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_233 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.imp (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hyp_2 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))))) => thm_232 A B s_1 f_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))))) ;)

(; dict ;)

def thm_234 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => thm_233 B A s_2 f_1 hyp_2 (thm_228 B A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s)))) ;)

(; dict ;)

def thm_235 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_234 B A (thm_12 B A) f_1.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_236 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => thm_235 B A f_1 s_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_237 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) -> s_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => s_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (thm_227 B A f_1 s_2) (thm_236 B A f_1 s_2)) A (Data_2EPair_2E_2A A B) f_1 s_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite ((Set.cross s) t))) (Set.finite ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_238 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => s_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => thm_237 B A f_1 s_2) B A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1).

(; Theorem: |- (Set.finite ((Set.image Data.Pair.fst) ((Set.cross s) t))) ;)

(; dict ;)

def thm_239 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) => thm_238 B A t_1 s_2 (thm_198 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_240 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hyp_1.

(; Theorem: |- ((= ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_241 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (thm_239 B A t_1 s_2 hyp_1) (hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) => thm_240 B A t_1 s_2 hyp_2).

(; Theorem: |- ((= ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_242 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))).

(; Theorem: |- ((= ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_243 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_242 A t_1 s_2) (thm_242 A t_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_244 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_13 A s_1.

(; Theorem: |- ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_245 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_244 A s_2 t_1.

(; Theorem: |- ((= ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) ((Set.image Data.Pair.fst) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_246 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_243 A t_1 s_2) (thm_245 A t_1 s_2)) A t_1 s_2) A (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) s_2.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_247 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) s))) (Data.Bool.==> ((Set.member x) s))) ;)

(; dict ;)

def thm_248 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)).

(; Theorem: |- ((= ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_249 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))).

(; Theorem: |- ((= ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_250 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (thm_249 A B s_1 f_2 y_3) (thm_249 A B s_1 f_2 y_3).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda f. ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_251 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => thm_14 A B y_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_252 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => thm_251 B A y_2 s_1.

(; Theorem: |- ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_253 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => thm_252 B A s_1 y_3 f_2.

(; Theorem: |- ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_254 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> f_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A y_3 (f_2 x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => f_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => y_3 : hol.term A => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (thm_250 A B s_1 f_2 y_3) (thm_253 A B s_1 f_2 y_3)) (Data_2EPair_2E_2A A B) A s_1 f_2 y_3.

(; Theorem: |- ((= ((Set.member x) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_255 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => (B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => f_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => y_3 : hol.term A => thm_254 B A s_1 f_2 y_3) B A (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) x_3.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) ((Set.image Data.Pair.fst) ((Set.cross s) t))))) ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_256 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) (thm_248 A s_2 x_3) (thm_255 B A t_1 s_2 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) ((Set.image Data.Pair.fst) ((Set.cross s) t))))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_257 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (x_3 : hol.term A => thm_256 B A t_1 s_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) ((Set.image Data.Pair.fst) ((Set.cross s) t)))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))))))) ;)

(; dict ;)

def thm_258 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (thm_247 A) (thm_257 B A t_1 s_2).

(; Theorem: |- ((= ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))))))) ;)

(; dict ;)

def thm_259 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) (thm_246 B A t_1 s_2) (thm_258 B A t_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))))))) ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_260 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) (thm_259 B A t_1 s_2).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Set.member z) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) \lambda z. ((Data.Bool.==> ((Set.member z) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_261 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (z_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (z_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (z_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_262 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Set.member z) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_263 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (z_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (z_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (z_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (thm_261 B A t_1 s_2) (thm_262 B A t_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((Data.Bool.==> ((Set.member z) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))))))) ;)

(; dict ;)

def thm_264 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (z_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (z_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_3 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) (thm_247 A) (thm_263 B A t_1 s_2).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_265 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) => hyp_1.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))) ((Data.Pair., z) y))) ((Data.Bool./\ ((= z) (Data.Pair.fst ((Data.Pair., z) y)))) ((Set.member ((Data.Pair., z) y)) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_266 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hol.proof (hol.eq hol.bool ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1)) (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hol.BETA_CONV (Data_2EPair_2E_2A A B) hol.bool (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= z) (Data.Pair.fst ((Data.Pair., z) y)))) ((Set.member ((Data.Pair., z) y)) ((Set.cross s) t)))) (\lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))) ((Data.Pair., z) y))) ;)

(; dict ;)

def thm_267 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> z_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => z_4 : hol.term A => hol.SYM hol.bool ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3)) (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (thm_266 B A y_3 t_1 s_2 z_4).

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_268 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= (= z)) (= z)) ;)

(; dict ;)

def thm_269 : A : hol.type -> z_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A z_1) (hol.eq A z_1)) :=
  A : hol.type => z_1 : hol.term A => hol.REFL (hol.arr A hol.bool) (hol.eq A z_1).

(; Theorem: |- ((= ((= (Data.Pair.fst ((Data.Pair., a) b))) a)) ((= (Data.Pair.fst ((Data.Pair., a) b))) a)) ;)

(; dict ;)

def thm_270 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.REFL hol.bool (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2).

(; Theorem: |- ((= ((= (Data.Pair.fst ((Data.Pair., a) b))) a)) ((= (Data.Pair.fst ((Data.Pair., a) b))) a)) ;)

(; dict ;)

def thm_271 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.TRANS hol.bool (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) (thm_270 B A b_1 a_2) (thm_270 B A b_1 a_2).

(; Theorem: |- (Data.Bool.! \lambda b. ((= (Data.Pair.fst ((Data.Pair., a) b))) a)) ;)

(; dict ;)

def thm_272 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall B (b_2 : hol.term B => hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => thm_15 B A a_1.

(; Theorem: |- ((= (Data.Pair.fst ((Data.Pair., a) b))) a) ;)

(; dict ;)

def thm_273 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => thm_272 A B a_2 b_1.

(; Theorem: |- ((= (Data.Pair.fst ((Data.Pair., z) y))) z) ;)

(; dict ;)

def thm_274 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> z_2 : hol.term A -> hol.proof (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_2 y_1)) z_2) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => z_2 : hol.term A => (B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => (B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.EQ_MP (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) (hol.eq A (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) (thm_271 B A b_1 a_2) (thm_273 B A b_1 a_2)) B A b_1 a_2) B A y_1 z_2.

(; Theorem: |- ((= ((= z) (Data.Pair.fst ((Data.Pair., z) y)))) ((= z) z)) ;)

(; dict ;)

def thm_275 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A z_2 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_2 y_1))) (hol.eq A z_2 z_2)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => z_2 : hol.term A => hol.APP_THM A hol.bool (hol.eq A z_2) (hol.eq A z_2) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_2 y_1)) z_2 (thm_269 A z_2) (thm_274 B A y_1 z_2).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_276 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_277 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_276 A x_1) (thm_276 A x_1).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_278 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_279 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_278 A) (thm_278 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_280 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_247 A) (thm_279 A).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_281 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_165 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_282 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_16 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_283 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_281 A x_1) (thm_282 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_284 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_276 A x_1) (thm_283 A x_1)) A x_1.

(; Theorem: |- ((= ((= z) z)) Data.Bool.T) ;)

(; dict ;)

def thm_285 : A : hol.type -> z_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A z_1 z_1) hol.true) :=
  A : hol.type => z_1 : hol.term A => (A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_277 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_280 A) (thm_284 A) x_1)) A x_1) A z_1.

(; Theorem: |- ((= ((= z) (Data.Pair.fst ((Data.Pair., z) y)))) Data.Bool.T) ;)

(; dict ;)

def thm_286 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A z_2 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_2 y_1))) hol.true) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => z_2 : hol.term A => hol.TRANS hol.bool (hol.eq A z_2 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_2 y_1))) (hol.eq A z_2 z_2) hol.true (thm_275 B A y_1 z_2) (thm_285 A z_2).

(; Theorem: |- ((= (Data.Bool./\ ((= z) (Data.Pair.fst ((Data.Pair., z) y))))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_287 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> z_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A z_2 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_2 y_1)))) (hol.and hol.true)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => z_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq A z_2 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_2 y_1))) hol.true thm_268 (thm_286 B A y_1 z_2).

(; Theorem: |- ((= ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ;)

(; dict ;)

def thm_288 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))).

(; Theorem: |- ((= ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ;)

(; dict ;)

def thm_289 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (thm_288 B A t_1 s_2 y_3 x_4) (thm_288 B A t_1 s_2 y_3 x_4).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))) ;)

(; dict ;)

def thm_290 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall B (y_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 y_2) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_4)))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => thm_17 B A x_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))))) ;)

(; dict ;)

def thm_291 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 y_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_4))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => thm_290 A B x_2 y_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ;)

(; dict ;)

def thm_292 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_4)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => x_3 : hol.term A => thm_291 B A y_2 x_3 s_1.

(; Theorem: |- ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))) ;)

(; dict ;)

def thm_293 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => thm_292 A B s_2 y_3 x_4 t_1.

(; Theorem: |- ((= ((Set.member ((Data.Pair., z) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member z) s)) ((Set.member y) t))) ;)

(; dict ;)

def thm_294 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> z_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => z_4 : hol.term A => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (thm_289 B A t_1 s_2 y_3 x_4) (thm_293 B A t_1 s_2 y_3 x_4)) B A t_1 s_2 y_3 x_4) B A t_1 s_2 y_3 z_4.

(; Theorem: |- ((= ((= ((Set.member z) s)) Data.Bool.T)) ((= ((Set.member z) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_295 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member z) s)) Data.Bool.T)) ((= ((Set.member z) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_296 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (thm_295 A s_1 z_2) (thm_295 A s_1 z_2).

(; Theorem: |- ((= ((Set.member z) s)) ((= ((Set.member z) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_297 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => (t_1 : hol.term hol.bool => thm_165 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1).

(; Theorem: |- ((= ((Set.member z) s)) Data.Bool.T) ;)

(; dict ;)

def thm_298 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (thm_297 A s_1 z_2) (thm_265 A s_1 z_2 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member z) s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_299 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true thm_268 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (thm_296 A s_1 z_2) (thm_298 A s_1 z_2 hyp_1)).

(; Theorem: |- ((= ((= ((Set.member y) t)) Data.Bool.T)) ((= ((Set.member y) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_300 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member y) t)) Data.Bool.T)) ((= ((Set.member y) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_301 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (thm_300 B t_1 y_2) (thm_300 B t_1 y_2).

(; Theorem: |- ((= ((Set.member y) t)) ((= ((Set.member y) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_302 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => (t_1 : hol.term hol.bool => thm_165 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1).

(; Theorem: |- ((= ((Set.member y) t)) Data.Bool.T) ;)

(; dict ;)

def thm_303 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (thm_302 B t_1 y_2) (thm_197 B t_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member z) s)) ((Set.member y) t))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_304 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1)) (hol.and hol.true hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) (hol.and hol.true) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true (thm_299 A s_3 z_4 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (thm_301 B t_1 y_2) (thm_303 B t_1 y_2 hyp_2)).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_305 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_306 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_305 t_1) (thm_305 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_307 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_308 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_307 thm_307.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_309 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_70 thm_308.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_310 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_18 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_311 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_312 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_305 t_1) (thm_310 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_311 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_313 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_314 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_313 t_1) (thm_313 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_315 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_19 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_316 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_317 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_314 t_1) (thm_315 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_316 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_318 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_319 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_318 t_1) (thm_318 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_320 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_20 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_321 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_322 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_319 t_1) (thm_320 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_321 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_323 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_324 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_323 t_1) (thm_323 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_325 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_21 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_326 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_327 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_324 t_1) (thm_325 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_326 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_328 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_329 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_328 t_1) (thm_328 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_330 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_22 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_331 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_327 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_329 t_1) (thm_330 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_332 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_322 t_1) (thm_331 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_333 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_317 t_1) (thm_332 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_334 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_312 t_1) (thm_333 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_335 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_334 t_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_336 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_139 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_337 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_309 thm_335 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_336 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_338 : hol.proof (hol.eq hol.bool (hol.and hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_306 t_1) (thm_337 t_1)) hol.true.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member z) s)) ((Set.member y) t))) Data.Bool.T) ;)

(; dict ;)

def thm_339 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1)) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1)) (hol.and hol.true hol.true) hol.true (thm_304 B A t_1 y_2 s_3 z_4 hyp_1 hyp_2) thm_338.

(; Theorem: |- ((= ((Set.member ((Data.Pair., z) y)) ((Set.cross s) t))) Data.Bool.T) ;)

(; dict ;)

def thm_340 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => hol.TRANS hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1)) hol.true (thm_294 B A t_1 s_2 y_3 z_4) (thm_339 B A t_1 y_3 s_2 z_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= z) (Data.Pair.fst ((Data.Pair., z) y)))) ((Set.member ((Data.Pair., z) y)) ((Set.cross s) t)))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_341 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and hol.true hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3)))) (hol.and hol.true) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) hol.true (thm_287 B A y_3 z_4) (thm_340 B A t_1 s_2 y_3 z_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= z) (Data.Pair.fst ((Data.Pair., z) y)))) ((Set.member ((Data.Pair., z) y)) ((Set.cross s) t)))) Data.Bool.T) ;)

(; dict ;)

def thm_342 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => hol.TRANS hol.bool (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and hol.true hol.true) hol.true (thm_341 B A t_1 s_2 y_3 z_4 hyp_1 hyp_2) thm_338.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((= z) (Data.Pair.fst ((Data.Pair., z) y)))) ((Set.member ((Data.Pair., z) y)) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_343 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (hol.eq hol.bool hol.true (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => hol.SYM hol.bool (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true (thm_342 B A t_1 s_2 y_3 z_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= z) (Data.Pair.fst ((Data.Pair., z) y)))) ((Set.member ((Data.Pair., z) y)) ((Set.cross s) t))) ;)

(; dict ;)

def thm_344 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => hol.EQ_MP hol.true (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (thm_343 B A t_1 s_2 y_3 z_4 hyp_1 hyp_2) thm_8.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))) ((Data.Pair., z) y)) ;)

(; dict ;)

def thm_345 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hol.EQ_MP (hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1)) (thm_267 B A t_2 s_3 y_1 z_4) (thm_344 B A t_2 s_3 y_1 z_4 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_346 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_185 A P_1).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_347 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_190 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_348 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_349 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_347 A Q_3 x_1 P_2 hyp_2 (thm_348 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_350 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_349 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_351 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_350 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_352 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_346 A P_2) (thm_351 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_353 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1)) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_352 A x_1 P_2 hyp_1) (Data_2EPair_2E_2A A B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_354 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hol.PROVE_HYP ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) (thm_345 B A y_1 t_2 s_3 z_4 hyp_1 hyp_2) (hyp_3 : hol.proof ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) z_4 y_1)) => thm_353 B A y_1 t_2 s_3 z_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_355 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) (thm_265 A s_3 z_4 hyp_1) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) => thm_354 B A y_1 t_2 s_3 z_4 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Set.member z) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_356 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) => thm_355 B A y_1 t_2 s_3 z_4 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Set.member z) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_357 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (hol.forall A (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => z_4 : hol.term A => thm_356 B A y_1 t_2 s_3 z_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.fst x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_358 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hol.EQ_MP (hol.forall A (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A z_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))))) (thm_264 B A t_2 s_3) (thm_357 B A y_1 t_2 s_3 hyp_1).

(; Theorem: |- ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t))) ;)

(; dict ;)

def thm_359 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq A x_4 (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (thm_260 B A t_2 s_3) (thm_358 B A y_1 t_2 s_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ((Set.subset s) ((Set.image Data.Pair.fst) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_360 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hol.EQ_MP (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) (thm_241 B A t_2 s_3 hyp_1) (thm_359 B A y_1 t_2 s_3 hyp_2).

(; Theorem: |- (\lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)) ((Set.image Data.Pair.fst) ((Set.cross s) t))) ;)

(; dict ;)

def thm_361 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hol.EQ_MP (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (thm_225 B A t_2 s_3) (thm_360 B A y_1 t_2 s_3 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_362 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_352 A x_1 P_2 hyp_1) (Set_2Eset A) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_3) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_3)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ;)

(; dict ;)

def thm_363 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => hol.PROVE_HYP ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4))) (thm_361 B A y_1 t_2 s_3 hyp_1 hyp_2) (hyp_3 : hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_4) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 t_4)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset A))) (Data_2EPair_2Efst (hol.arr (Data_2EPair_2E_2A A B) A)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) => thm_362 B A t_2 s_3 hyp_3).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_364 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (thm_200 A s_1) (thm_223 A s_1)) A s_3 (thm_363 B A y_1 t_2 s_3 hyp_1 hyp_2).

(; Theorem: |- ((= (Set.finite t)) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_365 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2) hyp_1.

(; Theorem: |- ((= (Set.finite t)) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_366 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3))) (thm_364 B A y_1 t_3 s_2 hyp_1 hyp_2) (hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => thm_365 A B s_2 t_3 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t)))) (Set.finite s)) ;)

(; dict ;)

def thm_367 : B : hol.type -> s_1 : hol.term (Set_2Eset B) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) s_1 t_2))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) s_1)) :=
  B : hol.type => s_1 : hol.term (Set_2Eset B) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_223 A s_1) B s_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda t_1. ((Data.Bool./\ (Set.finite t_1)) ((Set.subset t) t_1)))) (Set.finite t)) ;)

(; dict ;)

def thm_368 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (t__1_2 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t__1_2) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_1 t__1_2))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => (B : hol.type => s_1 : hol.term (Set_2Eset B) => thm_367 B s_1) B t_1.

(; Theorem: |- ((= (\lambda t'. ((Data.Bool./\ (Set.finite t')) ((Set.subset t) t')) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_369 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((t_27_3 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_3) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 t_27_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.BETA_CONV (Set_2Eset B) hol.bool (t_27_3 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_3) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 t_27_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t))))) (\lambda t'. ((Data.Bool./\ (Set.finite t')) ((Set.subset t) t')) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_370 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_1 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) ((t_27_3 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_3) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_1 t_27_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool ((t_27_3 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_3) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_1 t_27_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_1 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) (thm_369 A B s_2 t_1).

(; Theorem: |- ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))) ;)

(; dict ;)

def thm_371 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) -> s_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => s_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => thm_236 B A f_1 s_2) B (Data_2EPair_2E_2A A B) f_1 s_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite ((Set.cross s) t))) (Set.finite ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_372 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => s_2 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => thm_371 B A f_1 s_2) B A (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1).

(; Theorem: |- (Set.finite ((Set.image Data.Pair.snd) ((Set.cross s) t))) ;)

(; dict ;)

def thm_373 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) => thm_372 B A t_1 s_2 (thm_198 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_374 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) hyp_1.

(; Theorem: |- ((= ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_375 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (thm_373 A B t_2 s_1 hyp_1) (hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) => thm_374 A B s_1 t_2 hyp_2).

(; Theorem: |- ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_376 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) s_2 t_1) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_1)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_245 A t_1 s_2) B t_1 s_2.

(; Theorem: |- ((= ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) ((Set.image Data.Pair.snd) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_377 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => (B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => thm_376 B t_1 s_2) B (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) t_2.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_378 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B) (hol.forall B)) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) t))) (Data.Bool.==> ((Set.member x) t))) ;)

(; dict ;)

def thm_379 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1)).

(; Theorem: |- ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_380 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) -> f_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => f_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => y_3 : hol.term B => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => thm_253 A B s_1 f_2 y_3) (Data_2EPair_2E_2A A B) B s_1 f_2 y_3.

(; Theorem: |- ((= ((Set.member x) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_381 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A A B)) => f_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => y_3 : hol.term B => thm_380 A B s_1 f_2 y_3) A B (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) x_3.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) ((Set.image Data.Pair.snd) ((Set.cross s) t))))) ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_382 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))) (thm_379 B t_2 x_3) (thm_381 A B t_2 s_1 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) ((Set.image Data.Pair.snd) ((Set.cross s) t))))) \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_383 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.ABS_THM B hol.bool (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (x_3 : hol.term B => thm_382 A B s_1 t_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) ((Set.image Data.Pair.snd) ((Set.cross s) t)))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))))))) ;)

(; dict ;)

def thm_384 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (thm_378 B) (thm_383 A B s_1 t_2).

(; Theorem: |- ((= ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))))))) ;)

(; dict ;)

def thm_385 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) (thm_377 A B s_1 t_2) (thm_384 A B s_1 t_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))))))) ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_386 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.SYM hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) (thm_385 A B s_1 t_2).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Set.member z) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) \lambda z. ((Data.Bool.==> ((Set.member z) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_387 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (z_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (z_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.REFL (hol.arr B hol.bool) (z_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_388 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.REFL (hol.arr B hol.bool) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Set.member z) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_389 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (z_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.TRANS (hol.arr B hol.bool) (z_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (z_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (thm_387 A B s_1 t_2) (thm_388 A B s_1 t_2).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((Data.Bool.==> ((Set.member z) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))))))) ;)

(; dict ;)

def thm_390 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (z_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)))))) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (z_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_3 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_4 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))))) (thm_378 B) (thm_389 A B s_1 t_2).

(; Theorem: |- ((Set.member z) t) ;)

(; dict ;)

def thm_391 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) => hyp_1.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))) ((Data.Pair., x) z))) ((Data.Bool./\ ((= z) (Data.Pair.snd ((Data.Pair., x) z)))) ((Set.member ((Data.Pair., x) z)) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_392 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term B -> hol.proof (hol.eq hol.bool ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4)) (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term B => hol.BETA_CONV (Data_2EPair_2E_2A A B) hol.bool (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4).

(; Theorem: |- ((= ((Data.Bool./\ ((= z) (Data.Pair.snd ((Data.Pair., x) z)))) ((Set.member ((Data.Pair., x) z)) ((Set.cross s) t)))) (\lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))) ((Data.Pair., x) z))) ;)

(; dict ;)

def thm_393 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> z_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => z_4 : hol.term B => hol.SYM hol.bool ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4)) (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (thm_392 B A x_3 t_1 s_2 z_4).

(; Theorem: |- ((= (= z)) (= z)) ;)

(; dict ;)

def thm_394 : B : hol.type -> z_1 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B z_1) (hol.eq B z_1)) :=
  B : hol.type => z_1 : hol.term B => hol.REFL (hol.arr B hol.bool) (hol.eq B z_1).

(; Theorem: |- ((= ((= (Data.Pair.snd ((Data.Pair., a) b))) b)) ((= (Data.Pair.snd ((Data.Pair., a) b))) b)) ;)

(; dict ;)

def thm_395 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1)) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.REFL hol.bool (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1).

(; Theorem: |- ((= ((= (Data.Pair.snd ((Data.Pair., a) b))) b)) ((= (Data.Pair.snd ((Data.Pair., a) b))) b)) ;)

(; dict ;)

def thm_396 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1)) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.TRANS hol.bool (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) (thm_395 A B b_1 a_2) (thm_395 A B b_1 a_2).

(; Theorem: |- (Data.Bool.! \lambda b. ((= (Data.Pair.snd ((Data.Pair., a) b))) b)) ;)

(; dict ;)

def thm_397 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall B (b_2 : hol.term B => hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) b_2)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => thm_23 B A a_1.

(; Theorem: |- ((= (Data.Pair.snd ((Data.Pair., a) b))) b) ;)

(; dict ;)

def thm_398 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => thm_397 A B a_2 b_1.

(; Theorem: |- ((= (Data.Pair.snd ((Data.Pair., x) z))) z) ;)

(; dict ;)

def thm_399 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> x_2 : hol.term A -> hol.proof (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 z_1)) z_1) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => x_2 : hol.term A => (A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => (A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.EQ_MP (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) (hol.eq B (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) (thm_396 A B b_1 a_2) (thm_398 A B b_1 a_2)) A B b_1 a_2) A B z_1 x_2.

(; Theorem: |- ((= ((= z) (Data.Pair.snd ((Data.Pair., x) z)))) ((= z) z)) ;)

(; dict ;)

def thm_400 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B z_2 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_2))) (hol.eq B z_2 z_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term B => hol.APP_THM B hol.bool (hol.eq B z_2) (hol.eq B z_2) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_2)) z_2 (thm_394 B z_2) (thm_399 A B z_2 x_1).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_401 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B x_1 x_1) hol.true) :=
  B : hol.type => x_1 : hol.term B => (A : hol.type => x_1 : hol.term A => thm_283 A x_1) B x_1.

(; Theorem: |- ((= ((= z) z)) Data.Bool.T) ;)

(; dict ;)

def thm_402 : B : hol.type -> z_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B z_1 z_1) hol.true) :=
  B : hol.type => z_1 : hol.term B => (B : hol.type => x_1 : hol.term B => thm_401 B x_1) B z_1.

(; Theorem: |- ((= ((= z) (Data.Pair.snd ((Data.Pair., x) z)))) Data.Bool.T) ;)

(; dict ;)

def thm_403 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B z_2 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_2))) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term B => hol.TRANS hol.bool (hol.eq B z_2 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_2))) (hol.eq B z_2 z_2) hol.true (thm_400 A B x_1 z_2) (thm_402 B z_2).

(; Theorem: |- ((= (Data.Bool./\ ((= z) (Data.Pair.snd ((Data.Pair., x) z))))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_404 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B z_2 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_2)))) (hol.and hol.true)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq B z_2 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_2))) hol.true thm_268 (thm_403 A B x_1 z_2).

(; Theorem: |- ((= ((Set.member ((Data.Pair., x) z)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member z) t))) ;)

(; dict ;)

def thm_405 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> z_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 z_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => z_3 : hol.term B => x_4 : hol.term A => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => thm_293 B A t_1 s_2 y_3 x_4) B A t_1 s_2 z_3 x_4.

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_406 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_407 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_406 A s_1 x_2) (thm_406 A s_1 x_2).

(; Theorem: |- ((= ((Set.member x) s)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_408 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_165 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.T) ;)

(; dict ;)

def thm_409 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_408 A s_1 x_2) (thm_196 A s_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member x) s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_410 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true thm_268 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_407 A s_1 x_2) (thm_409 A s_1 x_2 hyp_1)).

(; Theorem: |- ((= ((= ((Set.member z) t)) Data.Bool.T)) ((= ((Set.member z) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_411 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member z) t)) Data.Bool.T)) ((= ((Set.member z) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_412 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) (thm_411 B t_1 z_2) (thm_411 B t_1 z_2).

(; Theorem: |- ((= ((Set.member z) t)) ((= ((Set.member z) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_413 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term B => (t_1 : hol.term hol.bool => thm_165 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1).

(; Theorem: |- ((= ((Set.member z) t)) Data.Bool.T) ;)

(; dict ;)

def thm_414 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) (thm_413 B t_1 z_2) (thm_391 B t_1 z_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) ((Set.member z) t))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_415 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1)) (hol.and hol.true hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.and hol.true) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true (thm_410 A s_3 x_4 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) hol.true) (thm_412 B t_1 z_2) (thm_414 B t_1 z_2 hyp_2)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) ((Set.member z) t))) Data.Bool.T) ;)

(; dict ;)

def thm_416 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1)) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_2 t_1)) (hol.and hol.true hol.true) hol.true (thm_415 B A t_1 z_2 s_3 x_4 hyp_1 hyp_2) thm_338.

(; Theorem: |- ((= ((Set.member ((Data.Pair., x) z)) ((Set.cross s) t))) Data.Bool.T) ;)

(; dict ;)

def thm_417 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> z_3 : hol.term B -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 z_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => z_3 : hol.term B => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_1) => hol.TRANS hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 z_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_3 t_1)) hol.true (thm_405 B A t_1 s_2 z_3 x_4) (thm_416 B A t_1 z_3 s_2 x_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= z) (Data.Pair.snd ((Data.Pair., x) z)))) ((Set.member ((Data.Pair., x) z)) ((Set.cross s) t)))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_418 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> z_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and hol.true hol.true)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => z_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_1) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4)))) (hol.and hol.true) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) hol.true (thm_404 A B x_3 z_4) (thm_417 B A t_1 s_2 z_4 x_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= z) (Data.Pair.snd ((Data.Pair., x) z)))) ((Set.member ((Data.Pair., x) z)) ((Set.cross s) t)))) Data.Bool.T) ;)

(; dict ;)

def thm_419 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> z_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => z_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_1) => hol.TRANS hol.bool (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.and hol.true hol.true) hol.true (thm_418 A B t_1 s_2 x_3 z_4 hyp_1 hyp_2) thm_338.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((= z) (Data.Pair.snd ((Data.Pair., x) z)))) ((Set.member ((Data.Pair., x) z)) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_420 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> z_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_1) -> hol.proof (hol.eq hol.bool hol.true (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => z_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_1) => hol.SYM hol.bool (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) hol.true (thm_419 A B t_1 s_2 x_3 z_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= z) (Data.Pair.snd ((Data.Pair., x) z)))) ((Set.member ((Data.Pair., x) z)) ((Set.cross s) t))) ;)

(; dict ;)

def thm_421 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> z_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_1) -> hol.proof (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => z_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_1) => hol.EQ_MP hol.true (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (thm_420 A B t_1 s_2 x_3 z_4 hyp_1 hyp_2) thm_8.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))) ((Data.Pair., x) z)) ;)

(; dict ;)

def thm_422 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_2) -> hol.proof ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_2) => hol.EQ_MP (hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4)) (thm_393 A B t_2 s_3 x_1 z_4) (thm_421 A B t_2 s_3 x_1 z_4 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_423 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4)) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_352 A x_1 P_2 hyp_1) (Data_2EPair_2E_2A A B) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_424 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_2) => hol.PROVE_HYP ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) (thm_422 B A x_1 t_2 s_3 z_4 hyp_1 hyp_2) (hyp_3 : hol.proof ((x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 z_4)) => thm_423 B A x_1 t_2 s_3 z_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_425 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) (thm_391 B t_2 z_4 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_2) => thm_424 B A x_1 t_2 s_3 z_4 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member z) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t))))) ;)

(; dict ;)

def thm_426 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> z_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => z_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_3) => thm_425 B A x_1 t_3 s_2 z_4 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Set.member z) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_427 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (hol.forall B (z_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => z_4 : hol.term B => thm_426 A B x_1 s_2 t_3 z_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (Data.Pair.snd x))) ((Set.member x) ((Set.cross s) t)))))) ;)

(; dict ;)

def thm_428 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.EQ_MP (hol.forall B (z_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) z_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B z_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)))))) (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)))))) (thm_390 A B s_2 t_3) (thm_427 A B x_1 s_2 t_3 hyp_1).

(; Theorem: |- ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t))) ;)

(; dict ;)

def thm_429 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.EQ_MP (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_5 : hol.term (Data_2EPair_2E_2A A B) => hol.and (hol.eq B x_4 (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B) x_5)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) x_5 (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)))))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3))) (thm_386 A B s_2 t_3) (thm_428 A B x_1 s_2 t_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Set.finite ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ((Set.subset t) ((Set.image Data.Pair.snd) ((Set.cross s) t)))) ;)

(; dict ;)

def thm_430 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) => hol.EQ_MP (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)))) (thm_375 A B s_3 t_2 hyp_1) (thm_429 A B x_1 s_3 t_2 hyp_2).

(; Theorem: |- (\lambda t'. ((Data.Bool./\ (Set.finite t')) ((Set.subset t) t')) ((Set.image Data.Pair.snd) ((Set.cross s) t))) ;)

(; dict ;)

def thm_431 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof ((t_27_4 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_4) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 t_27_4)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.EQ_MP (hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3))) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)))) ((t_27_4 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_4) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 t_27_4)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3))) (thm_370 A B t_3 s_2) (thm_430 A B x_1 t_3 s_2 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda t'. ((Data.Bool./\ (Set.finite t')) ((Set.subset t) t'))) ;)

(; dict ;)

def thm_432 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof ((t_27_3 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_3) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 t_27_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (t_27_3 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_3) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 t_27_3))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof ((t_27_3 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_3) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 t_27_3)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_352 A x_1 P_2 hyp_1) (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (t_27_3 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_3) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 t_27_3)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda t'. ((Data.Bool./\ (Set.finite t')) ((Set.subset t) t'))) ;)

(; dict ;)

def thm_433 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (t_27_4 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_4) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 t_27_4))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.PROVE_HYP ((t_27_4 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_4) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 t_27_4)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (t_27_4 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_4) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 t_27_4))) (thm_431 A B x_1 s_2 t_3 hyp_1 hyp_2) (hyp_3 : hol.proof ((t_27_4 : hol.term (Set_2Eset B) => hol.and (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_27_4) (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 t_27_4)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Eset B))) (Data_2EPair_2Esnd (hol.arr (Data_2EPair_2E_2A A B) B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3))) => thm_432 A B s_2 t_3 hyp_3).

(; Theorem: |- (Set.finite t) ;)

(; dict ;)

def thm_434 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_368 B t_3 (thm_433 A B x_1 s_2 t_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Set.finite s)) (Set.finite t)) ;)

(; dict ;)

def thm_435 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (thm_366 A B y_1 s_4 t_3 hyp_1 hyp_3) (thm_434 A B x_2 s_4 t_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Set.finite s)) (Set.finite t)) ;)

(; dict ;)

def thm_436 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (thm_198 B A t_3 s_4 hyp_1) (hyp_4 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) => thm_435 B A y_1 x_2 t_3 s_4 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_437 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) => hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) => thm_436 B A y_1 x_2 t_3 s_4 hyp_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_438 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3))) (thm_197 B t_3 y_1 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_3) => thm_437 B A y_1 x_2 t_3 s_4 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_439 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) => thm_438 B A y_4 x_1 t_3 s_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_440 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)))) (thm_196 A s_2 x_1 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_439 A B x_1 s_2 t_3 y_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_441 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => thm_440 A B x_4 s_3 t_1 y_2 hyp_1.

(; Theorem: |- ((= (\lambda x. ((Set.member x) s) x)) ((Set.member x) s)) ;)

(; dict ;)

def thm_442 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) x_1.

(; Theorem: |- (\lambda x. ((Set.member x) s) x) ;)

(; dict ;)

def thm_443 : A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) x_1) -> hol.proof ((x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) x_1) :=
  A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) x_1) => hyp_1.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_444 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof ((x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) x_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof ((x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) x_2) => hol.EQ_MP ((x_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (thm_442 A x_2 s_1) (thm_443 A x_2 s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_445 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) x_1) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) x_1) => (hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_441 B A t_3 y_4 s_2 x_1 (thm_196 A s_2 x_1 hyp_2)) (thm_444 A s_2 x_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Set.member x) s) x)) ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_446 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> x_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.imp ((x_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) x_3) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_4 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_4) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => x_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((x_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) x_3) => thm_445 A B x_3 s_4 t_1 y_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Set.member x) s) x)) ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_447 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp ((x_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) x_4) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => thm_446 B A t_1 y_2 x_4 s_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Set.member x) s))) ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_448 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => thm_195 B A t_1 y_2 s_3 (thm_447 B A t_1 y_2 s_3).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s)))) ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s)))) ;)

(; dict ;)

def thm_449 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s)))) ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s)))) ;)

(; dict ;)

def thm_450 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (thm_449 A s_1) (thm_449 A s_1).

(; Theorem: |- ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s))) ;)

(; dict ;)

def thm_451 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Set.member x) s))) (Data.Bool.~ ((= s) Set.{}))) ;)

(; dict ;)

def thm_452 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) => hol.SYM hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (thm_451 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Set.member x) s))) (Data.Bool.~ ((= s) Set.{}))) ;)

(; dict ;)

def thm_453 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s))) ;)

(; dict ;)

def thm_454 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (thm_453 A s_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Set.member x) s))) (Data.Bool.~ ((= s) Set.{})))) ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s)))) ;)

(; dict ;)

def thm_455 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.PROP_EXT (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) => thm_452 A s_1 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) => thm_454 A s_1 hyp_1).

(; Theorem: |- ((= \lambda s. ((= (Data.Bool.? \lambda x. ((Set.member x) s))) (Data.Bool.~ ((= s) Set.{})))) \lambda s. ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s)))) ;)

(; dict ;)

def thm_456 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)))) :=
  A : hol.type => hol.ABS_THM (Set_2Eset A) hol.bool (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (s_1 : hol.term (Set_2Eset A) => thm_455 A s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((= (Data.Bool.? \lambda x. ((Set.member x) s))) (Data.Bool.~ ((= s) Set.{}))))) (Data.Bool.! \lambda s. ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s))))) ;)

(; dict ;)

def thm_457 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))))) :=
  A : hol.type => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (thm_34 A) (thm_456 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s)))) ;)

(; dict ;)

def thm_458 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)))) :=
  A : hol.type => hol.EQ_MP (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)))) (thm_457 A) (thm_24 A).

(; Theorem: |- ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s))) ;)

(; dict ;)

def thm_459 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_458 A s_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Set.member x) s)) ;)

(; dict ;)

def thm_460 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => hol.EQ_MP (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) ((A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (thm_450 A s_1) (thm_459 A s_1)) A s_1) (thm_63 A s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_461 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> y_3 : hol.term B -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => y_3 : hol.term B => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => thm_448 B A t_2 y_3 s_1 (thm_460 A s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_462 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_3 (Set_2E_7B_7D (Set_2Eset A)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_3 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => thm_461 A B s_3 t_2 y_1 hyp_1 (thm_197 B t_2 y_1 hyp_2).

(; Theorem: |- ((= (\lambda x. ((Set.member x) t) y)) ((Set.member y) t)) ;)

(; dict ;)

def thm_463 : B : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) y_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2)) :=
  B : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) y_1.

(; Theorem: |- (\lambda x. ((Set.member x) t) y) ;)

(; dict ;)

def thm_464 : B : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof ((x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) y_1) -> hol.proof ((x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) y_1) :=
  B : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof ((x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) y_1) => hyp_1.

(; Theorem: |- ((Set.member y) t) ;)

(; dict ;)

def thm_465 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof ((x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_1) y_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof ((x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_1) y_2) => hol.EQ_MP ((x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_1) y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (thm_463 B y_2 t_1) (thm_464 B y_2 t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_466 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_3 (Set_2E_7B_7D (Set_2Eset A)))) -> hyp_2 : hol.proof ((x_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_2) y_1) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_3 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_2 : hol.proof ((x_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_2) y_1) => (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_2) => thm_462 B A y_1 t_2 s_3 hyp_1 hyp_3) (thm_465 B t_2 y_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Set.member x) t) y)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_467 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.imp ((x_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) y_2) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_3)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_2 : hol.proof ((x_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) y_2) => thm_466 B A y_2 t_3 s_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> (\lambda x. ((Set.member x) t) y)) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_468 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.forall B (y_3 : hol.term B => hol.imp ((x_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_2) y_3) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => y_3 : hol.term B => thm_467 A B s_1 y_3 t_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Set.member x) t))) ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_469 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2)) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => thm_194 A B s_1 t_2 (thm_468 A B s_1 t_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) s))) ;)

(; dict ;)

def thm_470 : B : hol.type -> s_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset B) s_1 (Set_2E_7B_7D (Set_2Eset B)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_2 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 s_1))) :=
  B : hol.type => s_1 : hol.term (Set_2Eset B) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_459 A s_1) B s_1.

(; Theorem: |- ((= (Data.Bool.~ ((= t) Set.{}))) (Data.Bool.? \lambda x. ((Set.member x) t))) ;)

(; dict ;)

def thm_471 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_2 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => (B : hol.type => s_1 : hol.term (Set_2Eset B) => thm_470 B s_1) B t_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Set.member x) t)) ;)

(; dict ;)

def thm_472 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_2 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => hol.EQ_MP (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_2 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1)) (thm_471 B t_1) (thm_149 B t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_473 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => thm_469 A B s_2 t_1 hyp_1 (thm_472 B t_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Set.finite s)) (Set.finite t)) ;)

(; dict ;)

def thm_474 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) => hol.EQ_MP (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.imp (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (thm_174 B A t_1 s_2) (thm_473 B A t_1 s_2 hyp_1 hyp_2) (thm_198 B A t_1 s_2 hyp_3).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_475 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => hol.PROP_EXT (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hyp_3 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => thm_172 B A t_1 s_2 hyp_3) (hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) => thm_474 B A t_1 s_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_476 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) => hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (thm_157 B A t_1 s_2 hyp_2) (thm_475 B A t_1 s_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= t) Set.{}))) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_477 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) => hyp_2 : hol.proof (hol.not (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) => thm_476 B A t_2 s_1 hyp_1 hyp_2.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_478 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= Set.finite) Set.finite) ;)

(; dict ;)

def thm_479 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)).

(; Theorem: |- ((= (Set.cross s)) (Set.cross s)) ;)

(; dict ;)

def thm_480 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1).

(; Theorem: |- ((= ((= t) Set.{})) ((= t) Set.{})) ;)

(; dict ;)

def thm_481 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.REFL hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))).

(; Theorem: |- ((= ((= t) Set.{})) ((= t) Set.{})) ;)

(; dict ;)

def thm_482 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (thm_481 B t_1) (thm_481 B t_1).

(; Theorem: |- ((= t) Set.{}) ;)

(; dict ;)

def thm_483 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hyp_1.

(; Theorem: |- ((= ((Set.cross s) t)) ((Set.cross s) Set.{})) ;)

(; dict ;)

def thm_484 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 (Set_2E_7B_7D (Set_2Eset B)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2) t_1 (Set_2E_7B_7D (Set_2Eset B)) (thm_480 A B s_2) (hol.EQ_MP (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (thm_482 B t_1) (thm_483 B t_1 hyp_1)).

(; Theorem: |- ((= ((= ((Set.cross s) Set.{})) Set.{})) ((= ((Set.cross s) Set.{})) Set.{})) ;)

(; dict ;)

def thm_485 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))).

(; Theorem: |- ((= ((= ((Set.cross s) Set.{})) Set.{})) ((= ((Set.cross s) Set.{})) Set.{})) ;)

(; dict ;)

def thm_486 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (thm_485 B A s_1) (thm_485 B A s_1).

(; Theorem: |- ((= ((Set.cross s) Set.{})) Set.{}) ;)

(; dict ;)

def thm_487 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_25 B A s_1.

(; Theorem: |- ((= ((Set.cross s) t)) Set.{}) ;)

(; dict ;)

def thm_488 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.TRANS (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))) (thm_484 B A t_1 s_2 hyp_1) ((B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (thm_486 B A s_1) (thm_487 B A s_1)) B A s_2).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) (Set.finite Set.{})) ;)

(; dict ;)

def thm_489 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))) (thm_479 B A) (thm_488 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= ((= (Set.finite Set.{})) Data.Bool.T)) ((= (Set.finite Set.{})) Data.Bool.T)) ;)

(; dict ;)

def thm_490 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true)) :=
  A : hol.type => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true).

(; Theorem: |- ((= ((= (Set.finite Set.{})) Data.Bool.T)) ((= (Set.finite Set.{})) Data.Bool.T)) ;)

(; dict ;)

def thm_491 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true)) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (thm_490 A) (thm_490 A).

(; Theorem: |- ((= (Set.finite Set.{})) ((= (Set.finite Set.{})) Data.Bool.T)) ;)

(; dict ;)

def thm_492 : A : hol.type -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true)) :=
  A : hol.type => (t_1 : hol.term hol.bool => thm_165 t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- ((= (Set.finite Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_493 : A : hol.type -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) :=
  A : hol.type => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (thm_492 A) (thm_26 A).

(; Theorem: |- ((= (Set.finite Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_494 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) hol.true) :=
  B : hol.type => A : hol.type => (A : hol.type => hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true) (thm_491 A) (thm_493 A)) (Data_2EPair_2E_2A A B).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) Data.Bool.T) ;)

(; dict ;)

def thm_495 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.TRANS hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) hol.true (thm_489 B A t_1 s_2 hyp_1) (thm_494 B A).

(; Theorem: |- ((= (= (Set.finite ((Set.cross s) t)))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_496 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) hol.true thm_478 (thm_495 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_497 : B : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) (hol.eq (Set_2Eset B)) (hol.eq (Set_2Eset B))) :=
  B : hol.type => hol.REFL (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) (hol.eq (Set_2Eset B)).

(; Theorem: |- ((= (= t)) (= Set.{})) ;)

(; dict ;)

def thm_498 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (hol.eq (Set_2Eset B) t_1) (hol.eq (Set_2Eset B) (Set_2E_7B_7D (Set_2Eset B)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool) (hol.eq (Set_2Eset B)) (hol.eq (Set_2Eset B)) t_1 (Set_2E_7B_7D (Set_2Eset B)) (thm_497 B) (thm_483 B t_1 hyp_1).

(; Theorem: |- ((= Set.{}) Set.{}) ;)

(; dict ;)

def thm_499 : B : hol.type -> hol.proof (hol.eq (Set_2Eset B) (Set_2E_7B_7D (Set_2Eset B)) (Set_2E_7B_7D (Set_2Eset B))) :=
  B : hol.type => hol.REFL (Set_2Eset B) (Set_2E_7B_7D (Set_2Eset B)).

(; Theorem: |- ((= ((= t) Set.{})) ((= Set.{}) Set.{})) ;)

(; dict ;)

def thm_500 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq (Set_2Eset B) (Set_2E_7B_7D (Set_2Eset B)) (Set_2E_7B_7D (Set_2Eset B)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM (Set_2Eset B) hol.bool (hol.eq (Set_2Eset B) t_1) (hol.eq (Set_2Eset B) (Set_2E_7B_7D (Set_2Eset B))) (Set_2E_7B_7D (Set_2Eset B)) (Set_2E_7B_7D (Set_2Eset B)) (thm_498 B t_1 hyp_1) (thm_499 B).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_501 : B : hol.type -> x_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) x_1 x_1) hol.true) :=
  B : hol.type => x_1 : hol.term (Set_2Eset B) => (A : hol.type => x_1 : hol.term A => thm_283 A x_1) (Set_2Eset B) x_1.

(; Theorem: |- ((= ((= Set.{}) Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_502 : B : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2E_7B_7D (Set_2Eset B)) (Set_2E_7B_7D (Set_2Eset B))) hol.true) :=
  B : hol.type => (B : hol.type => x_1 : hol.term (Set_2Eset B) => thm_501 B x_1) B (Set_2E_7B_7D (Set_2Eset B)).

(; Theorem: |- ((= ((= t) Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_503 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.TRANS hol.bool (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq (Set_2Eset B) (Set_2E_7B_7D (Set_2Eset B)) (Set_2E_7B_7D (Set_2Eset B))) hol.true (thm_500 B t_1 hyp_1) (thm_502 B).

(; Theorem: |- ((= (Data.Bool.\/ ((= t) Set.{}))) (Data.Bool.\/ Data.Bool.T)) ;)

(; dict ;)

def thm_504 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.or hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) hol.true thm_43 (thm_503 B t_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Set.finite s))) (Data.Bool./\ (Set.finite s))) ;)

(; dict ;)

def thm_505 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)).

(; Theorem: |- ((= Set.finite) Set.finite) ;)

(; dict ;)

def thm_506 : B : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool))) :=
  B : hol.type => hol.REFL (hol.arr (Set_2Eset B) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool)).

(; Theorem: |- ((= (Set.finite t)) (Set.finite Set.{})) ;)

(; dict ;)

def thm_507 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2E_7B_7D (Set_2Eset B)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM (Set_2Eset B) hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool)) t_1 (Set_2E_7B_7D (Set_2Eset B)) (thm_506 B) (thm_483 B t_1 hyp_1).

(; Theorem: |- ((= (Set.finite Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_508 : B : hol.type -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2E_7B_7D (Set_2Eset B))) hol.true) :=
  B : hol.type => (A : hol.type => thm_493 A) B.

(; Theorem: |- ((= (Set.finite t)) Data.Bool.T) ;)

(; dict ;)

def thm_509 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.TRANS hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) (Set_2E_7B_7D (Set_2Eset B))) hol.true (thm_507 B t_1 hyp_1) (thm_508 B).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((Data.Bool./\ (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_510 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true (thm_505 A s_2) (thm_509 B t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) Data.Bool.T)) (Set.finite s)) ;)

(; dict ;)

def thm_511 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_315 t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite s)) ;)

(; dict ;)

def thm_512 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.TRANS hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) hol.true) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (thm_510 B A t_1 s_2 hyp_1) (thm_511 A s_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((Data.Bool.\/ Data.Bool.T) (Set.finite s))) ;)

(; dict ;)

def thm_513 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (hol.or hol.true (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) (hol.or hol.true) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (thm_504 B t_2 hyp_1) (thm_512 B A t_2 s_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) (Set.finite s))) Data.Bool.T) ;)

(; dict ;)

def thm_514 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.or hol.true (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_76 t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) Data.Bool.T) ;)

(; dict ;)

def thm_515 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) hol.true) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) => hol.TRANS hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (hol.or hol.true (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) hol.true (thm_513 A B s_1 t_2 hyp_1) (thm_514 A s_1).

(; Theorem: |- ((= ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_516 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.eq hol.bool hol.true hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool hol.true) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) hol.true (thm_496 B A t_1 s_2 hyp_1) (thm_515 A B s_2 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_517 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_518 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_517 t_1) (thm_517 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_519 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_520 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_519 thm_519.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_521 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_70 thm_520.

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_522 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_27 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_523 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_524 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_517 t_1) (thm_522 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => thm_523 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_525 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_526 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_525 t_1) (thm_525 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_527 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_28 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_528 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_529 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_526 t_1) (thm_527 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => thm_528 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_530 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_531 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_530 t_1) (thm_530 t_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_532 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_29 t_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_533 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_106 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_534 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_531 t_1) (thm_532 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => thm_533 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_535 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_536 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_535 t_1) (thm_535 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_537 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_30 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_538 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_534 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_536 t_1) (thm_537 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_539 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (thm_529 t_1) (thm_538 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_540 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (thm_524 t_1) (thm_539 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_541 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => thm_540 t_1.

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_542 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_139 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_543 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) thm_521 thm_541 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => thm_542 t_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_544 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_518 t_1) (thm_543 t_1)) hol.true.

(; Theorem: |- ((= ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) Data.Bool.T) ;)

(; dict ;)

def thm_545 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.eq hol.bool hol.true hol.true) hol.true (thm_516 B A t_1 s_2 hyp_1) thm_544.

(; Theorem: |- ((= Data.Bool.T) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_546 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.SYM hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) hol.true (thm_545 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_547 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) => hol.EQ_MP hol.true (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (thm_546 B A t_1 s_2 hyp_1) thm_8.

(; Theorem: |- ((Data.Bool.==> ((= t) Set.{})) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_548 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.imp (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) => thm_547 B A t_2 s_1 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= t) Set.{})) (Data.Bool.~ ((= t) Set.{}))) ;)

(; dict ;)

def thm_549 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => thm_31 (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))).

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_550 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_551 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_552 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_550 Q_1 P_2) (thm_551 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_553 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_554 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_555 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_553 P_1) (thm_554 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_556 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_32 (thm_53 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_557 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_555 P_1) (thm_556 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_558 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_559 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_557 P_2) (thm_558 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_560 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_552 Q_1 P_2) (thm_559 Q_1 P_2).

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_561 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_562 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_560 Q_1 P_2) (thm_561 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_563 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_562 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_564 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_565 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_563 Q_3 R_2 P_1 hyp_2 (thm_564 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_566 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_567 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_565 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_566 R_3 Q_1 hyp_2).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_568 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) -> hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) -> hyp_3 : hol.proof (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) => hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) => hyp_3 : hol.proof (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_567 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_569 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) -> hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) => hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) => hol.PROVE_HYP (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (thm_549 B t_1) (hyp_3 : hol.proof (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))))) => thm_568 B A t_1 s_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_570 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) => hol.PROVE_HYP (hol.imp (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (thm_548 A B s_2 t_1) (hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) => thm_569 B A t_1 s_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ;)

(; dict ;)

def thm_571 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hol.PROVE_HYP (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (thm_477 A B s_2 t_1 hyp_1) (hyp_2 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) => thm_570 B A t_1 s_2 hyp_2).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_572 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (thm_145 B A t_1 s_2 hyp_1) (thm_571 B A t_1 s_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= s) Set.{}))) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_573 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) => thm_572 B A t_1 s_2 hyp_1.

(; Theorem: |- ((= Set.cross) Set.cross) ;)

(; dict ;)

def thm_574 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B))))) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B))))).

(; Theorem: |- ((= ((= s) Set.{})) ((= s) Set.{})) ;)

(; dict ;)

def thm_575 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- ((= ((= s) Set.{})) ((= s) Set.{})) ;)

(; dict ;)

def thm_576 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (thm_575 A s_1) (thm_575 A s_1).

(; Theorem: |- ((= s) Set.{}) ;)

(; dict ;)

def thm_577 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hyp_1.

(; Theorem: |- ((= (Set.cross s)) (Set.cross Set.{})) ;)

(; dict ;)

def thm_578 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B))) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B))))) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B))))) s_1 (Set_2E_7B_7D (Set_2Eset A)) (thm_574 B A) (hol.EQ_MP (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (thm_576 A s_1) (thm_577 A s_1 hyp_1)).

(; Theorem: |- ((= t) t) ;)

(; dict ;)

def thm_579 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (Set_2Eset B) t_1 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.REFL (Set_2Eset B) t_1.

(; Theorem: |- ((= ((Set.cross s) t)) ((Set.cross Set.{}) t)) ;)

(; dict ;)

def thm_580 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A))) t_1 t_1 (thm_578 A B s_2 hyp_1) (thm_579 B t_1).

(; Theorem: |- ((= ((= ((Set.cross Set.{}) s)) Set.{})) ((= ((Set.cross Set.{}) s)) Set.{})) ;)

(; dict ;)

def thm_581 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => hol.REFL hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))).

(; Theorem: |- ((= ((= ((Set.cross Set.{}) s)) Set.{})) ((= ((Set.cross Set.{}) s)) Set.{})) ;)

(; dict ;)

def thm_582 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (thm_581 B A s_1) (thm_581 B A s_1).

(; Theorem: |- ((= ((Set.cross Set.{}) s)) Set.{}) ;)

(; dict ;)

def thm_583 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => thm_33 A B s_1.

(; Theorem: |- ((= ((Set.cross Set.{}) t)) Set.{}) ;)

(; dict ;)

def thm_584 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) t_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => (B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => (B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => hol.EQ_MP (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) s_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) (thm_582 B A s_1) (thm_583 B A s_1)) B A s_1) B A t_1.

(; Theorem: |- ((= ((Set.cross s) t)) Set.{}) ;)

(; dict ;)

def thm_585 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.TRANS (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) (Set_2E_7B_7D (Set_2Eset A)) t_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))) (thm_580 B A t_1 s_2 hyp_1) (thm_584 B A t_1).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) (Set.finite Set.{})) ;)

(; dict ;)

def thm_586 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B))) (thm_479 B A) (thm_585 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) Data.Bool.T) ;)

(; dict ;)

def thm_587 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.TRANS hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2E_7B_7D (Set_2Eset (Data_2EPair_2E_2A A B)))) hol.true (thm_586 B A t_1 s_2 hyp_1) (thm_494 B A).

(; Theorem: |- ((= (= (Set.finite ((Set.cross s) t)))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_588 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) hol.true thm_478 (thm_587 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_589 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (hol.eq (Set_2Eset A)) (hol.eq (Set_2Eset A))) :=
  A : hol.type => hol.REFL (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (hol.eq (Set_2Eset A)).

(; Theorem: |- ((= (= s)) (= Set.{})) ;)

(; dict ;)

def thm_590 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (hol.eq (Set_2Eset A) s_1) (hol.eq (Set_2Eset A) (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool) (hol.eq (Set_2Eset A)) (hol.eq (Set_2Eset A)) s_1 (Set_2E_7B_7D (Set_2Eset A)) (thm_589 A) (thm_577 A s_1 hyp_1).

(; Theorem: |- ((= Set.{}) Set.{}) ;)

(; dict ;)

def thm_591 : A : hol.type -> hol.proof (hol.eq (Set_2Eset A) (Set_2E_7B_7D (Set_2Eset A)) (Set_2E_7B_7D (Set_2Eset A))) :=
  A : hol.type => hol.REFL (Set_2Eset A) (Set_2E_7B_7D (Set_2Eset A)).

(; Theorem: |- ((= ((= s) Set.{})) ((= Set.{}) Set.{})) ;)

(; dict ;)

def thm_592 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (Set_2Eset A) (Set_2E_7B_7D (Set_2Eset A)) (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM (Set_2Eset A) hol.bool (hol.eq (Set_2Eset A) s_1) (hol.eq (Set_2Eset A) (Set_2E_7B_7D (Set_2Eset A))) (Set_2E_7B_7D (Set_2Eset A)) (Set_2E_7B_7D (Set_2Eset A)) (thm_590 A s_1 hyp_1) (thm_591 A).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_593 : A : hol.type -> x_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term (Set_2Eset A) => (A : hol.type => x_1 : hol.term A => thm_283 A x_1) (Set_2Eset A) x_1.

(; Theorem: |- ((= ((= Set.{}) Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_594 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2E_7B_7D (Set_2Eset A)) (Set_2E_7B_7D (Set_2Eset A))) hol.true) :=
  A : hol.type => (A : hol.type => x_1 : hol.term (Set_2Eset A) => thm_593 A x_1) A (Set_2E_7B_7D (Set_2Eset A)).

(; Theorem: |- ((= ((= s) Set.{})) Data.Bool.T) ;)

(; dict ;)

def thm_595 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.TRANS hol.bool (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq (Set_2Eset A) (Set_2E_7B_7D (Set_2Eset A)) (Set_2E_7B_7D (Set_2Eset A))) hol.true (thm_592 A s_1 hyp_1) (thm_594 A).

(; Theorem: |- ((= (Data.Bool.\/ ((= s) Set.{}))) (Data.Bool.\/ Data.Bool.T)) ;)

(; dict ;)

def thm_596 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.or hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) hol.true thm_43 (thm_595 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.\/ ((= t) Set.{}))) (Data.Bool.\/ ((= t) Set.{}))) ;)

(; dict ;)

def thm_597 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B)))).

(; Theorem: |- ((= Set.finite) Set.finite) ;)

(; dict ;)

def thm_598 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool)).

(; Theorem: |- ((= (Set.finite s)) (Set.finite Set.{})) ;)

(; dict ;)

def thm_599 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2E_7B_7D (Set_2Eset A)) (thm_598 A) (thm_577 A s_1 hyp_1).

(; Theorem: |- ((= (Set.finite s)) Data.Bool.T) ;)

(; dict ;)

def thm_600 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.TRANS hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) (Set_2E_7B_7D (Set_2Eset A))) hol.true (thm_599 A s_1 hyp_1) (thm_493 A).

(; Theorem: |- ((= (Data.Bool./\ (Set.finite s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_601 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true thm_268 (thm_600 A s_1 hyp_1).

(; Theorem: |- ((= (Set.finite t)) (Set.finite t)) ;)

(; dict ;)

def thm_602 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.REFL hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((Data.Bool./\ Data.Bool.T) (Set.finite t))) ;)

(; dict ;)

def thm_603 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.and hol.true (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) (hol.and hol.true) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (thm_601 A s_2 hyp_1) (thm_602 B t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Set.finite t))) (Set.finite t)) ;)

(; dict ;)

def thm_604 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite t)) ;)

(; dict ;)

def thm_605 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.TRANS hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.and hol.true (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (thm_603 B A t_1 s_2 hyp_1) (thm_604 B t_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))) ((Data.Bool.\/ ((= t) Set.{})) (Set.finite t))) ;)

(; dict ;)

def thm_606 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B)))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2) (thm_597 B t_2) (thm_605 B A t_2 s_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ((Data.Bool.\/ Data.Bool.T) ((Data.Bool.\/ ((= t) Set.{})) (Set.finite t)))) ;)

(; dict ;)

def thm_607 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.or hol.true (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.or hol.true) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (thm_596 A s_2 hyp_1) (thm_606 A B s_2 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) ((Data.Bool.\/ ((= t) Set.{})) (Set.finite t)))) Data.Bool.T) ;)

(; dict ;)

def thm_608 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.or hol.true (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => (t_1 : hol.term hol.bool => thm_76 t_1) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)).

(; Theorem: |- ((= ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) Data.Bool.T) ;)

(; dict ;)

def thm_609 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.TRANS hol.bool (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) (hol.or hol.true (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) hol.true (thm_607 B A t_1 s_2 hyp_1) (thm_608 B t_1).

(; Theorem: |- ((= ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_610 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (hol.eq hol.bool hol.true hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq hol.bool hol.true) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))) hol.true (thm_588 B A t_1 s_2 hyp_1) (thm_609 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) Data.Bool.T) ;)

(; dict ;)

def thm_611 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (hol.eq hol.bool hol.true hol.true) hol.true (thm_610 B A t_1 s_2 hyp_1) thm_544.

(; Theorem: |- ((= Data.Bool.T) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_612 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.SYM hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) hol.true (thm_611 B A t_1 s_2 hyp_1).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_613 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => hol.EQ_MP hol.true (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (thm_612 B A t_1 s_2 hyp_1) thm_8.

(; Theorem: |- ((Data.Bool.==> ((= s) Set.{})) ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_614 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) => thm_613 B A t_1 s_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= s) Set.{})) (Data.Bool.~ ((= s) Set.{}))) ;)

(; dict ;)

def thm_615 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.not (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_31 (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_616 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) -> hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) -> hyp_3 : hol.proof (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) => hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) => hyp_3 : hol.proof (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_567 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_617 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) -> hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) => hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) => hol.PROVE_HYP (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (thm_615 A s_2) (hyp_3 : hol.proof (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))))) => thm_616 B A t_1 s_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_618 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) => hol.PROVE_HYP (hol.imp (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (thm_614 B A t_1 s_2) (hyp_2 : hol.proof (hol.imp (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) => thm_617 B A t_1 s_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

(; dict ;)

def thm_619 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.PROVE_HYP (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))))) (thm_573 B A t_1 s_2) (hyp_1 : hol.proof (hol.imp (hol.not (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.or (hol.eq (Set_2Eset A) s_2 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_1 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)))))) => thm_618 B A t_1 s_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t)))))) ;)

(; dict ;)

def thm_620 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => thm_619 B A t_2 s_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) ;)

(; dict ;)

def thm_621 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)))))) (thm_41 A B s_1) (thm_620 A B s_1).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) ;)

(; thm ;)

def thm_622 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (hol.or (hol.eq (Set_2Eset A) s_1 (Set_2E_7B_7D (Set_2Eset A))) (hol.or (hol.eq (Set_2Eset B) t_2 (Set_2E_7B_7D (Set_2Eset B))) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2))))))) (thm_37 B A) (thm_621 B A).
