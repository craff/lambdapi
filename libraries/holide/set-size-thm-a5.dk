
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dsize_2Dthm_2Da5.

Set_2Eset : hol.type -> hol.type.

Number_2ENatural_2Enatural : hol.type.

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

Set_2Efinite : A : hol.type -> hol.term A.

Set_2Esize : A : hol.type -> hol.term A.

Set_2Ecross : A : hol.type -> hol.term A.

Number_2ENatural_2E_2A : A : hol.type -> hol.term A.

Set_2EfromPredicate : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Data_2EPair_2E_2C : A : hol.type -> hol.term A.

Set_2Emember : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_1 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))))).

(; axiom ;)

thm_2 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))).

(; axiom ;)

thm_3 : hol.proof hol.true.

(; axiom ;)

thm_4 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_5 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_7 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_8 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_9 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

(; dict ;)

def thm_10 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

(; dict ;)

def thm_11 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (thm_10 B A) (thm_10 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))))))) ;)

(; dict ;)

def thm_12 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (thm_9 A) (thm_11 B A).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_13 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B))) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))))) \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ;)

(; dict ;)

def thm_14 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))))) \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ;)

(; dict ;)

def thm_15 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))) (thm_14 A B s_1) (thm_14 A B s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

(; dict ;)

def thm_16 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))) (thm_13 B) (thm_15 A B s_1).

(; Theorem: |- ((Data.Bool./\ (Set.finite s)) (Set.finite t)) ;)

(; dict ;)

def thm_17 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => hyp_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_18 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_19 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_20 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_18 q_1 p_2) (thm_19 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_21 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_22 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_23 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_21 p_1) (thm_22 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_24 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_25 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_0 (thm_24 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_26 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_23 p_1) (thm_25 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_27 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_28 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_26 p_2) (thm_27 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_29 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_20 q_1 p_2) (thm_28 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_30 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_31 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_29 q_1 p_2) (thm_30 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_32 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_31 q_1 p_2 hyp_1 p_2.

(; Theorem: |- p ;)

(; dict ;)

def thm_33 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_34 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_35 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_33 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_34 q_1 hyp_2).

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_36 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_35 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_37 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_36 p_2 q_1 hyp_1 hyp_2) (thm_34 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_38 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_37 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_39 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_38 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_40 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_32 q_1 p_2 hyp_1 (thm_39 q_1 p_2).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_41 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_40 q_1 p_2 hyp_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) hyp_1.

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_42 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => hol.PROVE_HYP (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (thm_17 B A t_1 s_2 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => thm_41 B A t_1 s_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_43 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_31 q_1 p_2 hyp_1 q_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_44 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_35 q_2 p_1 hyp_1 hyp_2) (thm_33 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_45 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_44 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_46 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_45 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_47 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_43 q_2 p_1 hyp_1 (thm_46 q_2 p_1).

(; Theorem: |- (Set.finite t) ;)

(; dict ;)

def thm_48 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_47 p_1 q_2 hyp_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2) hyp_1.

(; Theorem: |- (Set.finite t) ;)

(; dict ;)

def thm_49 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) => hol.PROVE_HYP (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2) (thm_17 B A t_2 s_1 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) => thm_48 A B s_1 t_2 hyp_2).

(; Theorem: |- (Set.finite s) ;)

(; dict ;)

def thm_50 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hyp_1.

(; Theorem: |- (Set.finite t) ;)

(; dict ;)

def thm_51 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hyp_1.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_52 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural).

(; Theorem: |- ((= Set.size) Set.size) ;)

(; dict ;)

def thm_53 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural)).

(; Theorem: |- ((= ((= ((Set.cross s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((= ((Set.cross s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ;)

(; dict ;)

def thm_54 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1)))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))).

(; Theorem: |- ((= ((= ((Set.cross s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((= ((Set.cross s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ;)

(; dict ;)

def thm_55 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1)))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (thm_54 B A t_1 s_2) (thm_54 B A t_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Set.cross s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ;)

(; dict ;)

def thm_56 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2)))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => thm_1 B A s_1.

(; Theorem: |- ((= ((Set.cross s) t)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))))))) ;)

(; dict ;)

def thm_57 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => thm_56 A B s_2 t_1.

(; Theorem: |- ((= (Set.size ((Set.cross s) t))) (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ;)

(; dict ;)

def thm_58 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1)))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1)))))) (thm_53 B A) ((B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (hol.eq (Set_2Eset (Data_2EPair_2E_2A A B)) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (thm_55 B A t_1 s_2) (thm_57 B A t_1 s_2)) B A t_1 s_2).

(; Theorem: |- ((= (= (Set.size ((Set.cross s) t)))) (= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))))))))) ;)

(; dict ;)

def thm_59 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) thm_52 (thm_58 B A t_1 s_2).

(; Theorem: |- ((= ((Number.Natural.* (Set.size s)) (Set.size t))) ((Number.Natural.* (Set.size s)) (Set.size t))) ;)

(; dict ;)

def thm_60 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL Number_2ENatural_2Enatural (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)).

(; Theorem: |- ((= ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t)))) ;)

(; dict ;)

def thm_61 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1))) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1)))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)) (thm_59 B A t_1 s_2) (thm_60 B A t_1 s_2).

(; Theorem: |- ((= ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t)))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))) ;)

(; dict ;)

def thm_62 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (thm_61 B A t_1 s_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ;)

(; dict ;)

def thm_63 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ;)

(; dict ;)

def thm_64 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) (thm_63 B A t_1 s_2) (thm_63 B A t_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

(; dict ;)

def thm_65 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ;)

(; dict ;)

def thm_66 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_4 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_6 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_4 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_5 y_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_3))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_3)))))) -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_3)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_4 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_6 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_4 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_5 y_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_3))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_3)))))) => thm_65 B A hyp_1 s_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t)))) ;)

(; dict ;)

def thm_67 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_5 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_7 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_5 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_6 y_7)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_3) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_4)))))) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_5 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_7 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_5 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_6 y_7)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_3) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_4)))))) => thm_66 A B s_2 hyp_1 t_1.

(; Theorem: |- ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))) ;)

(; dict ;)

def thm_68 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_5 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_7 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_5 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_6 y_7)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_3) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_4)))))) -> hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_5 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_7 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_5 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_6 y_7)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_3) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_4)))))) => hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => thm_67 B A t_1 s_2 hyp_1 (thm_17 B A t_1 s_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t)))) ;)

(; dict ;)

def thm_69 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_5 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_7 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_5 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_6 y_7)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_3) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_4)))))) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => hyp_2 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_3) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_4)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_5 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_7 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_5 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_6 y_7)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_3) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_4)))))) => thm_68 B A t_1 s_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))))) ;)

(; dict ;)

def thm_70 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) => thm_69 B A t_2 s_1 hyp_2 (thm_65 B A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ;)

(; dict ;)

def thm_71 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => thm_70 B A (thm_2 B A) s_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t)))) ;)

(; dict ;)

def thm_72 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => thm_71 A B s_2 t_1.

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_73 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.T)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_74 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true).

(; Theorem: |- ((= ((= (Set.finite s)) Data.Bool.T)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_75 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_74 A s_1) (thm_74 A s_1).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_76 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_77 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_76 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_78 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_77 t_1 hyp_1) thm_3.

(; Theorem: |- t ;)

(; dict ;)

def thm_79 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_80 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_79 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_3).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_81 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_78 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_80 t_1 hyp_1).

(; Theorem: |- ((= (Set.finite s)) ((= (Set.finite s)) Data.Bool.T)) ;)

(; dict ;)

def thm_82 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_81 t_1) (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1).

(; Theorem: |- ((= (Set.finite s)) Data.Bool.T) ;)

(; dict ;)

def thm_83 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_82 A s_1) (thm_50 A s_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Set.finite s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_84 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true thm_73 (hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) hol.true) (thm_75 A s_1) (thm_83 A s_1 hyp_1)).

(; Theorem: |- ((= ((= (Set.finite t)) Data.Bool.T)) ((= (Set.finite t)) Data.Bool.T)) ;)

(; dict ;)

def thm_85 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true).

(; Theorem: |- ((= ((= (Set.finite t)) Data.Bool.T)) ((= (Set.finite t)) Data.Bool.T)) ;)

(; dict ;)

def thm_86 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) (thm_85 B t_1) (thm_85 B t_1).

(; Theorem: |- ((= (Set.finite t)) ((= (Set.finite t)) Data.Bool.T)) ;)

(; dict ;)

def thm_87 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => (t_1 : hol.term hol.bool => thm_81 t_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1).

(; Theorem: |- ((= (Set.finite t)) Data.Bool.T) ;)

(; dict ;)

def thm_88 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hol.EQ_MP (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) (thm_87 B t_1) (thm_51 B t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_89 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.and hol.true hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2)) (hol.and hol.true) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true (thm_84 A s_2 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) (hol.eq hol.bool (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) hol.true) (thm_86 B t_1) (thm_88 B t_1 hyp_2)).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_90 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_91 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_90 t_1) (thm_90 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_92 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_93 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_94 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_93 thm_93.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_95 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_92 thm_94.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_96 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_4 t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_97 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_29 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_98 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_99 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_98 x_2 q_3 p_1 hyp_2 (thm_33 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_100 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_99 p_2 x_3 q_1 hyp_1 hyp_3 (thm_34 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_101 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_100 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_102 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_101 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_103 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_97 q_1 p_2) (thm_102 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_104 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_47 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_103 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_105 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_104 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_106 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_90 t_1) (thm_96 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_105 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_107 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_108 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_107 t_1) (thm_107 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_109 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_5 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_110 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_104 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_111 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_108 t_1) (thm_109 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_110 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_112 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_113 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_112 t_1) (thm_112 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_114 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_115 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_104 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_116 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_113 t_1) (thm_114 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_115 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_117 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_118 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_117 t_1) (thm_117 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_119 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_7 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_120 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_104 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_121 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_118 t_1) (thm_119 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_120 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_122 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_123 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_122 t_1) (thm_122 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_124 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_8 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_125 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_121 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_123 t_1) (thm_124 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_126 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_116 t_1) (thm_125 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_127 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_111 t_1) (thm_126 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_128 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_106 t_1) (thm_127 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_129 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_128 t_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_130 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_40 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_131 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_95 thm_129 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_130 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_132 : hol.proof (hol.eq hol.bool (hol.and hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_91 t_1) (thm_131 t_1)) hol.true.

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) (Set.finite t))) Data.Bool.T) ;)

(; dict ;)

def thm_133 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hol.TRANS hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.and hol.true hol.true) hol.true (thm_89 B A t_1 s_2 hyp_1 hyp_2) thm_132.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ;)

(; dict ;)

def thm_134 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.eq hol.bool hol.true (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hol.SYM hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) hol.true (thm_133 B A t_1 s_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Set.finite s)) (Set.finite t)) ;)

(; dict ;)

def thm_135 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hol.EQ_MP hol.true (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (thm_134 B A t_1 s_2 hyp_1 hyp_2) thm_3.

(; Theorem: |- ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t))) ;)

(; dict ;)

def thm_136 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) (thm_64 B A t_1 s_2) (thm_72 B A t_1 s_2)) B A t_1 s_2 (thm_135 B A t_1 s_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))) ;)

(; dict ;)

def thm_137 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2EfromPredicate (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (Set_2Eset (Data_2EPair_2E_2A A B))) (v_3 : hol.term (Data_2EPair_2E_2A A B) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_5 : hol.term B => hol.and (hol.eq (Data_2EPair_2E_2A A B) v_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1))))))) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (thm_62 B A t_1 s_2) (thm_136 B A t_1 s_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))) ;)

(; dict ;)

def thm_138 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (thm_51 B t_1 hyp_2) (hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => thm_137 B A t_1 s_2 hyp_1 hyp_3).

(; Theorem: |- ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))) ;)

(; dict ;)

def thm_139 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (thm_50 A s_2 hyp_1) (hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => thm_138 B A t_1 s_2 hyp_3 hyp_2).

(; Theorem: |- ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))) ;)

(; dict ;)

def thm_140 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) -> hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => hyp_2 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (thm_49 A B s_2 t_1 hyp_2) (hyp_3 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1) => thm_139 B A t_1 s_2 hyp_1 hyp_3).

(; Theorem: |- ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))) ;)

(; dict ;)

def thm_141 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => hol.PROVE_HYP (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1))) (thm_42 B A t_1 s_2 hyp_1) (hyp_2 : hol.proof (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) => thm_140 B A t_1 s_2 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))) ;)

(; dict ;)

def thm_142 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_1)) => thm_141 B A t_1 s_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t))))) ;)

(; dict ;)

def thm_143 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => thm_142 B A t_2 s_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

(; dict ;)

def thm_144 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2))))) (thm_16 A B s_1) (thm_143 A B s_1).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

(; thm ;)

def thm_145 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (Set_2Efinite (hol.arr (Set_2Eset B) hol.bool) t_2)) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) Number_2ENatural_2Enatural) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_2)) (Number_2ENatural_2E_2A (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) (Set_2Esize (hol.arr (Set_2Eset B) Number_2ENatural_2Enatural) t_2)))))) (thm_12 B A) (thm_144 B A).
