
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dsize_2Ddef_2Da1.

Set_2Eset : hol.type -> hol.type.

Number_2ENatural_2Enatural : hol.type.

Set_2Efinite : A : hol.type -> hol.term A.

Set_2Esize : A : hol.type -> hol.term A.

(; Constant Set.hasSize ;)

def Set_2EhasSize : A : hol.type -> hol.term (hol.arr (Set_2Eset A) (hol.arr Number_2ENatural_2Enatural hol.bool)) :=
  A : hol.type => __10197_1 : hol.term (Set_2Eset A) => __10198_2 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_1) __10198_2).

(; Theorem: |- ((= Set.hasSize) \lambda _10197. \lambda _10198. ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198))) ;)

(; dict ;)

def thm_0 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) (hol.arr Number_2ENatural_2Enatural hol.bool)) (Set_2EhasSize A) (__10197_1 : hol.term (Set_2Eset A) => __10198_2 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_1) __10198_2))) :=
  A : hol.type => hol.REFL (hol.arr (Set_2Eset A) (hol.arr Number_2ENatural_2Enatural hol.bool)) (Set_2EhasSize A).

(; Theorem: |- ((= _10197) _10197) ;)

(; dict ;)

def thm_1 : A : hol.type -> __10197_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset A) __10197_1 __10197_1) :=
  A : hol.type => __10197_1 : hol.term (Set_2Eset A) => hol.REFL (Set_2Eset A) __10197_1.

(; Theorem: |- ((= (Set.hasSize _10197)) (\lambda _10197. \lambda _10198. ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198)) _10197)) ;)

(; dict ;)

def thm_2 : A : hol.type -> __10197_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (Set_2EhasSize A __10197_1) ((__10197_2 : hol.term (Set_2Eset A) => __10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10197_1)) :=
  A : hol.type => __10197_1 : hol.term (Set_2Eset A) => hol.APP_THM (Set_2Eset A) (hol.arr Number_2ENatural_2Enatural hol.bool) (Set_2EhasSize A) (__10197_2 : hol.term (Set_2Eset A) => __10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10197_1 __10197_1 (thm_0 A) (thm_1 A __10197_1).

(; Theorem: |- ((= (\lambda _10197. \lambda _10198. ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198)) _10197)) \lambda _10198. ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198))) ;)

(; dict ;)

def thm_3 : A : hol.type -> __10197_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) ((__10197_2 : hol.term (Set_2Eset A) => __10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10197_1) (__10198_2 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_1) __10198_2))) :=
  A : hol.type => __10197_1 : hol.term (Set_2Eset A) => hol.BETA_CONV (Set_2Eset A) (hol.arr Number_2ENatural_2Enatural hol.bool) (__10197_2 : hol.term (Set_2Eset A) => __10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10197_1.

(; Theorem: |- ((= (Set.hasSize _10197)) \lambda _10198. ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198))) ;)

(; dict ;)

def thm_4 : A : hol.type -> __10197_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (Set_2EhasSize A __10197_1) (__10198_2 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_1) __10198_2))) :=
  A : hol.type => __10197_1 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr Number_2ENatural_2Enatural hol.bool) (Set_2EhasSize A __10197_1) ((__10197_2 : hol.term (Set_2Eset A) => __10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10197_1) (__10198_2 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_1) __10198_2)) (thm_2 A __10197_1) (thm_3 A __10197_1).

(; Theorem: |- ((= _10198) _10198) ;)

(; dict ;)

def thm_5 : __10198_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __10198_1 __10198_1) :=
  __10198_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __10198_1.

(; Theorem: |- ((= ((Set.hasSize _10197) _10198)) (\lambda _10198. ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198)) _10198)) ;)

(; dict ;)

def thm_6 : A : hol.type -> __10198_1 : hol.term Number_2ENatural_2Enatural -> __10197_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2EhasSize A __10197_2 __10198_1) ((__10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10198_1)) :=
  A : hol.type => __10198_1 : hol.term Number_2ENatural_2Enatural => __10197_2 : hol.term (Set_2Eset A) => hol.APP_THM Number_2ENatural_2Enatural hol.bool (Set_2EhasSize A __10197_2) (__10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10198_1 __10198_1 (thm_4 A __10197_2) (thm_5 __10198_1).

(; Theorem: |- ((= (\lambda _10198. ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198)) _10198)) ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198))) ;)

(; dict ;)

def thm_7 : A : hol.type -> __10198_1 : hol.term Number_2ENatural_2Enatural -> __10197_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((__10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10198_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_1))) :=
  A : hol.type => __10198_1 : hol.term Number_2ENatural_2Enatural => __10197_2 : hol.term (Set_2Eset A) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (__10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10198_1.

(; Theorem: |- ((= ((Set.hasSize _10197) _10198)) ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198))) ;)

(; dict ;)

def thm_8 : A : hol.type -> __10198_1 : hol.term Number_2ENatural_2Enatural -> __10197_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2EhasSize A __10197_2 __10198_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_1))) :=
  A : hol.type => __10198_1 : hol.term Number_2ENatural_2Enatural => __10197_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (Set_2EhasSize A __10197_2 __10198_1) ((__10198_3 : hol.term Number_2ENatural_2Enatural => hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_3)) __10198_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_2) __10198_1)) (thm_6 A __10198_1 __10197_2) (thm_7 A __10198_1 __10197_2).

(; Theorem: |- (Data.Bool.! \lambda _10198. ((= ((Set.hasSize _10197) _10198)) ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198)))) ;)

(; dict ;)

def thm_9 : A : hol.type -> __10197_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall Number_2ENatural_2Enatural (__10198_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Set_2EhasSize A __10197_1 __10198_2) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_1) __10198_2)))) :=
  A : hol.type => __10197_1 : hol.term (Set_2Eset A) => __10198_2 : hol.term Number_2ENatural_2Enatural => thm_8 A __10198_2 __10197_1.

(; Theorem: |- (Data.Bool.! \lambda _10197. (Data.Bool.! \lambda _10198. ((= ((Set.hasSize _10197) _10198)) ((Data.Bool./\ (Set.finite _10197)) ((= (Set.size _10197)) _10198))))) ;)

(; dict ;)

def thm_10 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (__10197_1 : hol.term (Set_2Eset A) => hol.forall Number_2ENatural_2Enatural (__10198_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Set_2EhasSize A __10197_1 __10198_2) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) __10197_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) __10197_1) __10198_2))))) :=
  A : hol.type => __10197_1 : hol.term (Set_2Eset A) => thm_9 A __10197_1.

(; Theorem: |- ((= ((Set.hasSize s) n)) ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n))) ;)

(; dict ;)

def thm_11 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2EhasSize A s_2 n_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (Set_2Eset A) => (A : hol.type => __10198_1 : hol.term Number_2ENatural_2Enatural => __10197_2 : hol.term (Set_2Eset A) => thm_10 A __10197_2 __10198_1) A n_1 s_2.

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n))) ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n))) ;)

(; dict ;)

def thm_12 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1)).

(; Theorem: |- ((= ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n))) ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n))) ;)

(; dict ;)

def thm_13 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1)) (thm_12 A n_1 s_2).

(; Theorem: |- ((= ((Set.hasSize s) n)) ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n))) ;)

(; dict ;)

def thm_14 : A : hol.type -> n_1 : hol.term Number_2ENatural_2Enatural -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2EhasSize A s_2 n_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1))) :=
  A : hol.type => n_1 : hol.term Number_2ENatural_2Enatural => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (Set_2EhasSize A s_2 n_1) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1)) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_2) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_2) n_1)) (thm_11 A n_1 s_2) (thm_13 A n_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((= ((Set.hasSize s) n)) ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n)))) ;)

(; dict ;)

def thm_15 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Set_2EhasSize A s_1 n_2) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) n_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => n_2 : hol.term Number_2ENatural_2Enatural => thm_14 A n_2 s_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((= ((Set.hasSize s) n)) ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n))))) ;)

(; dict ;)

def thm_16 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (Set_2EhasSize A s_1 n_2) (hol.and (Set_2Efinite (hol.arr (Set_2Eset A) hol.bool) s_1) (hol.eq Number_2ENatural_2Enatural (Set_2Esize (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) s_1) n_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_15 A s_1.
