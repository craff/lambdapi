
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME natural_2Dorder_2Dmin_2Dmax_2Ddef.

Number_2ENatural_2Enatural : hol.type.

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Number_2ENatural_2E_3C : A : hol.type -> hol.term A.

(; Constant Number.Natural.max ;)

def Number_2ENatural_2Emax : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) :=
  __2090_1 : hol.term Number_2ENatural_2Enatural => __2091_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_1 __2091_2) __2091_2 __2090_1.

(; Constant Number.Natural.min ;)

def Number_2ENatural_2Emin : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) :=
  __2102_1 : hol.term Number_2ENatural_2Enatural => __2103_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_1 __2103_2) __2102_1 __2103_2.

(; Constant Number.Natural.minimal ;)

def Number_2ENatural_2Eminimal : hol.term (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) Number_2ENatural_2Enatural) :=
  __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (__2114_1 m_3))))).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))).

(; axiom ;)

thm_1 : hol.proof hol.true.

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_3 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))).

(; Theorem: |- ((= Number.Natural.max) \lambda _2090. \lambda _2091. (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090)) ;)

(; dict ;)

def thm_4 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) Number_2ENatural_2Emax (__2090_1 : hol.term Number_2ENatural_2Enatural => __2091_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_1 __2091_2) __2091_2 __2090_1)) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) Number_2ENatural_2Emax.

(; Theorem: |- ((= _2090) _2090) ;)

(; dict ;)

def thm_5 : __2090_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __2090_1 __2090_1) :=
  __2090_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __2090_1.

(; Theorem: |- ((= (Number.Natural.max _2090)) (\lambda _2090. \lambda _2091. (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090) _2090)) ;)

(; dict ;)

def thm_6 : __2090_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Emax __2090_1) ((__2090_2 : hol.term Number_2ENatural_2Enatural => __2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2090_1)) :=
  __2090_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Emax (__2090_2 : hol.term Number_2ENatural_2Enatural => __2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2090_1 __2090_1 thm_4 (thm_5 __2090_1).

(; Theorem: |- ((= (\lambda _2090. \lambda _2091. (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090) _2090)) \lambda _2091. (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090)) ;)

(; dict ;)

def thm_7 : __2090_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) ((__2090_2 : hol.term Number_2ENatural_2Enatural => __2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2090_1) (__2091_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_1 __2091_2) __2091_2 __2090_1)) :=
  __2090_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (__2090_2 : hol.term Number_2ENatural_2Enatural => __2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2090_1.

(; Theorem: |- ((= (Number.Natural.max _2090)) \lambda _2091. (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090)) ;)

(; dict ;)

def thm_8 : __2090_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Emax __2090_1) (__2091_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_1 __2091_2) __2091_2 __2090_1)) :=
  __2090_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Emax __2090_1) ((__2090_2 : hol.term Number_2ENatural_2Enatural => __2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2090_1) (__2091_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_1 __2091_2) __2091_2 __2090_1) (thm_6 __2090_1) (thm_7 __2090_1).

(; Theorem: |- ((= _2091) _2091) ;)

(; dict ;)

def thm_9 : __2091_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __2091_1 __2091_1) :=
  __2091_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __2091_1.

(; Theorem: |- ((= ((Number.Natural.max _2090) _2091)) (\lambda _2091. (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090) _2091)) ;)

(; dict ;)

def thm_10 : __2091_1 : hol.term Number_2ENatural_2Enatural -> __2090_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emax __2090_2 __2091_1) ((__2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2091_1)) :=
  __2091_1 : hol.term Number_2ENatural_2Enatural => __2090_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (Number_2ENatural_2Emax __2090_2) (__2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2091_1 __2091_1 (thm_8 __2090_2) (thm_9 __2091_1).

(; Theorem: |- ((= (\lambda _2091. (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090) _2091)) (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090)) ;)

(; dict ;)

def thm_11 : __2091_1 : hol.term Number_2ENatural_2Enatural -> __2090_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural ((__2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2091_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_1) __2091_1 __2090_2)) :=
  __2091_1 : hol.term Number_2ENatural_2Enatural => __2090_2 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (__2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2091_1.

(; Theorem: |- ((= ((Number.Natural.max _2090) _2091)) (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090)) ;)

(; dict ;)

def thm_12 : __2091_1 : hol.term Number_2ENatural_2Enatural -> __2090_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emax __2090_2 __2091_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_1) __2091_1 __2090_2)) :=
  __2091_1 : hol.term Number_2ENatural_2Enatural => __2090_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Emax __2090_2 __2091_1) ((__2091_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_3) __2091_3 __2090_2) __2091_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_2 __2091_1) __2091_1 __2090_2) (thm_10 __2091_1 __2090_2) (thm_11 __2091_1 __2090_2).

(; Theorem: |- (Data.Bool.! \lambda _2091. ((= ((Number.Natural.max _2090) _2091)) (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090))) ;)

(; dict ;)

def thm_13 : __2090_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (__2091_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emax __2090_1 __2091_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_1 __2091_2) __2091_2 __2090_1))) :=
  __2090_1 : hol.term Number_2ENatural_2Enatural => __2091_2 : hol.term Number_2ENatural_2Enatural => thm_12 __2091_2 __2090_1.

(; Theorem: |- (Data.Bool.! \lambda _2090. (Data.Bool.! \lambda _2091. ((= ((Number.Natural.max _2090) _2091)) (((Data.Bool.cond ((Number.Natural.<= _2090) _2091)) _2091) _2090)))) ;)

(; dict ;)

def thm_14 : hol.proof (hol.forall Number_2ENatural_2Enatural (__2090_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (__2091_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emax __2090_1 __2091_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2090_1 __2091_2) __2091_2 __2090_1)))) :=
  __2090_1 : hol.term Number_2ENatural_2Enatural => thm_13 __2090_1.

(; Theorem: |- ((= ((Number.Natural.max m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) n) m)) ;)

(; dict ;)

def thm_15 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emax m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => (__2091_1 : hol.term Number_2ENatural_2Enatural => __2090_2 : hol.term Number_2ENatural_2Enatural => thm_14 __2090_2 __2091_1) n_1 m_2.

(; Theorem: |- ((= (((Data.Bool.cond ((Number.Natural.<= m) n)) n) m)) (((Data.Bool.cond ((Number.Natural.<= m) n)) n) m)) ;)

(; dict ;)

def thm_16 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2).

(; Theorem: |- ((= (((Data.Bool.cond ((Number.Natural.<= m) n)) n) m)) (((Data.Bool.cond ((Number.Natural.<= m) n)) n) m)) ;)

(; dict ;)

def thm_17 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.SYM Number_2ENatural_2Enatural (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2) (thm_16 n_1 m_2).

(; Theorem: |- ((= ((Number.Natural.max m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) n) m)) ;)

(; dict ;)

def thm_18 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emax m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Emax m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) n_1 m_2) (thm_15 n_1 m_2) (thm_17 n_1 m_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((= ((Number.Natural.max m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) n) m))) ;)

(; dict ;)

def thm_19 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emax m_1 n_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) n_2 m_1))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => thm_18 n_2 m_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.max m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) n) m)))) ;)

(; dict ;)

def thm_20 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emax m_1 n_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) n_2 m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => thm_19 m_1.

(; Theorem: |- ((= Number.Natural.min) \lambda _2102. \lambda _2103. (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103)) ;)

(; dict ;)

def thm_21 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) Number_2ENatural_2Emin (__2102_1 : hol.term Number_2ENatural_2Enatural => __2103_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_1 __2103_2) __2102_1 __2103_2)) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) Number_2ENatural_2Emin.

(; Theorem: |- ((= _2102) _2102) ;)

(; dict ;)

def thm_22 : __2102_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __2102_1 __2102_1) :=
  __2102_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __2102_1.

(; Theorem: |- ((= (Number.Natural.min _2102)) (\lambda _2102. \lambda _2103. (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103) _2102)) ;)

(; dict ;)

def thm_23 : __2102_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Emin __2102_1) ((__2102_2 : hol.term Number_2ENatural_2Enatural => __2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2102_1)) :=
  __2102_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Emin (__2102_2 : hol.term Number_2ENatural_2Enatural => __2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2102_1 __2102_1 thm_21 (thm_22 __2102_1).

(; Theorem: |- ((= (\lambda _2102. \lambda _2103. (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103) _2102)) \lambda _2103. (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103)) ;)

(; dict ;)

def thm_24 : __2102_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) ((__2102_2 : hol.term Number_2ENatural_2Enatural => __2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2102_1) (__2103_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_1 __2103_2) __2102_1 __2103_2)) :=
  __2102_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (__2102_2 : hol.term Number_2ENatural_2Enatural => __2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2102_1.

(; Theorem: |- ((= (Number.Natural.min _2102)) \lambda _2103. (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103)) ;)

(; dict ;)

def thm_25 : __2102_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Emin __2102_1) (__2103_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_1 __2103_2) __2102_1 __2103_2)) :=
  __2102_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Emin __2102_1) ((__2102_2 : hol.term Number_2ENatural_2Enatural => __2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2102_1) (__2103_2 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_1 __2103_2) __2102_1 __2103_2) (thm_23 __2102_1) (thm_24 __2102_1).

(; Theorem: |- ((= _2103) _2103) ;)

(; dict ;)

def thm_26 : __2103_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __2103_1 __2103_1) :=
  __2103_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __2103_1.

(; Theorem: |- ((= ((Number.Natural.min _2102) _2103)) (\lambda _2103. (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103) _2103)) ;)

(; dict ;)

def thm_27 : __2103_1 : hol.term Number_2ENatural_2Enatural -> __2102_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emin __2102_2 __2103_1) ((__2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2103_1)) :=
  __2103_1 : hol.term Number_2ENatural_2Enatural => __2102_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (Number_2ENatural_2Emin __2102_2) (__2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2103_1 __2103_1 (thm_25 __2102_2) (thm_26 __2103_1).

(; Theorem: |- ((= (\lambda _2103. (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103) _2103)) (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103)) ;)

(; dict ;)

def thm_28 : __2103_1 : hol.term Number_2ENatural_2Enatural -> __2102_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural ((__2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2103_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_1) __2102_2 __2103_1)) :=
  __2103_1 : hol.term Number_2ENatural_2Enatural => __2102_2 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (__2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2103_1.

(; Theorem: |- ((= ((Number.Natural.min _2102) _2103)) (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103)) ;)

(; dict ;)

def thm_29 : __2103_1 : hol.term Number_2ENatural_2Enatural -> __2102_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emin __2102_2 __2103_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_1) __2102_2 __2103_1)) :=
  __2103_1 : hol.term Number_2ENatural_2Enatural => __2102_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Emin __2102_2 __2103_1) ((__2103_3 : hol.term Number_2ENatural_2Enatural => hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_3) __2102_2 __2103_3) __2103_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_2 __2103_1) __2102_2 __2103_1) (thm_27 __2103_1 __2102_2) (thm_28 __2103_1 __2102_2).

(; Theorem: |- (Data.Bool.! \lambda _2103. ((= ((Number.Natural.min _2102) _2103)) (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103))) ;)

(; dict ;)

def thm_30 : __2102_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (__2103_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emin __2102_1 __2103_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_1 __2103_2) __2102_1 __2103_2))) :=
  __2102_1 : hol.term Number_2ENatural_2Enatural => __2103_2 : hol.term Number_2ENatural_2Enatural => thm_29 __2103_2 __2102_1.

(; Theorem: |- (Data.Bool.! \lambda _2102. (Data.Bool.! \lambda _2103. ((= ((Number.Natural.min _2102) _2103)) (((Data.Bool.cond ((Number.Natural.<= _2102) _2103)) _2102) _2103)))) ;)

(; dict ;)

def thm_31 : hol.proof (hol.forall Number_2ENatural_2Enatural (__2102_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (__2103_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emin __2102_1 __2103_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __2102_1 __2103_2) __2102_1 __2103_2)))) :=
  __2102_1 : hol.term Number_2ENatural_2Enatural => thm_30 __2102_1.

(; Theorem: |- ((= ((Number.Natural.min m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) m) n)) ;)

(; dict ;)

def thm_32 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emin m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => (__2103_1 : hol.term Number_2ENatural_2Enatural => __2102_2 : hol.term Number_2ENatural_2Enatural => thm_31 __2102_2 __2103_1) n_1 m_2.

(; Theorem: |- ((= (((Data.Bool.cond ((Number.Natural.<= m) n)) m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) m) n)) ;)

(; dict ;)

def thm_33 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1).

(; Theorem: |- ((= (((Data.Bool.cond ((Number.Natural.<= m) n)) m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) m) n)) ;)

(; dict ;)

def thm_34 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.SYM Number_2ENatural_2Enatural (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1) (thm_33 n_1 m_2).

(; Theorem: |- ((= ((Number.Natural.min m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) m) n)) ;)

(; dict ;)

def thm_35 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emin m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Emin m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) m_2 n_1) (thm_32 n_1 m_2) (thm_34 n_1 m_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((= ((Number.Natural.min m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) m) n))) ;)

(; dict ;)

def thm_36 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emin m_1 n_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) m_1 n_2))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => thm_35 n_2 m_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.min m) n)) (((Data.Bool.cond ((Number.Natural.<= m) n)) m) n)))) ;)

(; dict ;)

def thm_37 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Emin m_1 n_2) (hol.cond Number_2ENatural_2Enatural (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) m_1 n_2)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => thm_36 m_1.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_38 : hol.proof (hol.eq (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool))) :=
  hol.REFL (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)).

(; Theorem: |- ((= Number.Natural.minimal) \lambda _2114. (select \lambda n. ((Data.Bool./\ (_2114 n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (_2114 m))))))) ;)

(; dict ;)

def thm_39 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) Number_2ENatural_2Enatural) Number_2ENatural_2Eminimal (__2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (__2114_1 m_3))))))) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) Number_2ENatural_2Enatural) Number_2ENatural_2Eminimal.

(; Theorem: |- ((= \lambda p. ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))))) \lambda p. ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_40 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))))) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))).

(; Theorem: |- ((= \lambda p. ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))))) \lambda p. ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_41 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))))) :=
  hol.TRANS (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) thm_40 thm_40.

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_42 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))))) :=
  hol.APP_THM (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) thm_38 thm_41.

(; Theorem: |- ((= (= (Data.Bool.? \lambda n. (p n)))) (= (Data.Bool.? \lambda n. (p n)))) ;)

(; dict ;)

def thm_43 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))).

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_44 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_45 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) p_1 p_1) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) p_1.

(; Theorem: |- ((= ((= (Number.Natural.minimal p)) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ((= (Number.Natural.minimal p)) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_46 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))).

(; Theorem: |- ((= ((= (Number.Natural.minimal p)) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ((= (Number.Natural.minimal p)) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_47 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (thm_46 p_1) (thm_46 p_1).

(; Theorem: |- ((= _2114) _2114) ;)

(; dict ;)

def thm_48 : __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) __2114_1 __2114_1) :=
  __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) __2114_1.

(; Theorem: |- ((= (Number.Natural.minimal _2114)) (\lambda _2114. (select \lambda n. ((Data.Bool./\ (_2114 n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (_2114 m)))))) _2114)) ;)

(; dict ;)

def thm_49 : __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal __2114_1) ((__2114_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_2 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (__2114_2 m_4)))))) __2114_1)) :=
  __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) Number_2ENatural_2Enatural Number_2ENatural_2Eminimal (__2114_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_2 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (__2114_2 m_4)))))) __2114_1 __2114_1 thm_39 (thm_48 __2114_1).

(; Theorem: |- ((= (\lambda _2114. (select \lambda n. ((Data.Bool./\ (_2114 n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (_2114 m)))))) _2114)) (select \lambda n. ((Data.Bool./\ (_2114 n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (_2114 m))))))) ;)

(; dict ;)

def thm_50 : __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq Number_2ENatural_2Enatural ((__2114_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_2 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (__2114_2 m_4)))))) __2114_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (__2114_1 m_3))))))) :=
  __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.BETA_CONV (hol.arr Number_2ENatural_2Enatural hol.bool) Number_2ENatural_2Enatural (__2114_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_2 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (__2114_2 m_4)))))) __2114_1.

(; Theorem: |- ((= (Number.Natural.minimal _2114)) (select \lambda n. ((Data.Bool./\ (_2114 n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (_2114 m))))))) ;)

(; dict ;)

def thm_51 : __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal __2114_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (__2114_1 m_3))))))) :=
  __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal __2114_1) ((__2114_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_2 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (__2114_2 m_4)))))) __2114_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (__2114_1 m_3)))))) (thm_49 __2114_1) (thm_50 __2114_1).

(; Theorem: |- (Data.Bool.! \lambda _2114. ((= (Number.Natural.minimal _2114)) (select \lambda n. ((Data.Bool./\ (_2114 n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (_2114 m)))))))) ;)

(; dict ;)

def thm_52 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (__2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal __2114_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (__2114_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (__2114_1 m_3)))))))) :=
  __2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_51 __2114_1.

(; Theorem: |- ((= (Number.Natural.minimal p)) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_53 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (__2114_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_52 __2114_1) p_1.

(; Theorem: |- ((= (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_54 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq Number_2ENatural_2Enatural (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL Number_2ENatural_2Enatural (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))).

(; Theorem: |- ((= (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_55 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq Number_2ENatural_2Enatural (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.SYM Number_2ENatural_2Enatural (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (thm_54 p_1).

(; Theorem: |- ((= (Number.Natural.minimal p)) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_56 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (thm_53 p_1) (thm_55 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Number.Natural.minimal p)) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_57 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_56 p_1.

(; Theorem: |- ((= (p (Number.Natural.minimal p))) (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_58 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (p_1 (Number_2ENatural_2Eminimal p_1)) (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM Number_2ENatural_2Enatural hol.bool p_1 p_1 (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (thm_45 p_1) (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (thm_47 p_1) (thm_57 p_1)).

(; Theorem: |- ((= (Data.Bool./\ (p (Number.Natural.minimal p)))) (Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))))) ;)

(; dict ;)

def thm_59 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1))) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) thm_44 (thm_58 p_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_60 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural).

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_61 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= (Number.Natural.< m)) (Number.Natural.< m)) ;)

(; dict ;)

def thm_62 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1)) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1).

(; Theorem: |- ((= ((Number.Natural.< m) (Number.Natural.minimal p))) ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_63 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2) (Number_2ENatural_2Eminimal p_1) (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4)))))) (thm_62 m_2) (thm_53 p_1).

(; Theorem: |- ((= (Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p)))) (Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))))) ;)

(; dict ;)

def thm_64 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) thm_61 (thm_63 p_1 m_2).

(; Theorem: |- ((= (Data.Bool.~ (p m))) (Data.Bool.~ (p m))) ;)

(; dict ;)

def thm_65 : m_1 : hol.term Number_2ENatural_2Enatural -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (p_2 m_1)) (hol.not (p_2 m_1))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.not (p_2 m_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m)))) ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m)))) ;)

(; dict ;)

def thm_66 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4)))))))) (hol.not (p_1 m_2)) (hol.not (p_1 m_2)) (thm_64 p_1 m_2) (thm_65 m_2 p_1).

(; Theorem: |- ((= \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m)))) \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m)))) ;)

(; dict ;)

def thm_67 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))) (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))) (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))) (m_2 : hol.term Number_2ENatural_2Enatural => thm_66 p_1 m_2).

(; Theorem: |- ((= (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m))))) ;)

(; dict ;)

def thm_68 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))) (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))) thm_60 (thm_67 p_1).

(; Theorem: |- ((= ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m)))))) ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m)))))) ;)

(; dict ;)

def thm_69 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (p_1 (Number_2ENatural_2Eminimal p_1))) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))) (thm_59 p_1) (thm_68 p_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))))) ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_70 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))) (thm_43 p_1) (thm_69 p_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m))))))) ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_71 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) (thm_70 p_1).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_72 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= (\lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m)))))) ;)

(; dict ;)

def thm_73 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))).

(; Theorem: |- ((= (= (\lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))))) (= ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_74 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) (hol.eq hol.bool (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))) thm_72 (thm_73 p_1).

(; Theorem: |- ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_75 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))).

(; Theorem: |- ((= ((= (\lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ((= ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m)))))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_76 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq hol.bool (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) (hol.eq hol.bool (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (thm_74 p_1) (thm_75 p_1).

(; Theorem: |- ((= (= (p (select p)))) (= (p (select p)))) ;)

(; dict ;)

def thm_77 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (p_1 (hol.select A p_1))) (hol.eq hol.bool (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (p_1 (hol.select A p_1))).

(; Theorem: |- ((= ((= Data.Bool.?) \lambda p. (p (select p)))) ((= Data.Bool.?) \lambda p. (p (select p)))) ;)

(; dict ;)

def thm_78 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)))) :=
  A : hol.type => hol.REFL hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))).

(; Theorem: |- ((= ((= Data.Bool.?) \lambda p. (p (select p)))) ((= Data.Bool.?) \lambda p. (p (select p)))) ;)

(; dict ;)

def thm_79 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)))) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (thm_78 A) (thm_78 A).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_80 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) p_1 p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) p_1.

(; Theorem: |- ((= (Data.Bool.? p)) (\lambda p. (p (select p)) p)) ;)

(; dict ;)

def thm_81 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1 p_1 (hol.EQ_MP (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2))) (thm_79 A) (thm_0 A)) (thm_80 A p_1).

(; Theorem: |- ((= (\lambda p. (p (select p)) p)) (p (select p))) ;)

(; dict ;)

def thm_82 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1.

(; Theorem: |- ((= \lambda p. (\lambda p. (p (select p)) p)) \lambda p. (p (select p))) ;)

(; dict ;)

def thm_83 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) :=
  A : hol.type => hol.ABS_THM (hol.arr A hol.bool) hol.bool (p_1 : hol.term (hol.arr A hol.bool) => (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)) (p_1 : hol.term (hol.arr A hol.bool) => thm_82 A p_1).

(; Theorem: |- ((= (\lambda p. (\lambda p. (p (select p)) p) p)) (\lambda p. (p (select p)) p)) ;)

(; dict ;)

def thm_84 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1 p_1 (thm_83 A) (thm_80 A p_1).

(; Theorem: |- ((= (= (\lambda p. (\lambda p. (p (select p)) p) p))) (= (\lambda p. (p (select p)) p))) ;)

(; dict ;)

def thm_85 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1)) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) thm_72 (thm_84 A p_1).

(; Theorem: |- ((= ((= (\lambda p. (\lambda p. (p (select p)) p) p)) (\lambda p. (p (select p)) p))) ((= (\lambda p. (p (select p)) p)) (p (select p)))) ;)

(; dict ;)

def thm_86 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1)) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1)) (thm_85 A p_1) (thm_82 A p_1).

(; Theorem: |- ((= (Data.Bool.? p)) (p (select p))) ;)

(; dict ;)

def thm_87 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1)) (thm_81 A p_1) (hol.EQ_MP (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1))) (thm_86 A p_1) (thm_84 A p_1)).

(; Theorem: |- ((= ((= (p (select p))) (Data.Bool.? p))) ((= (p (select p))) (p (select p)))) ;)

(; dict ;)

def thm_88 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) (hol.eq hol.bool (p_1 (hol.select A p_1)) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1))) (hol.eq hol.bool (p_1 (hol.select A p_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1)) (thm_77 A p_1) (thm_87 A p_1).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_89 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_90 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_89 A x_1) (thm_89 A x_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_91 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_92 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_93 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_92 A) (thm_92 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_94 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_91 A) (thm_93 A).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_95 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_96 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_95 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_97 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_96 t_1 hyp_1) thm_1.

(; Theorem: |- t ;)

(; dict ;)

def thm_98 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_99 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_98 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_1).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_100 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_97 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_99 t_1 hyp_1).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_101 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_100 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_102 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_2 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_103 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_101 A x_1) (thm_102 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_104 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_89 A x_1) (thm_103 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_105 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_1 x_1) hol.true) :=
  x_1 : hol.term hol.bool => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_90 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_94 A) (thm_104 A) x_1)) hol.bool x_1.

(; Theorem: |- ((= ((= (p (select p))) (p (select p)))) Data.Bool.T) ;)

(; dict ;)

def thm_106 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (p_1 (hol.select A p_1))) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (x_1 : hol.term hol.bool => thm_105 x_1) (p_1 (hol.select A p_1)).

(; Theorem: |- ((= ((= (p (select p))) (Data.Bool.? p))) Data.Bool.T) ;)

(; dict ;)

def thm_107 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) (hol.eq hol.bool (p_1 (hol.select A p_1)) (p_1 (hol.select A p_1))) hol.true (thm_88 A p_1) (thm_106 A p_1).

(; Theorem: |- ((= Data.Bool.T) ((= (p (select p))) (Data.Bool.? p))) ;)

(; dict ;)

def thm_108 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) hol.true (thm_107 A p_1).

(; Theorem: |- ((= (p (select p))) (Data.Bool.? p)) ;)

(; dict ;)

def thm_109 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP hol.true (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) (thm_108 A p_1) thm_1.

(; Theorem: |- ((= (\lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_110 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool ((n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_109 A p_1) Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))).

(; Theorem: |- ((= ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m)))))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_111 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.EQ_MP (hol.eq hol.bool ((n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))) (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq hol.bool (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (thm_76 p_1) (thm_110 p_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m))))))) ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_112 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (thm_43 p_1) (thm_111 p_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_113 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (thm_112 p_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n)))) ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n)))) ;)

(; dict ;)

def thm_114 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n)))) ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n)))) ;)

(; dict ;)

def thm_115 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (thm_114 p_1) (thm_114 p_1).

(; Theorem: |- ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n))) ;)

(; dict ;)

def thm_116 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_117 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (thm_116 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_118 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n))) ;)

(; dict ;)

def thm_119 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (thm_118 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n)))) ;)

(; dict ;)

def thm_120 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.PROP_EXT (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) => thm_117 p_1 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) => thm_119 p_1 hyp_1).

(; Theorem: |- ((= \lambda p. ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) \lambda p. ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n)))) ;)

(; dict ;)

def thm_121 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  hol.ABS_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_120 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))))) (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n))))) ;)

(; dict ;)

def thm_122 : hol.proof (hol.eq hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))))) :=
  hol.APP_THM (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) hol.bool (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool)) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) thm_38 thm_121.

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n)))) ;)

(; dict ;)

def thm_123 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  hol.EQ_MP (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) thm_122 thm_3.

(; Theorem: |- ((= (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) (Data.Bool.? \lambda n. (p n))) ;)

(; dict ;)

def thm_124 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_123 p_1.

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. (p n)))) ;)

(; dict ;)

def thm_125 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (thm_43 p_1) (hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) (thm_115 p_1) (thm_124 p_1)).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. (p n)))) Data.Bool.T) ;)

(; dict ;)

def thm_126 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (x_1 : hol.term hol.bool => thm_105 x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) Data.Bool.T) ;)

(; dict ;)

def thm_127 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) hol.true) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2))) hol.true (thm_125 p_1) (thm_126 p_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) ;)

(; dict ;)

def thm_128 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3)))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) hol.true (thm_127 p_1).

(; Theorem: |- ((= (Data.Bool.? \lambda n. (p n))) (Data.Bool.? \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_129 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.EQ_MP hol.true (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (thm_128 p_1) thm_1.

(; Theorem: |- ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (select \lambda n. ((Data.Bool./\ (p n)) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) (Data.Bool.~ (p m)))))))) (Data.Bool.~ (p m)))))) ;)

(; dict ;)

def thm_130 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) (thm_113 p_1) (thm_129 p_1).

(; Theorem: |- ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m)))))) ;)

(; dict ;)

def thm_131 : p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (hol.select Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_2) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (hol.not (p_1 m_3))))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (hol.select Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_1 n_3) (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_3) (hol.not (p_1 m_4))))))) (hol.not (p_1 m_2)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2)))))) (thm_71 p_1) (thm_130 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))))) ;)

(; dict ;)

def thm_132 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))))) :=
  p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_131 p_1.

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda n. (p n))) ((Data.Bool./\ (p (Number.Natural.minimal p))) (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) (Number.Natural.minimal p))) (Data.Bool.~ (p m))))))) ;)

(; thm ;)

def thm_133 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))))) :=
  hol.EQ_MP (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))))) (hol.forall (hol.arr Number_2ENatural_2Enatural hol.bool) (p_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => p_1 n_2)) (hol.and (p_1 (Number_2ENatural_2Eminimal p_1)) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 (Number_2ENatural_2Eminimal p_1)) (hol.not (p_1 m_2))))))) thm_42 thm_132.
