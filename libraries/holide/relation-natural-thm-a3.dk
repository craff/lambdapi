
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME relation_2Dnatural_2Dthm_2Da3.

Number_2ENatural_2Enatural : hol.type.

Relation_2EwellFounded : A : hol.type -> hol.term A.

Relation_2Emeasure : A : hol.type -> hol.term A.

Number_2ENatural_2E_3C : A : hol.type -> hol.term A.

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Data_2EBool_2E_3F_21 : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.eq hol.bool (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))).

(; axiom ;)

thm_1 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2 y_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))))).

(; axiom ;)

thm_3 : hol.proof hol.true.

(; axiom ;)

thm_4 : A : hol.type -> B : hol.type -> hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4)))))).

(; axiom ;)

thm_5 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_7 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_8 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_9 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_10 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_11 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_12 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)).

(; axiom ;)

thm_13 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false).

(; axiom ;)

thm_14 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true).

(; axiom ;)

thm_15 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_16 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)).

(; axiom ;)

thm_17 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)).

(; axiom ;)

thm_18 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))).

(; axiom ;)

thm_19 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_20 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or (hol.eq hol.bool t_1 hol.true) (hol.eq hol.bool t_1 hol.false))).

(; axiom ;)

thm_21 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; axiom ;)

thm_22 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.true t_1) hol.true)).

(; axiom ;)

thm_23 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.true) hol.true)).

(; axiom ;)

thm_24 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.false t_1) t_1)).

(; axiom ;)

thm_25 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.false) t_1)).

(; axiom ;)

thm_26 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 t_1) t_1)).

(; axiom ;)

thm_27 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_28 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_29 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_30 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_31 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_32 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 t2_2) (hol.or t2_2 t1_1)))).

(; axiom ;)

thm_33 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))))).

(; axiom ;)

thm_34 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_1 x_3) (q_2 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_1 x_3)) (hol.forall A (x_3 : hol.term A => q_2 x_3)))))).

(; axiom ;)

thm_35 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1)).

(; axiom ;)

thm_36 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2))))).

(; axiom ;)

thm_37 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2))))).

(; axiom ;)

thm_38 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))).

(; axiom ;)

thm_39 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall A (y_2 : hol.term A => hol.eq B ((x_3 : hol.term A => f_1 x_3) y_2) (f_1 y_2)))).

(; axiom ;)

thm_40 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))))).

(; axiom ;)

thm_41 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))).

(; axiom ;)

thm_42 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp t1_1 t2_2)) (hol.and t1_1 (hol.not t2_2))))).

(; axiom ;)

thm_43 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))))).

(; axiom ;)

thm_44 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) (q_2 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3)))))).

(; axiom ;)

thm_45 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) q_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_1 x_3) q_2))))).

(; axiom ;)

thm_46 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) (q_2 x_3)))))).

(; axiom ;)

thm_47 : A : hol.type -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.or p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_1 (q_2 x_3)))))).

(; axiom ;)

thm_48 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))).

(; axiom ;)

thm_49 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))).

(; axiom ;)

thm_50 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_51 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (hol.forall (hol.arr A Number_2ENatural_2Enatural)) (hol.forall (hol.arr A Number_2ENatural_2Enatural))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (hol.forall (hol.arr A Number_2ENatural_2Enatural)).

(; Theorem: |- ((= \lambda m. (Relation.wellFounded (Relation.measure m))) \lambda m. (Relation.wellFounded (Relation.measure m))) ;)

(; dict ;)

def thm_52 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)).

(; Theorem: |- ((= \lambda m. (Relation.wellFounded (Relation.measure m))) \lambda m. (Relation.wellFounded (Relation.measure m))) ;)

(; dict ;)

def thm_53 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1))) :=
  A : hol.type => hol.TRANS (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (thm_52 A) (thm_52 A).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Relation.wellFounded (Relation.measure m)))) (Data.Bool.! \lambda m. (Relation.wellFounded (Relation.measure m)))) ;)

(; dict ;)

def thm_54 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1))) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural)) (hol.forall (hol.arr A Number_2ENatural_2Enatural)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (thm_51 A) (thm_53 A).

(; Theorem: |- ((= Relation.wellFounded) Relation.wellFounded) ;)

(; dict ;)

def thm_55 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)).

(; Theorem: |- ((= ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_56 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))).

(; Theorem: |- ((= ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_57 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (thm_56 A m_1) (thm_56 A m_1).

(; Theorem: |- ((= \lambda m. ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) \lambda m. ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_58 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))).

(; Theorem: |- ((= \lambda m. ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) \lambda m. ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_59 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) :=
  A : hol.type => hol.TRANS (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (thm_58 A) (thm_58 A).

(; Theorem: |- ((= (Data.Bool.! \lambda m. ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y))))) (Data.Bool.! \lambda m. ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y))))) ;)

(; dict ;)

def thm_60 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural)) (hol.forall (hol.arr A Number_2ENatural_2Enatural)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (thm_51 A) (thm_59 A).

(; Theorem: |- ((= ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ;)

(; dict ;)

def thm_61 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))).

(; Theorem: |- ((= ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ;)

(; dict ;)

def thm_62 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (thm_61 B A g_1 f_2) (thm_61 B A g_1 f_2).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_63 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)).

(; Theorem: |- ((= ((= ((= x) y)) ((= y) x))) ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_64 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)).

(; Theorem: |- ((= ((= ((= x) y)) ((= y) x))) ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_65 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_64 A y_1 x_2) (thm_64 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_66 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.eq hol.bool (hol.eq A x_1 y_2) (hol.eq A y_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => thm_0 A x_1.

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_67 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_66 A x_2 y_1.

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_68 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_2 y_1) (hol.eq hol.bool y_1 x_2)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_65 A y_1 x_2) (thm_67 A y_1 x_2)) hol.bool y_1 x_2.

(; Theorem: |- ((= ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g))) ;)

(; dict ;)

def thm_69 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3))) (hol.eq (hol.arr A B) f_2 g_1))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => (y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => thm_68 y_1 x_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3))) (hol.eq (hol.arr A B) f_2 g_1).

(; Theorem: |- ((= \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g))) ;)

(; dict ;)

def thm_70 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)) (g_2 : hol.term (hol.arr A B) => thm_69 B A g_2 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))))) (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g)))) ;)

(; dict ;)

def thm_71 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)) (thm_63 B A) (thm_70 B A f_1).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))))) \lambda f. (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g)))) ;)

(; dict ;)

def thm_72 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr A B) hol.bool (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2))) (f_1 : hol.term (hol.arr A B) => thm_71 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g))))) ;)

(; dict ;)

def thm_73 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2))) (thm_63 B A) (thm_72 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))))) ;)

(; dict ;)

def thm_74 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))))) :=
  B : hol.type => A : hol.type => hol.SYM hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) (thm_73 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))))) ;)

(; dict ;)

def thm_75 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))))) (thm_74 B A) (thm_1 B A).

(; Theorem: |- (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ;)

(; dict ;)

def thm_76 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_75 B A f_1.

(; Theorem: |- ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ;)

(; dict ;)

def thm_77 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => thm_76 B A f_2 g_1.

(; Theorem: |- ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ;)

(; dict ;)

def thm_78 : A : hol.type -> g_1 : hol.term (hol.arr A (hol.arr A hol.bool)) -> f_2 : hol.term (hol.arr A (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq (hol.arr A hol.bool) (f_2 x_3) (g_1 x_3)))) :=
  A : hol.type => g_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => f_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (thm_62 B A g_1 f_2) (thm_77 B A g_1 f_2)) (hol.arr A hol.bool) A g_1 f_2.

(; Theorem: |- ((= ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) (Data.Bool.! \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)))) ;)

(; dict ;)

def thm_79 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => g_1 : hol.term (hol.arr A (hol.arr A hol.bool)) => f_2 : hol.term (hol.arr A (hol.arr A hol.bool)) => thm_78 A g_1 f_2) A (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)))) ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_80 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.SYM hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) (thm_79 A m_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_81 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) ;)

(; dict ;)

def thm_82 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL (hol.arr A hol.bool) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)).

(; Theorem: |- ((= \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) ;)

(; dict ;)

def thm_83 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS (hol.arr A hol.bool) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)) (thm_82 A m_1) (thm_82 A m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)))) (Data.Bool.! \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)))) ;)

(; dict ;)

def thm_84 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)) (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2)) (thm_81 A) (thm_83 A m_1).

(; Theorem: |- ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ;)

(; dict ;)

def thm_85 : A : hol.type -> g_1 : hol.term (hol.arr A hol.bool) -> f_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A hol.bool) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (f_2 x_3) (g_1 x_3)))) :=
  A : hol.type => g_1 : hol.term (hol.arr A hol.bool) => f_2 : hol.term (hol.arr A hol.bool) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => thm_77 B A g_1 f_2) hol.bool A g_1 f_2.

(; Theorem: |- ((= ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) (Data.Bool.! \lambda x_1. ((= (((Relation.measure m) x) x_1)) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x_1)))) ;)

(; dict ;)

def thm_86 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1)) (hol.forall A (x__1_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x__1_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x__1_3)))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => g_1 : hol.term (hol.arr A hol.bool) => f_2 : hol.term (hol.arr A hol.bool) => thm_85 A g_1 f_2) A ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x_1. ((= (((Relation.measure m) x) x_1)) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x_1)))) ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) ;)

(; dict ;)

def thm_87 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (x__1_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x__1_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x__1_3))) (hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.SYM hol.bool (hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1)) (hol.forall A (x__1_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x__1_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x__1_3))) (thm_86 A x_1 m_2).

(; Theorem: |- ((= \lambda x'. ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x'))) \lambda x'. ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x'))) ;)

(; dict ;)

def thm_88 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)).

(; Theorem: |- ((= \lambda x'. ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x'))) \lambda x'. ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x'))) ;)

(; dict ;)

def thm_89 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)) (thm_88 A x_1 m_2) (thm_88 A x_1 m_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x'. ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x')))) (Data.Bool.! \lambda x'. ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x')))) ;)

(; dict ;)

def thm_90 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3))) (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)) (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3)) (thm_81 A) (thm_89 A x_1 m_2).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_91 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y)))) ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_92 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))).

(; Theorem: |- ((= ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y)))) ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_93 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) (thm_92 A y_1 x_2 m_3) (thm_92 A y_1 x_2 m_3).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y))))) ;)

(; dict ;)

def thm_94 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2 y_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_2 A m_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_95 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.forall A (y_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 y_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_1) (m_2 y_3)))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_94 A m_2 x_1.

(; Theorem: |- ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y))) ;)

(; dict ;)

def thm_96 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_95 A x_2 m_3 y_1.

(; Theorem: |- ((= (((Relation.measure m) x) x')) ((Number.Natural.< (m x)) (m x'))) ;)

(; dict ;)

def thm_97 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1))) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) (thm_93 A y_1 x_2 m_3) (thm_96 A y_1 x_2 m_3)) A y_1 x_2 m_3) A x_27_1 x_2 m_3.

(; Theorem: |- ((= (= (((Relation.measure m) x) x'))) (= ((Number.Natural.< (m x)) (m x')))) ;)

(; dict ;)

def thm_98 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1)) (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)))) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)) thm_91 (thm_97 A x_27_1 x_2 m_3).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_99 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) (hol.arr (hol.arr A hol.bool) hol.bool)) (hol.eq (hol.arr A hol.bool)) (hol.eq (hol.arr A hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) (hol.arr (hol.arr A hol.bool) hol.bool)) (hol.eq (hol.arr A hol.bool)).

(; Theorem: |- ((= (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)) \lambda y. ((Number.Natural.< (m x)) (m y))) ;)

(; dict ;)

def thm_100 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1) (y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_1) (m_2 y_3))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A (hol.arr A hol.bool) (x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y))) ;)

(; dict ;)

def thm_101 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (x_2 : hol.term A => (x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A (hol.arr A hol.bool) (x_2 : hol.term A => (x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)) (x_2 : hol.term A => thm_100 A x_2 m_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_102 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => hol.REFL A x_1.

(; Theorem: |- ((= (\lambda x. (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)) ;)

(; dict ;)

def thm_103 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) ((x_3 : hol.term A => (x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_3) x_1) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1)) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM A (hol.arr A hol.bool) (x_3 : hol.term A => (x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_3) (x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1 x_1 (thm_101 A m_2) (thm_102 A x_1).

(; Theorem: |- ((= (= (\lambda x. (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x))) (= (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) ;)

(; dict ;)

def thm_104 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.eq (hol.arr A hol.bool) ((x_3 : hol.term A => (x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_3) x_1)) (hol.eq (hol.arr A hol.bool) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) (hol.arr (hol.arr A hol.bool) hol.bool) (hol.eq (hol.arr A hol.bool)) (hol.eq (hol.arr A hol.bool)) ((x_3 : hol.term A => (x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_3) x_1) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1) (thm_99 A) (thm_103 A x_1 m_2).

(; Theorem: |- ((= ((= (\lambda x. (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) ((= (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)) \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_105 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A hol.bool) ((x_3 : hol.term A => (x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_3) x_1) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1)) (hol.eq (hol.arr A hol.bool) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1) (y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_1) (m_2 y_3)))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.eq (hol.arr A hol.bool) ((x_3 : hol.term A => (x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_3) x_1)) (hol.eq (hol.arr A hol.bool) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1)) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1) (y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_1) (m_2 y_3)) (thm_104 A x_1 m_2) (thm_100 A x_1 m_2).

(; Theorem: |- ((= x') x') ;)

(; dict ;)

def thm_106 : A : hol.type -> x_27_1 : hol.term A -> hol.proof (hol.eq A x_27_1 x_27_1) :=
  A : hol.type => x_27_1 : hol.term A => hol.REFL A x_27_1.

(; Theorem: |- ((= ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x')) (\lambda y. ((Number.Natural.< (m x)) (m y)) x')) ;)

(; dict ;)

def thm_107 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1) ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1)) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM A hol.bool ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2) (y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1 x_27_1 (hol.EQ_MP (hol.eq (hol.arr A hol.bool) ((x_4 : hol.term A => (x_5 : hol.term A => y_6 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_5) (m_3 y_6)) x_4) x_2) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2)) (hol.eq (hol.arr A hol.bool) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2) (y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4))) (thm_105 A x_2 m_3) (thm_103 A x_2 m_3)) (thm_106 A x_27_1).

(; Theorem: |- ((= (\lambda y. ((Number.Natural.< (m x)) (m y)) y)) ((Number.Natural.< (m x)) (m y))) ;)

(; dict ;)

def thm_108 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) y_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) y_1.

(; Theorem: |- ((= \lambda y. (\lambda y. ((Number.Natural.< (m x)) (m y)) y)) \lambda y. ((Number.Natural.< (m x)) (m y))) ;)

(; dict ;)

def thm_109 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => (y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_1) (m_2 y_4)) y_3) (y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_1) (m_2 y_3))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_3 : hol.term A => (y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_1) (m_2 y_4)) y_3) (y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_1) (m_2 y_3)) (y_3 : hol.term A => thm_108 A y_3 x_1 m_2).

(; Theorem: |- ((= (\lambda y. (\lambda y. ((Number.Natural.< (m x)) (m y)) y) x')) (\lambda y. ((Number.Natural.< (m x)) (m y)) x')) ;)

(; dict ;)

def thm_110 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => (y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_5)) y_4) x_27_1) ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1)) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM A hol.bool (y_4 : hol.term A => (y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_5)) y_4) (y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1 x_27_1 (thm_109 A x_2 m_3) (thm_106 A x_27_1).

(; Theorem: |- ((= (= (\lambda y. (\lambda y. ((Number.Natural.< (m x)) (m y)) y) x'))) (= (\lambda y. ((Number.Natural.< (m x)) (m y)) x'))) ;)

(; dict ;)

def thm_111 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((y_4 : hol.term A => (y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_5)) y_4) x_27_1)) (hol.eq hol.bool ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1))) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((y_4 : hol.term A => (y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_5)) y_4) x_27_1) ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1) thm_91 (thm_110 A x_27_1 x_2 m_3).

(; Theorem: |- ((= (\lambda y. ((Number.Natural.< (m x)) (m y)) x')) ((Number.Natural.< (m x)) (m x'))) ;)

(; dict ;)

def thm_112 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1))) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1.

(; Theorem: |- ((= ((= (\lambda y. (\lambda y. ((Number.Natural.< (m x)) (m y)) y) x')) (\lambda y. ((Number.Natural.< (m x)) (m y)) x'))) ((= (\lambda y. ((Number.Natural.< (m x)) (m y)) x')) ((Number.Natural.< (m x)) (m x')))) ;)

(; dict ;)

def thm_113 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((y_4 : hol.term A => (y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_5)) y_4) x_27_1) ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1)) (hol.eq hol.bool ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)))) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((y_4 : hol.term A => (y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_5)) y_4) x_27_1)) (hol.eq hol.bool ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1)) ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)) (thm_111 A x_27_1 x_2 m_3) (thm_112 A x_27_1 x_2 m_3).

(; Theorem: |- ((= ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x')) ((Number.Natural.< (m x)) (m x'))) ;)

(; dict ;)

def thm_114 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1))) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1) ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)) (thm_107 A x_27_1 x_2 m_3) (hol.EQ_MP (hol.eq hol.bool ((y_4 : hol.term A => (y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_5)) y_4) x_27_1) ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1)) (hol.eq hol.bool ((y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 y_4)) x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1))) (thm_113 A x_27_1 x_2 m_3) (thm_110 A x_27_1 x_2 m_3)).

(; Theorem: |- ((= ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x'))) ((= ((Number.Natural.< (m x)) (m x'))) ((Number.Natural.< (m x)) (m x')))) ;)

(; dict ;)

def thm_115 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1)) (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)))) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1)) (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1))) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)) (thm_98 A x_27_1 x_2 m_3) (thm_114 A x_27_1 x_2 m_3).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_116 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_117 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_116 A x_1) (thm_116 A x_1).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_118 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_119 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_118 A) (thm_118 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_120 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_81 A) (thm_119 A).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_121 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_122 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_121 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_123 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_122 t_1 hyp_1) thm_3.

(; Theorem: |- t ;)

(; dict ;)

def thm_124 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_125 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_124 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_3).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_126 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_123 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_125 t_1 hyp_1).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_127 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_126 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_128 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_127 A x_1) (thm_102 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_129 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_116 A x_1) (thm_128 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_130 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_1 x_1) hol.true) :=
  x_1 : hol.term hol.bool => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_117 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_120 A) (thm_129 A) x_1)) hol.bool x_1.

(; Theorem: |- ((= ((= ((Number.Natural.< (m x)) (m x'))) ((Number.Natural.< (m x)) (m x')))) Data.Bool.T) ;)

(; dict ;)

def thm_131 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1))) hol.true) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (x_1 : hol.term hol.bool => thm_130 x_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)).

(; Theorem: |- ((= ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x'))) Data.Bool.T) ;)

(; dict ;)

def thm_132 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1)) hol.true) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1)) (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_2) (m_3 x_27_1))) hol.true (thm_115 A x_27_1 x_2 m_3) (thm_131 A x_27_1 x_2 m_3).

(; Theorem: |- ((= Data.Bool.T) ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x'))) ;)

(; dict ;)

def thm_133 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1))) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.SYM hol.bool (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1)) hol.true (thm_132 A x_27_1 x_2 m_3).

(; Theorem: |- ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x')) ;)

(; dict ;)

def thm_134 : A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1)) :=
  A : hol.type => x_27_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP hol.true (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 x_2 x_27_1) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 x_4) (m_3 y_5)) x_2 x_27_1)) (thm_133 A x_27_1 x_2 m_3) thm_3.

(; Theorem: |- (Data.Bool.! \lambda x'. ((= (((Relation.measure m) x) x')) ((\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x) x'))) ;)

(; dict ;)

def thm_135 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3))) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => x_27_3 : hol.term A => thm_134 A x_27_3 x_1 m_2.

(; Theorem: |- ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x)) ;)

(; dict ;)

def thm_136 : A : hol.type -> x_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1)) :=
  A : hol.type => x_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3))) (hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)) x_1)) (thm_87 A x_1 m_2) (hol.EQ_MP (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3))) (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 x_1 x_27_3) ((x_4 : hol.term A => y_5 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_4) (m_2 y_5)) x_1 x_27_3))) (thm_90 A x_1 m_2) (thm_135 A x_1 m_2)).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Relation.measure m) x)) (\lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)) x))) ;)

(; dict ;)

def thm_137 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => x_2 : hol.term A => thm_136 A x_2 m_1.

(; Theorem: |- ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y))) ;)

(; dict ;)

def thm_138 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (thm_80 A m_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) (hol.forall A (x_2 : hol.term A => hol.eq (hol.arr A hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 x_2) ((x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_3) (m_1 y_4)) x_2))) (thm_84 A m_1) (thm_137 A m_1)).

(; Theorem: |- (Data.Bool.! \lambda m. ((= (Relation.measure m)) \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_139 : A : hol.type -> hol.proof (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_138 A m_1.

(; Theorem: |- ((= (Relation.wellFounded (Relation.measure m))) (Relation.wellFounded \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_140 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A (hol.arr A hol.bool)) hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)) (thm_55 A) ((A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (thm_57 A m_1) (hol.EQ_MP (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2) (x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)))) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.eq (hol.arr A (hol.arr A hol.bool)) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2) (x_3 : hol.term A => y_4 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 x_3) (m_2 y_4)))) (thm_60 A) (thm_139 A) m_1)) A m_1).

(; Theorem: |- ((= (Relation.wellFounded \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) (Relation.wellFounded (Relation.measure m))) ;)

(; dict ;)

def thm_141 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.SYM hol.bool (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (thm_140 A m_1).

(; Theorem: |- ((= ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))) ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))) ;)

(; dict ;)

def thm_142 : A : hol.type -> B : hol.type -> m_1 : hol.term (hol.arr A B) -> r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4))))) :=
  A : hol.type => B : hol.type => m_1 : hol.term (hol.arr A B) => r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.REFL hol.bool (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))).

(; Theorem: |- ((= ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))) ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))) ;)

(; dict ;)

def thm_143 : A : hol.type -> B : hol.type -> m_1 : hol.term (hol.arr A B) -> r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4))))) :=
  A : hol.type => B : hol.type => m_1 : hol.term (hol.arr A B) => r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.TRANS hol.bool (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) (thm_142 A B m_1 r_2) (thm_142 A B m_1 r_2).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda m. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y)))))) ;)

(; dict ;)

def thm_144 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4)))))) -> hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4)))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4)))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda m. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))) ;)

(; dict ;)

def thm_145 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_3 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_4 : hol.term A => y_5 : hol.term A => r_2 (m_3 x_4) (m_3 y_5)))))) -> hol.proof (hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_3 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_4 : hol.term A => y_5 : hol.term A => r_2 (m_3 x_4) (m_3 y_5)))))) => thm_144 A B hyp_1 r_1.

(; Theorem: |- ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y)))) ;)

(; dict ;)

def thm_146 : A : hol.type -> B : hol.type -> m_1 : hol.term (hol.arr A B) -> r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_3 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_4 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_5 : hol.term A => y_6 : hol.term A => r_3 (m_4 x_5) (m_4 y_6)))))) -> hol.proof (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) :=
  A : hol.type => B : hol.type => m_1 : hol.term (hol.arr A B) => r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_3 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_4 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_5 : hol.term A => y_6 : hol.term A => r_3 (m_4 x_5) (m_4 y_6)))))) => thm_145 B A r_2 hyp_1 m_1.

(; Theorem: |- (Relation.wellFounded r) ;)

(; dict ;)

def thm_147 : B : hol.type -> r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hyp_1 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) :=
  B : hol.type => r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hyp_1 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) => hyp_1.

(; Theorem: |- (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))) ;)

(; dict ;)

def thm_148 : B : hol.type -> A : hol.type -> m_1 : hol.term (hol.arr A B) -> r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_3 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_4 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_5 : hol.term A => y_6 : hol.term A => r_3 (m_4 x_5) (m_4 y_6)))))) -> hyp_2 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4))) :=
  B : hol.type => A : hol.type => m_1 : hol.term (hol.arr A B) => r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_3 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_4 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_5 : hol.term A => y_6 : hol.term A => r_3 (m_4 x_5) (m_4 y_6)))))) => hyp_2 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) => thm_146 A B m_1 r_2 hyp_1 (thm_147 B r_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda m. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))))) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y)))) ;)

(; dict ;)

def thm_149 : A : hol.type -> B : hol.type -> m_1 : hol.term (hol.arr A B) -> r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hyp_1 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) -> hol.proof (hol.imp (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_3 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_4 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_5 : hol.term A => y_6 : hol.term A => r_3 (m_4 x_5) (m_4 y_6)))))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) :=
  A : hol.type => B : hol.type => m_1 : hol.term (hol.arr A B) => r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => hyp_1 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) => hyp_2 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_3 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_4 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_3) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_5 : hol.term A => y_6 : hol.term A => r_3 (m_4 x_5) (m_4 y_6)))))) => thm_148 B A m_1 r_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda r. (Data.Bool.! \lambda m. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))))) (Data.Bool.! \lambda r. (Data.Bool.! \lambda m. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))))) ;)

(; dict ;)

def thm_150 : A : hol.type -> B : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4)))))) (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4))))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr B (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4)))))) => r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => m_2 : hol.term (hol.arr A B) => hyp_2 : hol.proof (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) => thm_149 A B m_2 r_1 hyp_2 (thm_144 A B hyp_1).

(; Theorem: |- (Data.Bool.! \lambda m. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y))))) ;)

(; dict ;)

def thm_151 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hol.proof (hol.forall (hol.arr A B) (m_2 : hol.term (hol.arr A B) => hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_1) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_1 (m_2 x_3) (m_2 y_4))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr B (hol.arr B hol.bool)) => thm_150 A B (thm_4 A B) r_1.

(; Theorem: |- ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y)))) ;)

(; dict ;)

def thm_152 : A : hol.type -> B : hol.type -> m_1 : hol.term (hol.arr A B) -> r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) -> hol.proof (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) :=
  A : hol.type => B : hol.type => m_1 : hol.term (hol.arr A B) => r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => thm_151 B A r_2 m_1.

(; Theorem: |- ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y)))) ;)

(; dict ;)

def thm_153 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> r_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) -> hol.proof (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => r_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => (A : hol.type => B : hol.type => m_1 : hol.term (hol.arr A B) => r_2 : hol.term (hol.arr B (hol.arr B hol.bool)) => hol.EQ_MP (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr B (hol.arr B hol.bool)) hol.bool) r_2) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_3 : hol.term A => y_4 : hol.term A => r_2 (m_1 x_3) (m_1 y_4)))) (thm_143 A B m_1 r_2) (thm_152 A B m_1 r_2)) A Number_2ENatural_2Enatural m_1 r_2.

(; Theorem: |- ((Data.Bool.==> (Relation.wellFounded Number.Natural.<)) (Relation.wellFounded \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y)))) ;)

(; dict ;)

def thm_154 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.imp (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => r_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) => thm_153 A m_1 r_2) A m_1 (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- ((= (Relation.wellFounded Number.Natural.<)) (Relation.wellFounded Number.Natural.<)) ;)

(; dict ;)

def thm_155 : hol.proof (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) :=
  hol.REFL hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))).

(; Theorem: |- ((= (Relation.wellFounded Number.Natural.<)) (Relation.wellFounded Number.Natural.<)) ;)

(; dict ;)

def thm_156 : hol.proof (hol.eq hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))))) :=
  hol.TRANS hol.bool (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) thm_155 thm_155.

(; Theorem: |- (Relation.wellFounded \lambda x. \lambda y. ((Number.Natural.< (m x)) (m y))) ;)

(; dict ;)

def thm_157 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_154 A m_1 (hol.EQ_MP (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) (Relation_2EwellFounded (hol.arr (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) thm_156 thm_5).

(; Theorem: |- (Relation.wellFounded (Relation.measure m)) ;)

(; dict ;)

def thm_158 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (x_2 : hol.term A => y_3 : hol.term A => Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 x_2) (m_1 y_3))) (Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1)) (thm_141 A m_1) (thm_157 A m_1).

(; Theorem: |- (Data.Bool.! \lambda m. (Relation.wellFounded (Relation.measure m))) ;)

(; dict ;)

def thm_159 : A : hol.type -> hol.proof (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_158 A m_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Relation.wellFounded (Relation.measure m))) ;)

(; thm ;)

def thm_160 : A : hol.type -> hol.proof (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1))) :=
  A : hol.type => hol.EQ_MP (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1))) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Relation_2EwellFounded (hol.arr (hol.arr A (hol.arr A hol.bool)) hol.bool) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1))) (thm_54 A) (thm_159 A).

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_161 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= (((Relation.measure m) y) a)) ((Number.Natural.< (m y)) (m a))) ;)

(; dict ;)

def thm_162 : A : hol.type -> a_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_2 a_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) :=
  A : hol.type => a_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_96 A y_1 x_2 m_3) A a_1 y_2 m_3.

(; Theorem: |- ((= (Data.Bool.==> (((Relation.measure m) y) a))) (Data.Bool.==> ((Number.Natural.< (m y)) (m a)))) ;)

(; dict ;)

def thm_163 : A : hol.type -> a_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_2 a_1)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)))) :=
  A : hol.type => a_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_2 a_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)) thm_161 (thm_162 A a_1 y_2 m_3).

(; Theorem: |- ((= (((Relation.measure m) y) b)) ((Number.Natural.< (m y)) (m b))) ;)

(; dict ;)

def thm_164 : A : hol.type -> b_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_2 b_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_96 A y_1 x_2 m_3) A b_1 y_2 m_3.

(; Theorem: |- ((= ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b))) ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_165 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_4 y_3 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_4 y_3 b_1)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_4 y_3 a_2)) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_4 y_3 b_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)) (thm_163 A a_2 y_3 m_4) (thm_164 A b_1 y_3 m_4).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b))) \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_166 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 b_1)) (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 b_1)) (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => thm_165 A b_1 a_2 y_4 m_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_167 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 b_1))) (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 b_1)) (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (thm_81 A) (thm_166 A b_1 a_2 m_3).

(; Theorem: |- ((= (= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b))))) (= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))))) ;)

(; dict ;)

def thm_168 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 b_1)))) (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 b_1))) (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) thm_91 (thm_167 A b_1 a_2 m_3).

(; Theorem: |- ((= ((Number.Natural.<= (m a)) (m b))) ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_169 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL hol.bool (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b)))) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_170 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 b_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_3 y_4 b_1)))) (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (thm_168 A b_1 a_2 m_3) (thm_169 A b_1 a_2 m_3).

(; Theorem: |- ((= \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b)))) \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_171 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 y_4 a_1) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 y_4 a_1) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => thm_170 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_172 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 y_4 a_1) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 y_4 a_1) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_2 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (thm_81 A) (thm_171 A a_1 m_2).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b))))) \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_173 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => thm_172 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_174 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (thm_81 A) (thm_173 A m_1).

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b)))))) \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_175 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_174 A m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_176 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural)) (hol.forall (hol.arr A Number_2ENatural_2Enatural)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_51 A) (thm_175 A).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_177 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.SYM hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_176 A).

(; Theorem: |- ((= ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ;)

(; dict ;)

def thm_178 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false))) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)).

(; Theorem: |- ((= ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ;)

(; dict ;)

def thm_179 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (thm_178 p_1) (thm_178 p_1).

(; Theorem: |- ((= (= p)) (= p)) ;)

(; dict ;)

def thm_180 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool p_1) (hol.eq hol.bool p_1)) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_181 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_182 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_181 t_1) (thm_181 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_183 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_184 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_185 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_184 thm_184.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_186 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_183 thm_185.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_187 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_188 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_187 t_1) (thm_187 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_189 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_190 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_191 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_192 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_190 q_1 p_2) (thm_191 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_193 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_194 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_195 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_193 p_1) (thm_194 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_196 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_197 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_7 (thm_196 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_198 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_195 p_1) (thm_197 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_199 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_200 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_198 p_2) (thm_199 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_201 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_192 q_1 p_2) (thm_200 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_202 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_203 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_201 q_1 p_2) (thm_202 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_204 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_203 q_1 p_2 hyp_1 q_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_205 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_206 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_207 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_205 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_206 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_208 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_207 q_2 p_1 hyp_1 hyp_2) (thm_205 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_209 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_208 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_210 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_209 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_211 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_204 q_2 p_1 hyp_1 (thm_210 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_212 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_201 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_213 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_214 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_213 x_2 q_3 p_1 hyp_2 (thm_205 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_215 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_214 p_2 x_3 q_1 hyp_1 hyp_3 (thm_206 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_216 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_215 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_217 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_216 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_218 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_212 q_1 p_2) (thm_217 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_219 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_218 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_220 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_221 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_188 t_1) (thm_189 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_220 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_222 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_223 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_222 t_1) (thm_222 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_224 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_8 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_225 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_226 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_223 t_1) (thm_224 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_225 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_227 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_228 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_227 t_1) (thm_227 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_229 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_9 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_230 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_231 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_228 t_1) (thm_229 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_230 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_232 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_233 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_232 t_1) (thm_232 t_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_234 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_235 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_234 thm_234.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_236 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_183 thm_235.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_237 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_126 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_238 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_10 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_239 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_237 t_1) (thm_238 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_240 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_91 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_232 t_1) (thm_239 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_241 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_242 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_240 t_1) thm_241.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_243 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_242 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_244 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_243 t_1) thm_241.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_245 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_246 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_233 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_236 thm_244 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_245 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_247 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_11 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_248 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_246 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_181 t_1) (thm_247 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_249 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_231 t_1) (thm_248 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_250 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_226 t_1) (thm_249 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_251 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_221 t_1) (thm_250 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_252 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_251 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_253 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_254 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_186 thm_252 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_253 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_255 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_256 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_254 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => thm_255 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_257 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_258 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_256 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => thm_257 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_259 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_260 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_258 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) => thm_259 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F)) (Data.Bool.~ (Data.Bool.~ p))) ;)

(; dict ;)

def thm_261 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) hol.false) (hol.not (hol.not p_1))) :=
  p_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_182 t_1) (thm_260 t_1)) (hol.not p_1).

(; Theorem: |- ((= ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ((= p) (Data.Bool.~ (Data.Bool.~ p)))) ;)

(; dict ;)

def thm_262 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.not (hol.not p_1)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool p_1) (hol.eq hol.bool p_1) (hol.imp (hol.not p_1) hol.false) (hol.not (hol.not p_1)) (thm_180 p_1) (thm_261 p_1).

(; Theorem: |- ((= ((= p) (Data.Bool.~ (Data.Bool.~ p)))) ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F))) ;)

(; dict ;)

def thm_263 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false))) :=
  p_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (thm_262 p_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_264 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_265 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (thm_264 t_1) (thm_264 t_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)))) ;)

(; dict ;)

def thm_266 : hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) :=
  hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)))) ;)

(; dict ;)

def thm_267 : hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) :=
  hol.PROVE_HYP (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) thm_12 (hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) => thm_266 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_268 : hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_269 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.PROVE_HYP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) thm_13 (hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => thm_268 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_270 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) thm_269 thm_14.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_271 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.EQ_MP (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) thm_267 thm_270.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_272 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_203 q_1 p_2 hyp_1 p_2.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_273 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_207 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_274 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_273 p_2 q_1 hyp_1 hyp_2) (thm_206 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_275 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_274 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_276 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_275 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_277 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_272 q_1 p_2 hyp_1 (thm_276 q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_278 : hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_279 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  hol.PROVE_HYP (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) thm_271 (hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) => thm_278 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ t))) t) ;)

(; dict ;)

def thm_280 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) :=
  t_1 : hol.term hol.bool => thm_279 t_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ p))) p) ;)

(; dict ;)

def thm_281 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not p_1)) p_1) :=
  p_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (thm_265 t_1) (thm_280 t_1)) p_1.

(; Theorem: |- ((= ((= p) (Data.Bool.~ (Data.Bool.~ p)))) ((= p) p)) ;)

(; dict ;)

def thm_282 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (hol.eq hol.bool p_1 p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool p_1) (hol.eq hol.bool p_1) (hol.not (hol.not p_1)) p_1 (thm_180 p_1) (thm_281 p_1).

(; Theorem: |- ((= ((= p) p)) Data.Bool.T) ;)

(; dict ;)

def thm_283 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 p_1) hol.true) :=
  p_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_130 x_1) p_1.

(; Theorem: |- ((= ((= p) (Data.Bool.~ (Data.Bool.~ p)))) Data.Bool.T) ;)

(; dict ;)

def thm_284 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) hol.true) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (hol.eq hol.bool p_1 p_1) hol.true (thm_282 p_1) (thm_283 p_1).

(; Theorem: |- ((= Data.Bool.T) ((= p) (Data.Bool.~ (Data.Bool.~ p)))) ;)

(; dict ;)

def thm_285 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool p_1 (hol.not (hol.not p_1)))) :=
  p_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) hol.true (thm_284 p_1).

(; Theorem: |- ((= p) (Data.Bool.~ (Data.Bool.~ p))) ;)

(; dict ;)

def thm_286 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (thm_285 p_1) thm_3.

(; Theorem: |- ((= p) ((Data.Bool.==> (Data.Bool.~ p)) Data.Bool.F)) ;)

(; dict ;)

def thm_287 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool p_1 (hol.not (hol.not p_1))) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (thm_263 p_1) (thm_286 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_288 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) hol.false)) :=
  A : hol.type => (p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (hol.eq hol.bool p_1 (hol.imp (hol.not p_1) hol.false)) (thm_179 p_1) (thm_287 p_1)) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) Data.Bool.F)) (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_289 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) hol.false) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.SYM hol.bool (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) hol.false) (thm_288 A).

(; Theorem: |- (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_290 : A : hol.type -> hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_291 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) :=
  A : hol.type => hol.REFL hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_292 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) :=
  A : hol.type => hol.SYM hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (thm_291 A).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_293 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))))) :=
  A : hol.type => hol.REFL hol.bool (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_294 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (thm_293 A) (thm_293 A).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_295 : A : hol.type -> hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) -> hol.proof (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))) ;)

(; dict ;)

def thm_296 : A : hol.type -> hyp_1 : hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) -> hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))) ;)

(; dict ;)

def thm_297 : A : hol.type -> hyp_1 : hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) -> hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) -> hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) => hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) => thm_295 A hyp_2 (thm_296 A hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_298 : A : hol.type -> hyp_1 : hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) -> hol.proof (hol.imp (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) => hyp_2 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) => thm_297 A hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_299 : A : hol.type -> hol.proof (hol.imp (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) => hyp_2 : hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) => thm_298 A hyp_2 (thm_295 A hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_300 : A : hol.type -> hol.proof (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) => thm_296 A hyp_1.

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) (Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_301 : A : hol.type -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n))))) (Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n))))) ;)

(; dict ;)

def thm_302 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)))).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p))))))) (Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p))))))) ;)

(; dict ;)

def thm_303 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_304 : hol.proof (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  (t_1 : hol.term hol.bool => thm_247 t_1) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))) ;)

(; dict ;)

def thm_305 : hol.proof (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))) :=
  hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_303 thm_304.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m)))))))) ;)

(; dict ;)

def thm_306 : hol.proof (hol.eq hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) :=
  hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) thm_302 thm_305.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))))) ;)

(; dict ;)

def thm_307 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))))) :=
  A : hol.type => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))) (thm_301 A) thm_306.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))))) ;)

(; dict ;)

def thm_308 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))))) :=
  A : hol.type => hol.REFL hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))))) ;)

(; dict ;)

def thm_309 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (thm_307 A) (thm_308 A).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))))) ;)

(; dict ;)

def thm_310 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (thm_309 A) (thm_308 A).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))))) ;)

(; dict ;)

def thm_311 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (thm_310 A) (thm_308 A).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))))) ;)

(; dict ;)

def thm_312 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (thm_311 A) (thm_308 A).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))))) ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))))) ;)

(; dict ;)

def thm_313 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) :=
  A : hol.type => hol.SYM hol.bool (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (thm_312 A).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_314 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< n) n))) (Data.Bool.~ ((Number.Natural.< n) n))) ;)

(; dict ;)

def thm_315 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)).

(; Theorem: |- ((= \lambda n. (Data.Bool.~ ((Number.Natural.< n) n))) \lambda n. (Data.Bool.~ ((Number.Natural.< n) n))) ;)

(; dict ;)

def thm_316 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)) (n_1 : hol.term Number_2ENatural_2Enatural => thm_315 n_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ;)

(; dict ;)

def thm_317 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)) (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)) thm_314 thm_316.

(; Theorem: |- ((= (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ;)

(; dict ;)

def thm_318 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1)))) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) thm_317 thm_317.

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n))) ;)

(; dict ;)

def thm_319 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_320 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_321 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_320 q_2 p_1 hyp_2) (thm_205 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_322 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_321 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_323 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_322 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_324 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_323 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_325 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_326 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_327 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_325 A P_1) (thm_326 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_328 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_329 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_15 A) (thm_328 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_330 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_327 A P_1) (thm_329 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_331 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_324 A P_1 (thm_330 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_332 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_333 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_331 A P_1 (thm_332 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_334 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_333 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_335 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_336 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_334 A Q_2 P_1 hyp_2 (thm_335 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_337 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_336 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_338 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_337 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_339 : A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr A Number_2ENatural_2Enatural) (x_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.imp ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) x_1) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) hol.false)) :=
  A : hol.type => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_338 A Q_1 P_2) (hol.arr A Number_2ENatural_2Enatural) hol.false (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_340 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_6) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_6) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))))) x_2) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) hol.false)) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_338 A Q_1 P_2) A hol.false (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) Data.Bool.F)) ;)

(; dict ;)

def thm_341 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))))) x_3) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) hol.false)) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_338 A Q_1 P_2) A hol.false (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) x)) Data.Bool.F))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) Data.Bool.F)) ;)

(; dict ;)

def thm_342 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) x_4) hol.false)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) hol.false)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_338 A Q_1 P_2) A hol.false (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))).

(; Theorem: |- ((= Data.Bool.\/) Data.Bool.\/) ;)

(; dict ;)

def thm_343 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or hol.or) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or.

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_344 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= Data.Bool.~) Data.Bool.~) ;)

(; dict ;)

def thm_345 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not hol.not) :=
  hol.REFL (hol.arr hol.bool hol.bool) hol.not.

(; Theorem: |- ((= Number.Natural.<) Number.Natural.<) ;)

(; dict ;)

def thm_346 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- ((= m) m) ;)

(; dict ;)

def thm_347 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A Number_2ENatural_2Enatural) m_1 m_1) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL (hol.arr A Number_2ENatural_2Enatural) m_1.

(; Theorem: |- ((= y) y) ;)

(; dict ;)

def thm_348 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.eq A y_1 y_1) :=
  A : hol.type => y_1 : hol.term A => hol.REFL A y_1.

(; Theorem: |- ((= (m y)) (m y)) ;)

(; dict ;)

def thm_349 : A : hol.type -> y_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq Number_2ENatural_2Enatural (m_2 y_1) (m_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM A Number_2ENatural_2Enatural m_2 m_2 y_1 y_1 (thm_347 A m_2) (thm_348 A y_1).

(; Theorem: |- ((= (Number.Natural.< (m y))) (Number.Natural.< (m y))) ;)

(; dict ;)

def thm_350 : A : hol.type -> y_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (m_2 y_1) (m_2 y_1) thm_346 (thm_349 A y_1 m_2).

(; Theorem: |- ((= a) a) ;)

(; dict ;)

def thm_351 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq A a_1 a_1) :=
  A : hol.type => a_1 : hol.term A => hol.REFL A a_1.

(; Theorem: |- ((= (m a)) (m a)) ;)

(; dict ;)

def thm_352 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq Number_2ENatural_2Enatural (m_2 a_1) (m_2 a_1)) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM A Number_2ENatural_2Enatural m_2 m_2 a_1 a_1 (thm_347 A m_2) (thm_351 A a_1).

(; Theorem: |- ((= ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m a))) ;)

(; dict ;)

def thm_353 : A : hol.type -> a_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) :=
  A : hol.type => a_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM Number_2ENatural_2Enatural hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2)) (m_3 a_1) (m_3 a_1) (thm_350 A y_2 m_3) (thm_352 A a_1 m_3).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ;)

(; dict ;)

def thm_354 : A : hol.type -> a_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)))) :=
  A : hol.type => a_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)) thm_345 (thm_353 A a_1 y_2 m_3).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a))))) (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a))))) ;)

(; dict ;)

def thm_355 : A : hol.type -> a_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))))) :=
  A : hol.type => a_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) thm_343 (thm_354 A a_1 y_2 m_3).

(; Theorem: |- ((= b) b) ;)

(; dict ;)

def thm_356 : A : hol.type -> b_1 : hol.term A -> hol.proof (hol.eq A b_1 b_1) :=
  A : hol.type => b_1 : hol.term A => hol.REFL A b_1.

(; Theorem: |- ((= (m b)) (m b)) ;)

(; dict ;)

def thm_357 : A : hol.type -> b_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq Number_2ENatural_2Enatural (m_2 b_1) (m_2 b_1)) :=
  A : hol.type => b_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM A Number_2ENatural_2Enatural m_2 m_2 b_1 b_1 (thm_347 A m_2) (thm_356 A b_1).

(; Theorem: |- ((= ((Number.Natural.< (m y)) (m b))) ((Number.Natural.< (m y)) (m b))) ;)

(; dict ;)

def thm_358 : A : hol.type -> b_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM Number_2ENatural_2Enatural hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2)) (m_3 b_1) (m_3 b_1) (thm_350 A y_2 m_3) (thm_357 A b_1 m_3).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_359 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)) (thm_355 A a_2 y_3 m_4) (thm_358 A b_1 y_3 m_4).

(; Theorem: |- ((= \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_360 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => thm_359 A b_1 a_2 y_4 m_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_361 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (thm_81 A) (thm_360 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))))) (Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))))) ;)

(; dict ;)

def thm_362 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) thm_344 (thm_361 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_363 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) thm_345 (thm_169 A b_1 a_2 m_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_364 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_362 A b_1 a_2 m_3) (thm_363 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_365 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) thm_343 (thm_364 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool./\ ((Number.Natural.< (m y)) (m a)))) (Data.Bool./\ ((Number.Natural.< (m y)) (m a)))) ;)

(; dict ;)

def thm_366 : A : hol.type -> a_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)))) :=
  A : hol.type => a_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)) thm_344 (thm_353 A a_1 y_2 m_3).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_367 : A : hol.type -> b_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) thm_345 (thm_358 A b_1 y_2 m_3).

(; Theorem: |- ((= ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_368 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (thm_366 A a_2 y_3 m_4) (thm_367 A b_1 y_3 m_4).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) (Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ;)

(; dict ;)

def thm_369 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) thm_344 (thm_368 A b_1 a_2 y_3 m_4).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_370 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)) (thm_369 A b_1 a_2 y_3 m_4) (thm_169 A b_1 a_2 m_4).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_371 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))))) (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) (thm_365 A b_2 a_3 m_4) (thm_370 A b_2 a_3 y_1 m_4).

(; Theorem: |- ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_372 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) -> hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_373 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_374 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_373 p_1) (thm_373 p_1).

(; Theorem: |- ((= (= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p))) (= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p))) ;)

(; dict ;)

def thm_375 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)).

(; Theorem: |- ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) Data.Bool.F)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_376 : hol.proof (hol.eq hol.bool ((__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1) hol.false) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) :=
  hol.BETA_CONV hol.bool hol.bool (__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1) hol.false.

(; Theorem: |- ((= ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) Data.Bool.F))) ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_377 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (thm_375 p_1) thm_376.

(; Theorem: |- ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_378 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1.

(; Theorem: |- ((= (= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p))) (= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p))) ;)

(; dict ;)

def thm_379 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) thm_91 (thm_378 p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_380 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false).

(; Theorem: |- ((= ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F))) ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_381 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (thm_379 p_1) thm_380.

(; Theorem: |- ((= ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) Data.Bool.F))) ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_382 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) (thm_377 p_1) (thm_381 p_1).

(; Theorem: |- ((= \lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618)) \lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618)) ;)

(; dict ;)

def thm_383 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1) (__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (__618_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_1) __618_1) __618_1).

(; Theorem: |- ((= p) Data.Bool.F) ;)

(; dict ;)

def thm_384 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool p_1 hol.false) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) p)) (\lambda _618. ((= ((Data.Bool.==> (Data.Bool.~ _618)) _618)) _618) Data.Bool.F)) ;)

(; dict ;)

def thm_385 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) (__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1 hol.false thm_383 (thm_384 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_386 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) p_1) ((__618_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __618_2) __618_2) __618_2) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) (thm_382 p_1) (thm_385 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_387 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (thm_386 p_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_388 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_389 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_388 t_1) (thm_388 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_390 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_391 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_390 thm_390.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_392 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_183 thm_391.

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_393 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_394 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_393 t_1) (thm_393 t_1).

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_395 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_16 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_396 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_397 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_394 t_1) (thm_395 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => thm_396 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_398 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_399 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_398 t_1) (thm_398 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_400 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_17 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_401 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_402 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_399 t_1) (thm_400 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => thm_401 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_403 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_404 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_403 t_1) (thm_403 t_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_405 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_18 t_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_406 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_407 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_404 t_1) (thm_405 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => thm_406 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_408 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_19 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_409 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_407 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_388 t_1) (thm_408 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_410 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (thm_402 t_1) (thm_409 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_411 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (thm_397 t_1) (thm_410 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_412 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => thm_411 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_413 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_414 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) thm_392 thm_412 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => thm_413 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_415 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_416 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_414 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => thm_415 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_417 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_418 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_416 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => thm_417 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) (Data.Bool.~ ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) ;)

(; dict ;)

def thm_419 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.not (hol.imp (hol.not hol.false) hol.false))) :=
  (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_389 t_1) (thm_418 t_1)) (hol.imp (hol.not hol.false) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) (Data.Bool.~ (Data.Bool.~ Data.Bool.F))) ;)

(; dict ;)

def thm_420 : hol.proof (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) (hol.not (hol.not hol.false))) :=
  (t_1 : hol.term hol.bool => thm_247 t_1) (hol.not hol.false).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ Data.Bool.F))) Data.Bool.F) ;)

(; dict ;)

def thm_421 : hol.proof (hol.eq hol.bool (hol.not (hol.not hol.false)) hol.false) :=
  (t_1 : hol.term hol.bool => thm_280 t_1) hol.false.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_422 : hol.proof (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) :=
  hol.TRANS hol.bool (hol.imp (hol.not hol.false) hol.false) (hol.not (hol.not hol.false)) hol.false thm_420 thm_421.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_423 : hol.proof (hol.eq hol.bool (hol.not (hol.imp (hol.not hol.false) hol.false)) (hol.not hol.false)) :=
  hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.imp (hol.not hol.false) hol.false) hol.false thm_345 thm_422.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_424 : hol.proof (hol.eq hol.bool (hol.not (hol.imp (hol.not hol.false) hol.false)) hol.true) :=
  hol.TRANS hol.bool (hol.not (hol.imp (hol.not hol.false) hol.false)) (hol.not hol.false) hol.true thm_423 thm_14.

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_425 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) hol.true) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.not (hol.imp (hol.not hol.false) hol.false)) hol.true thm_419 thm_424.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_426 : hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false)) :=
  hol.SYM hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) hol.true thm_425.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_427 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_387 p_1 hyp_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp (hol.not hol.false) hol.false) hol.false) thm_426 thm_3).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_428 : p_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => thm_427 p_1 hyp_1.

(; Theorem: |- ((= (= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p))) (= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p))) ;)

(; dict ;)

def thm_429 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)).

(; Theorem: |- ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_430 : hol.proof (hol.eq hol.bool ((__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1) hol.true) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) :=
  hol.BETA_CONV hol.bool hol.bool (__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1) hol.true.

(; Theorem: |- ((= ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) Data.Bool.T))) ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_431 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (thm_429 p_1) thm_430.

(; Theorem: |- ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_432 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1.

(; Theorem: |- ((= (= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p))) (= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p))) ;)

(; dict ;)

def thm_433 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) thm_91 (thm_432 p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_434 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true).

(; Theorem: |- ((= ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T))) ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_435 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (thm_433 p_1) thm_434.

(; Theorem: |- ((= ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) Data.Bool.T))) ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T))) ;)

(; dict ;)

def thm_436 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) (thm_431 p_1) (thm_435 p_1).

(; Theorem: |- ((= \lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616)) \lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616)) ;)

(; dict ;)

def thm_437 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1) (__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (__616_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_1) __616_1) __616_1).

(; Theorem: |- ((= p) Data.Bool.T) ;)

(; dict ;)

def thm_438 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool p_1 hol.true) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) p)) (\lambda _616. ((= ((Data.Bool.==> (Data.Bool.~ _616)) _616)) _616) Data.Bool.T)) ;)

(; dict ;)

def thm_439 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) (__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1 hol.true thm_437 (thm_438 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_440 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) p_1) ((__616_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp (hol.not __616_2) __616_2) __616_2) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) (thm_436 p_1) (thm_439 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_441 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (thm_440 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_442 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.imp (hol.not hol.true) hol.true)) :=
  (t_1 : hol.term hol.bool => thm_400 t_1) (hol.imp (hol.not hol.true) hol.true).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_443 : hol.proof (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_224 t_1) (hol.not hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_444 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) hol.true) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.imp (hol.not hol.true) hol.true) hol.true thm_442 thm_443.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> (Data.Bool.~ Data.Bool.T)) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_445 : hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true)) :=
  hol.SYM hol.bool (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) hol.true thm_444.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_446 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_441 p_1 hyp_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp (hol.not hol.true) hol.true) hol.true) thm_445 thm_3).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p)) ;)

(; dict ;)

def thm_447 : p_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => thm_446 p_1 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= p) Data.Bool.T)) ((= p) Data.Bool.F)) ;)

(; dict ;)

def thm_448 : p_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) :=
  p_1 : hol.term hol.bool => thm_20 p_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_449 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_450 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_451 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_449 Q_1 P_2) (thm_450 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_452 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_453 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_454 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_452 P_1) (thm_453 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_455 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_456 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_21 (thm_455 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_457 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_454 P_1) (thm_456 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_458 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_459 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_457 P_2) (thm_458 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_460 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_451 Q_1 P_2) (thm_459 Q_1 P_2).

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_461 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_462 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_460 Q_1 P_2) (thm_461 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_463 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_462 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_464 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_465 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_463 Q_3 R_2 P_1 hyp_2 (thm_464 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_466 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_467 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_465 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_466 R_3 Q_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_468 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_469 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_448 p_1) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) => thm_468 p_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_470 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_447 p_1) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => thm_469 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ p)) p)) p) ;)

(; dict ;)

def thm_471 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) :=
  p_1 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_428 p_1) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1)) => thm_470 p_1 hyp_1).

(; Theorem: |- ((= Data.Bool.F) Data.Bool.F) ;)

(; dict ;)

def thm_472 : hol.proof (hol.eq hol.bool hol.false hol.false) :=
  hol.REFL hol.bool hol.false.

(; Theorem: |- ((= Data.Bool.F) Data.Bool.F) ;)

(; dict ;)

def thm_473 : hol.proof (hol.eq hol.bool hol.false hol.false) :=
  hol.TRANS hol.bool hol.false hol.false hol.false thm_472 thm_472.

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< (m y)) (m b))) Data.Bool.F)) ((Data.Bool.==> ((Number.Natural.< (m y)) (m b))) Data.Bool.F)) ;)

(; dict ;)

def thm_474 : A : hol.type -> b_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false)) :=
  A : hol.type => b_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< (m y)) (m b))) Data.Bool.F)) ((Data.Bool.==> ((Number.Natural.< (m y)) (m b))) Data.Bool.F)) ;)

(; dict ;)

def thm_475 : A : hol.type -> b_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false)) :=
  A : hol.type => b_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false) (thm_474 A b_1 y_2 m_3) (thm_474 A b_1 y_2 m_3).

(; Theorem: |- ((= ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ;)

(; dict ;)

def thm_476 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false))) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)).

(; Theorem: |- ((= ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ;)

(; dict ;)

def thm_477 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (thm_476 p_1) (thm_476 p_1).

(; Theorem: |- ((= (= (Data.Bool.~ p))) (= (Data.Bool.~ p))) ;)

(; dict ;)

def thm_478 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not p_1)) (hol.eq hol.bool (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not p_1)).

(; Theorem: |- ((= ((Data.Bool.==> p) Data.Bool.F)) (Data.Bool.~ p)) ;)

(; dict ;)

def thm_479 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp p_1 hol.false) (hol.not p_1)) :=
  p_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_247 t_1) p_1.

(; Theorem: |- ((= ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ((= (Data.Bool.~ p)) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_480 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not p_1)) (hol.eq hol.bool (hol.not p_1)) (hol.imp p_1 hol.false) (hol.not p_1) (thm_478 p_1) (thm_479 p_1).

(; Theorem: |- ((= ((= (Data.Bool.~ p)) (Data.Bool.~ p))) Data.Bool.T) ;)

(; dict ;)

def thm_481 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.not p_1)) hol.true) :=
  p_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_130 x_1) (hol.not p_1).

(; Theorem: |- ((= ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_482 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) hol.true) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.not p_1)) hol.true (thm_480 p_1) (thm_481 p_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F))) ;)

(; dict ;)

def thm_483 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false))) :=
  p_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) hol.true (thm_482 p_1).

(; Theorem: |- ((= (Data.Bool.~ p)) ((Data.Bool.==> p) Data.Bool.F)) ;)

(; dict ;)

def thm_484 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) :=
  p_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (thm_483 p_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) ((Data.Bool.==> ((Number.Natural.< (m y)) (m b))) Data.Bool.F)) ;)

(; dict ;)

def thm_485 : A : hol.type -> b_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false)) :=
  A : hol.type => b_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (hol.eq hol.bool (hol.not p_1) (hol.imp p_1 hol.false)) (thm_477 p_1) (thm_484 p_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) ((Data.Bool.==> ((Number.Natural.< (m y)) (m b))) Data.Bool.F)) ;)

(; dict ;)

def thm_486 : A : hol.type -> b_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false)) :=
  A : hol.type => b_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)) hol.false) (thm_367 A b_1 y_2 m_3) (thm_485 A b_1 y_2 m_3).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_487 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) -> hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_488 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) -> hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_489 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) -> hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => hol.PROVE_HYP (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (thm_487 A b_1 a_2 y_3 m_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => thm_488 A b_1 a_2 y_3 m_4 hyp_2).

(; Theorem: |- (Data.Bool.~ ((Number.Natural.< (m y)) (m b))) ;)

(; dict ;)

def thm_490 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) -> hol.proof (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) hyp_1.

(; Theorem: |- (Data.Bool.~ ((Number.Natural.< (m y)) (m b))) ;)

(; dict ;)

def thm_491 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2))) -> hol.proof (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2))) => hol.PROVE_HYP (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) (thm_489 A b_2 a_1 y_3 m_4 hyp_1) (hyp_2 : hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) => thm_490 A a_1 b_2 y_3 m_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< (m y)) (m b))) Data.Bool.F) ;)

(; dict ;)

def thm_492 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)) hol.false) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2))) => hol.EQ_MP (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)) hol.false) (thm_486 A b_2 y_3 m_4) (hol.EQ_MP (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) (thm_367 A b_2 y_3 m_4) (hol.EQ_MP (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) (thm_367 A b_2 y_3 m_4) (thm_491 A a_1 b_2 y_3 m_4 hyp_1))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) ((Number.Natural.< (m y)) (m b)))) ((Number.Natural.< (m y)) (m b))) ;)

(; dict ;)

def thm_493 : A : hol.type -> b_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (p_1 : hol.term hol.bool => thm_471 p_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 b_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ;)

(; dict ;)

def thm_494 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ;)

(; dict ;)

def thm_495 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (thm_494 __12203_1 __12202_2 __12201_3) (thm_494 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_496 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_497 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_496 b_1 a_2) (thm_496 b_1 a_2).

(; Theorem: |- ((= (= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a))) (= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a))) ;)

(; dict ;)

def thm_498 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)).

(; Theorem: |- ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) Data.Bool.F)) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ;)

(; dict ;)

def thm_499 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2)) hol.false) (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2)) hol.false.

(; Theorem: |- ((= ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) Data.Bool.F))) ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)))) ;)

(; dict ;)

def thm_500 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false)) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (thm_498 a_1 b_2) (thm_499 b_2).

(; Theorem: |- ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_501 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1.

(; Theorem: |- ((= (= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a))) (= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)))) ;)

(; dict ;)

def thm_502 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) thm_91 (thm_501 a_1 b_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ;)

(; dict ;)

def thm_503 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)).

(; Theorem: |- ((= ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)))) ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)))) ;)

(; dict ;)

def thm_504 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false))) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (thm_502 a_1 b_2) (thm_503 b_2).

(; Theorem: |- ((= ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) Data.Bool.F))) ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)))) ;)

(; dict ;)

def thm_505 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false)) (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false))) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false))) (thm_500 a_1 b_2) (thm_504 a_1 b_2).

(; Theorem: |- ((= \lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606))) \lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606))) ;)

(; dict ;)

def thm_506 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2)) (__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__606_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_2 b_1) (hol.imp (hol.not b_1) __606_2)).

(; Theorem: |- ((= a) Data.Bool.F) ;)

(; dict ;)

def thm_507 : a_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool a_1 hol.false) :=
  a_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) a)) (\lambda _606. ((= ((Data.Bool.\/ _606) b)) ((Data.Bool.==> (Data.Bool.~ b)) _606)) Data.Bool.F)) ;)

(; dict ;)

def thm_508 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) hol.false)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.APP_THM hol.bool hol.bool (__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) (__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_2) (hol.imp (hol.not b_2) __606_3)) a_1 hol.false (thm_506 b_2) (thm_507 a_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ;)

(; dict ;)

def thm_509 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_1) (hol.imp (hol.not b_1) __606_3)) a_2) ((__606_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __606_3 b_1) (hol.imp (hol.not b_1) __606_3)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) (thm_505 a_2 b_1) (thm_508 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_510 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.false b_2) (hol.imp (hol.not b_2) hol.false)) (thm_509 b_2 a_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_511 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_512 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_511 t_1) (thm_511 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_513 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_514 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_513 thm_513.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) ;)

(; dict ;)

def thm_515 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_183 thm_514.

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_516 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_517 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_516 t_1) (thm_516 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_518 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_22 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_519 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_520 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_517 t_1) (thm_518 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => thm_519 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_521 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_522 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_521 t_1) (thm_521 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_523 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_23 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_524 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_525 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_522 t_1) (thm_523 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => thm_524 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_526 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_24 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_527 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_528 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_511 t_1) (thm_526 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => thm_527 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_529 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_530 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_529 t_1) (thm_529 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.F)) t) ;)

(; dict ;)

def thm_531 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) :=
  t_1 : hol.term hol.bool => thm_25 t_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_532 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_533 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_530 t_1) (thm_531 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => thm_532 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_534 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_535 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_534 t_1) (thm_534 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) t)) t) ;)

(; dict ;)

def thm_536 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_26 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_537 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (thm_533 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_535 t_1) (thm_536 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_538 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_528 t_1) (thm_537 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_539 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (thm_525 t_1) (thm_538 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_540 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (thm_520 t_1) (thm_539 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_541 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_540 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_542 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_543 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) thm_515 thm_541 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => thm_542 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_544 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_545 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_543 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) => thm_544 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_546 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.eq hol.bool (hol.or hol.false t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_547 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_545 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) => thm_546 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) b)) b) ;)

(; dict ;)

def thm_548 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false b_1) b_1) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_512 t_1) (thm_547 t_1)) b_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ Data.Bool.F) b))) (= b)) ;)

(; dict ;)

def thm_549 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or hol.false b_1)) (hol.eq hol.bool b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or hol.false b_1) b_1 thm_91 (thm_548 b_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)) (Data.Bool.~ (Data.Bool.~ b))) ;)

(; dict ;)

def thm_550 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not b_1) hol.false) (hol.not (hol.not b_1))) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_247 t_1) (hol.not b_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ b))) b) ;)

(; dict ;)

def thm_551 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not b_1)) b_1) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_280 t_1) b_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)) b) ;)

(; dict ;)

def thm_552 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not b_1) hol.false) b_1) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.not b_1) hol.false) (hol.not (hol.not b_1)) b_1 (thm_550 b_1) (thm_551 b_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ((= b) b)) ;)

(; dict ;)

def thm_553 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (hol.eq hol.bool b_1 b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or hol.false b_1)) (hol.eq hol.bool b_1) (hol.imp (hol.not b_1) hol.false) b_1 (thm_549 b_1) (thm_552 b_1).

(; Theorem: |- ((= ((= b) b)) Data.Bool.T) ;)

(; dict ;)

def thm_554 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool b_1 b_1) hol.true) :=
  b_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_130 x_1) b_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_555 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (hol.eq hol.bool b_1 b_1) hol.true (thm_553 b_1) (thm_554 b_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F))) ;)

(; dict ;)

def thm_556 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) hol.true (thm_555 b_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.F)) ;)

(; dict ;)

def thm_557 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (thm_556 b_1) thm_3.

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_558 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.or hol.false b_1) (hol.imp (hol.not b_1) hol.false)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_510 a_2 b_1 hyp_1) (thm_557 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.F)) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_559 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => thm_558 b_1 a_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a))) (= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a))) ;)

(; dict ;)

def thm_560 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)).

(; Theorem: |- ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ;)

(; dict ;)

def thm_561 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2)) hol.true) (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2)) hol.true.

(; Theorem: |- ((= ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) Data.Bool.T))) ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)))) ;)

(; dict ;)

def thm_562 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true)) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (thm_560 a_1 b_2) (thm_561 b_2).

(; Theorem: |- ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_563 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1.

(; Theorem: |- ((= (= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a))) (= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)))) ;)

(; dict ;)

def thm_564 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) thm_91 (thm_563 a_1 b_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ;)

(; dict ;)

def thm_565 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)).

(; Theorem: |- ((= ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)))) ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)))) ;)

(; dict ;)

def thm_566 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true))) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (thm_564 a_1 b_2) (thm_565 b_2).

(; Theorem: |- ((= ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) Data.Bool.T))) ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)))) ;)

(; dict ;)

def thm_567 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true)) (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true))) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true))) (thm_562 a_1 b_2) (thm_566 a_1 b_2).

(; Theorem: |- ((= \lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604))) \lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604))) ;)

(; dict ;)

def thm_568 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2)) (__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__604_2 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_2 b_1) (hol.imp (hol.not b_1) __604_2)).

(; Theorem: |- ((= a) Data.Bool.T) ;)

(; dict ;)

def thm_569 : a_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool a_1 hol.true) :=
  a_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) a)) (\lambda _604. ((= ((Data.Bool.\/ _604) b)) ((Data.Bool.==> (Data.Bool.~ b)) _604)) Data.Bool.T)) ;)

(; dict ;)

def thm_570 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) hol.true)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.APP_THM hol.bool hol.bool (__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) (__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_2) (hol.imp (hol.not b_2) __604_3)) a_1 hol.true (thm_568 b_2) (thm_569 a_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ;)

(; dict ;)

def thm_571 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_1) (hol.imp (hol.not b_1) __604_3)) a_2) ((__604_3 : hol.term hol.bool => hol.eq hol.bool (hol.or __604_3 b_1) (hol.imp (hol.not b_1) __604_3)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) (thm_567 a_2 b_1) (thm_570 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_572 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.or a_1 b_2) (hol.imp (hol.not b_2) a_1)) (hol.eq hol.bool (hol.or hol.true b_2) (hol.imp (hol.not b_2) hol.true)) (thm_571 b_2 a_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) b)) Data.Bool.T) ;)

(; dict ;)

def thm_573 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true b_1) hol.true) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_518 t_1) b_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ Data.Bool.T) b))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_574 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or hol.true b_1)) (hol.eq hol.bool hol.true)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or hol.true b_1) hol.true thm_91 (thm_573 b_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_575 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not b_1) hol.true) hol.true) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_224 t_1) (hol.not b_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_576 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (hol.eq hol.bool hol.true hol.true)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or hol.true b_1)) (hol.eq hol.bool hol.true) (hol.imp (hol.not b_1) hol.true) hol.true (thm_574 b_1) (thm_575 b_1).

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_577 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_395 t_1) hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) Data.Bool.T) ;)

(; dict ;)

def thm_578 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (hol.eq hol.bool hol.true hol.true) hol.true (thm_576 b_1) thm_577.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T))) ;)

(; dict ;)

def thm_579 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) hol.true (thm_578 b_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) b)) ((Data.Bool.==> (Data.Bool.~ b)) Data.Bool.T)) ;)

(; dict ;)

def thm_580 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (thm_579 b_1) thm_3.

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_581 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.or hol.true b_1) (hol.imp (hol.not b_1) hol.true)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_572 a_2 b_1 hyp_1) (thm_580 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.T)) ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a))) ;)

(; dict ;)

def thm_582 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => thm_581 b_1 a_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= a) Data.Bool.T)) ((= a) Data.Bool.F)) ;)

(; dict ;)

def thm_583 : a_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool a_1 hol.true) (hol.eq hol.bool a_1 hol.false)) :=
  a_1 : hol.term hol.bool => thm_20 a_1.

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_584 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_585 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_583 a_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => thm_584 b_1 a_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_586 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_582 b_1 a_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => thm_585 b_1 a_2 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.\/ a) b)) ((Data.Bool.==> (Data.Bool.~ b)) a)) ;)

(; dict ;)

def thm_587 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_559 b_1 a_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2))) => thm_586 b_1 a_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Number.Natural.< _12201) _12203))) ;)

(; dict ;)

def thm_588 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12203_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) (hol.imp (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2))) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12203_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_497 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_496 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (hol.eq hol.bool (hol.or a_2 b_1) (hol.imp (hol.not b_1) a_2)) (thm_496 b_1 a_2) (thm_587 b_1 a_2)))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_589 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_590 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_589 b_1 a_2) (thm_589 b_1 a_2).

(; Theorem: |- ((= (= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a))) (= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a))) ;)

(; dict ;)

def thm_591 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)).

(; Theorem: |- ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_592 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1))) hol.false) (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) Data.Bool.F))) ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_593 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false)) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (thm_591 a_1 b_2) (thm_592 b_2).

(; Theorem: |- ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_594 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1.

(; Theorem: |- ((= (= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a))) (= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_595 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) thm_91 (thm_594 a_1 b_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_596 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))).

(; Theorem: |- ((= ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))))) ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_597 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (thm_595 a_1 b_2) (thm_596 b_2).

(; Theorem: |- ((= ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) Data.Bool.F))) ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_598 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false)) (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2)))) (thm_593 a_1 b_2) (thm_597 a_1 b_2).

(; Theorem: |- ((= \lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b)))) \lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_599 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1))) (__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__610_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_2 b_1)) (hol.and (hol.not __610_2) (hol.not b_1))).

(; Theorem: |- ((= (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) a)) (\lambda _610. ((= (Data.Bool.~ ((Data.Bool.\/ _610) b))) ((Data.Bool./\ (Data.Bool.~ _610)) (Data.Bool.~ b))) Data.Bool.F)) ;)

(; dict ;)

def thm_600 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) hol.false)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.APP_THM hol.bool hol.bool (__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) (__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_2)) (hol.and (hol.not __610_3) (hol.not b_2))) a_1 hol.false (thm_599 b_2) (thm_507 a_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_601 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_1)) (hol.and (hol.not __610_3) (hol.not b_1))) a_2) ((__610_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __610_3 b_1)) (hol.and (hol.not __610_3) (hol.not b_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) (thm_598 a_2 b_1) (thm_600 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_602 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.false b_2)) (hol.and (hol.not hol.false) (hol.not b_2))) (thm_601 b_2 a_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) (Data.Bool.~ b)) ;)

(; dict ;)

def thm_603 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.not b_1)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.or hol.false b_1) b_1 thm_345 (thm_548 b_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b)))) (= (Data.Bool.~ b))) ;)

(; dict ;)

def thm_604 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.or hol.false b_1))) (hol.eq hol.bool (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.or hol.false b_1)) (hol.not b_1) thm_91 (thm_603 b_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.~ Data.Bool.F))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_605 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.not hol.false)) (hol.and hol.true)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.not hol.false) hol.true thm_344 thm_14.

(; Theorem: |- ((= (Data.Bool.~ b)) (Data.Bool.~ b)) ;)

(; dict ;)

def thm_606 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not b_1) (hol.not b_1)) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.not b_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_607 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.false) (hol.not b_1)) (hol.and hol.true (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.not hol.false)) (hol.and hol.true) (hol.not b_1) (hol.not b_1) thm_605 (thm_606 b_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_608 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_609 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_608 t_1) (thm_608 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_610 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_611 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_610 thm_610.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_612 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_183 thm_611.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_613 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_27 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_614 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_615 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_608 t_1) (thm_613 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_614 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_616 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_617 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_616 t_1) (thm_616 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_618 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_28 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_619 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_620 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_617 t_1) (thm_618 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_619 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_621 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_622 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_621 t_1) (thm_621 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_623 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_29 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_624 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_625 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_622 t_1) (thm_623 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_624 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_626 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_627 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_626 t_1) (thm_626 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_628 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_30 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_629 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_630 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_627 t_1) (thm_628 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_629 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_631 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_632 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_631 t_1) (thm_631 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_633 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_31 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_634 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_630 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_632 t_1) (thm_633 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_635 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_625 t_1) (thm_634 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_636 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_620 t_1) (thm_635 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_637 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_615 t_1) (thm_636 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_638 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_637 t_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_639 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_640 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_612 thm_638 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_639 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ b))) (Data.Bool.~ b)) ;)

(; dict ;)

def thm_641 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.not b_1)) (hol.not b_1)) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_609 t_1) (thm_640 t_1)) (hol.not b_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))) (Data.Bool.~ b)) ;)

(; dict ;)

def thm_642 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.false) (hol.not b_1)) (hol.not b_1)) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.not hol.false) (hol.not b_1)) (hol.and hol.true (hol.not b_1)) (hol.not b_1) (thm_607 b_1) (thm_641 b_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ((= (Data.Bool.~ b)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_643 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (hol.eq hol.bool (hol.not b_1) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1))) (hol.eq hol.bool (hol.not b_1)) (hol.and (hol.not hol.false) (hol.not b_1)) (hol.not b_1) (thm_604 b_1) (thm_642 b_1).

(; Theorem: |- ((= ((= (Data.Bool.~ b)) (Data.Bool.~ b))) Data.Bool.T) ;)

(; dict ;)

def thm_644 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not b_1) (hol.not b_1)) hol.true) :=
  b_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_130 x_1) (hol.not b_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) Data.Bool.T) ;)

(; dict ;)

def thm_645 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (hol.eq hol.bool (hol.not b_1) (hol.not b_1)) hol.true (thm_643 b_1) (thm_644 b_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_646 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) hol.true (thm_645 b_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.F) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_647 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (thm_646 b_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_648 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or hol.false b_1)) (hol.and (hol.not hol.false) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_602 a_2 b_1 hyp_1) (thm_647 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_649 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.false) => thm_648 b_1 a_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a))) (= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a))) ;)

(; dict ;)

def thm_650 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)).

(; Theorem: |- ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_651 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1))) hol.true) (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) Data.Bool.T))) ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_652 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true)) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (thm_650 a_1 b_2) (thm_651 b_2).

(; Theorem: |- ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_653 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1.

(; Theorem: |- ((= (= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a))) (= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_654 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) thm_91 (thm_653 a_1 b_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_655 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))).

(; Theorem: |- ((= ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))))) ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_656 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (thm_654 a_1 b_2) (thm_655 b_2).

(; Theorem: |- ((= ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) Data.Bool.T))) ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))))) ;)

(; dict ;)

def thm_657 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true)) (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2)))) (thm_652 a_1 b_2) (thm_656 a_1 b_2).

(; Theorem: |- ((= \lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b)))) \lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_658 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1))) (__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__608_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_2 b_1)) (hol.and (hol.not __608_2) (hol.not b_1))).

(; Theorem: |- ((= (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) a)) (\lambda _608. ((= (Data.Bool.~ ((Data.Bool.\/ _608) b))) ((Data.Bool./\ (Data.Bool.~ _608)) (Data.Bool.~ b))) Data.Bool.T)) ;)

(; dict ;)

def thm_659 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) hol.true)) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.APP_THM hol.bool hol.bool (__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) (__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_2)) (hol.and (hol.not __608_3) (hol.not b_2))) a_1 hol.true (thm_658 b_2) (thm_569 a_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_660 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_1)) (hol.and (hol.not __608_3) (hol.not b_1))) a_2) ((__608_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or __608_3 b_1)) (hol.and (hol.not __608_3) (hol.not b_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) (thm_657 a_2 b_1) (thm_659 a_2 b_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_661 : a_1 : hol.term hol.bool -> b_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2)))) :=
  a_1 : hol.term hol.bool => b_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.or a_1 b_2)) (hol.and (hol.not a_1) (hol.not b_2))) (hol.eq hol.bool (hol.not (hol.or hol.true b_2)) (hol.and (hol.not hol.true) (hol.not b_2))) (thm_660 b_2 a_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) (Data.Bool.~ Data.Bool.T)) ;)

(; dict ;)

def thm_662 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.not hol.true)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.or hol.true b_1) hol.true thm_345 (thm_573 b_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) Data.Bool.F) ;)

(; dict ;)

def thm_663 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) hol.false) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.not (hol.or hol.true b_1)) (hol.not hol.true) hol.false (thm_662 b_1) thm_13.

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b)))) (= Data.Bool.F)) ;)

(; dict ;)

def thm_664 : b_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.or hol.true b_1))) (hol.eq hol.bool hol.false)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.or hol.true b_1)) hol.false thm_91 (thm_663 b_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.~ Data.Bool.T))) (Data.Bool./\ Data.Bool.F)) ;)

(; dict ;)

def thm_665 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.not hol.true)) (hol.and hol.false)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.not hol.true) hol.false thm_344 thm_13.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_666 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.true) (hol.not b_1)) (hol.and hol.false (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.not hol.true)) (hol.and hol.false) (hol.not b_1) (hol.not b_1) thm_665 (thm_606 b_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ b))) Data.Bool.F) ;)

(; dict ;)

def thm_667 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.not b_1)) hol.false) :=
  b_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_623 t_1) (hol.not b_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))) Data.Bool.F) ;)

(; dict ;)

def thm_668 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.true) (hol.not b_1)) hol.false) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.not hol.true) (hol.not b_1)) (hol.and hol.false (hol.not b_1)) hol.false (thm_666 b_1) (thm_667 b_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ((= Data.Bool.F) Data.Bool.F)) ;)

(; dict ;)

def thm_669 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (hol.eq hol.bool hol.false hol.false)) :=
  b_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1))) (hol.eq hol.bool hol.false) (hol.and (hol.not hol.true) (hol.not b_1)) hol.false (thm_664 b_1) (thm_668 b_1).

(; Theorem: |- ((= ((= Data.Bool.F) Data.Bool.F)) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_670 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false hol.false) (hol.not hol.false)) :=
  (t_1 : hol.term hol.bool => thm_405 t_1) hol.false.

(; Theorem: |- ((= ((= Data.Bool.F) Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_671 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false hol.false) hol.true) :=
  hol.TRANS hol.bool (hol.eq hol.bool hol.false hol.false) (hol.not hol.false) hol.true thm_670 thm_14.

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) Data.Bool.T) ;)

(; dict ;)

def thm_672 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) hol.true) :=
  b_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (hol.eq hol.bool hol.false hol.false) hol.true (thm_669 b_1) thm_671.

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_673 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) hol.true (thm_672 b_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ Data.Bool.T) b))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_674 : b_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (thm_673 b_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_675 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or hol.true b_1)) (hol.and (hol.not hol.true) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_661 a_2 b_1 hyp_1) (thm_674 b_1).

(; Theorem: |- ((Data.Bool.==> ((= a) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b)))) ;)

(; dict ;)

def thm_676 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool a_2 hol.true) => thm_675 b_1 a_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_677 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_678 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_583 a_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool a_2 hol.false)) => thm_677 b_1 a_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_679 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_676 b_1 a_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.true) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => thm_678 b_1 a_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ a) b))) ((Data.Bool./\ (Data.Bool.~ a)) (Data.Bool.~ b))) ;)

(; dict ;)

def thm_680 : b_1 : hol.term hol.bool -> a_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) :=
  b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_649 b_1 a_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool a_2 hol.false) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1)))) => thm_679 b_1 a_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool./\ (Data.Bool.~ (Data.Bool.~ ((Number.Natural.< _12201) _12202)))) (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ;)

(; dict ;)

def thm_681 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.and (hol.not (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2))) (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_590 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_589 b_1 a_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (hol.eq hol.bool (hol.not (hol.or a_2 b_1)) (hol.and (hol.not a_2) (hol.not b_1))) (thm_589 b_1 a_2) (thm_680 b_1 a_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ;)

(; dict ;)

def thm_682 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1)) :=
  a_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ;)

(; dict ;)

def thm_683 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1)) :=
  a_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (thm_682 a_1) (thm_682 a_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ a))) a) ;)

(; dict ;)

def thm_684 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) :=
  a_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_280 t_1) a_1.

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.~ a)))) (= a)) ;)

(; dict ;)

def thm_685 : a_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.not a_1))) (hol.eq hol.bool a_1)) :=
  a_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.not a_1)) a_1 thm_91 (thm_684 a_1).

(; Theorem: |- ((= a) a) ;)

(; dict ;)

def thm_686 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool a_1 a_1) :=
  a_1 : hol.term hol.bool => hol.REFL hol.bool a_1.

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ((= a) a)) ;)

(; dict ;)

def thm_687 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool a_1 a_1)) :=
  a_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.not a_1))) (hol.eq hol.bool a_1) a_1 a_1 (thm_685 a_1) (thm_686 a_1).

(; Theorem: |- ((= ((= a) a)) Data.Bool.T) ;)

(; dict ;)

def thm_688 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool a_1 a_1) hol.true) :=
  a_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_130 x_1) a_1.

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ a))) a)) Data.Bool.T) ;)

(; dict ;)

def thm_689 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) hol.true) :=
  a_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool a_1 a_1) hol.true (thm_687 a_1) (thm_688 a_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ (Data.Bool.~ a))) a)) ;)

(; dict ;)

def thm_690 : a_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.not a_1)) a_1)) :=
  a_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) hol.true (thm_689 a_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((Number.Natural.< _12201) _12202)))) ((Number.Natural.< _12201) _12202)) ;)

(; dict ;)

def thm_691 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12201_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1)) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12201_2 : hol.term Number_2ENatural_2Enatural => (a_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (thm_683 a_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.not a_1)) a_1) (thm_690 a_1) thm_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.~ (Data.Bool.~ ((Number.Natural.< _12201) _12202))))) (Data.Bool./\ ((Number.Natural.< _12201) _12202))) ;)

(; dict ;)

def thm_692 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12201_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.not (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1))) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12201_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.not (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1) thm_344 (thm_691 __12202_1 __12201_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ((Number.Natural.<= _12202) _12203)) ;)

(; dict ;)

def thm_693 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => (a_1 : hol.term hol.bool => thm_684 a_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ (Data.Bool.~ ((Number.Natural.< _12201) _12202)))) (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ;)

(; dict ;)

def thm_694 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.and (hol.not (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2))) (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.and (hol.not (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1) (thm_692 __12202_2 __12201_3) (thm_693 __12203_1 __12202_2).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ;)

(; dict ;)

def thm_695 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.and (hol.not (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2))) (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (thm_681 __12203_1 __12202_2 __12201_3) (thm_694 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))))) (Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203)))) ;)

(; dict ;)

def thm_696 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) thm_161 (thm_695 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= ((Number.Natural.< _12201) _12203)) ((Number.Natural.< _12201) _12203)) ;)

(; dict ;)

def thm_697 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12201_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12203_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12203_1)) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12201_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12203_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ;)

(; dict ;)

def thm_698 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (thm_696 __12203_1 __12202_2 __12201_3) (thm_697 __12203_1 __12201_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ;)

(; dict ;)

def thm_699 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12203_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2))) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12203_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) (hol.imp (hol.not (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2)) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2)) (thm_588 __12202_1 __12203_2 __12201_3) (thm_698 __12203_2 __12202_1 __12201_3).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202)))) (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202)))) ;)

(; dict ;)

def thm_700 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12201_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1)))) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12201_2 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ;)

(; dict ;)

def thm_701 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ;)

(; dict ;)

def thm_702 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (thm_701 q_1 p_2) (thm_701 q_1 p_2).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) ;)

(; dict ;)

def thm_703 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) ;)

(; dict ;)

def thm_704 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) thm_703 thm_703.

(; Theorem: |- ((= (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))))) ;)

(; dict ;)

def thm_705 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) thm_183 thm_704.

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) ;)

(; dict ;)

def thm_706 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))).

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) ;)

(; dict ;)

def thm_707 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) :=
  p_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (thm_706 p_1) (thm_706 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) ;)

(; dict ;)

def thm_708 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) thm_183 (thm_707 p_1).

(; Theorem: |- ((= \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_709 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))).

(; Theorem: |- ((= \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_710 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (thm_709 q_1 p_2) (thm_709 q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) ;)

(; dict ;)

def thm_711 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))))))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) thm_183 (thm_710 q_1 p_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ;)

(; dict ;)

def thm_712 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ;)

(; dict ;)

def thm_713 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (thm_712 t2_1 t1_2) (thm_712 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1))) ;)

(; dict ;)

def thm_714 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 t2_2) (hol.or t2_2 t1_1))) :=
  t1_1 : hol.term hol.bool => thm_32 t1_1.

(; Theorem: |- ((= ((Data.Bool.\/ t1) t2)) ((Data.Bool.\/ t2) t1)) ;)

(; dict ;)

def thm_715 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_714 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p)) ;)

(; dict ;)

def thm_716 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (hol.eq hol.bool (hol.or t1_2 t2_1) (hol.or t2_1 t1_2)) (thm_713 t2_1 t1_2) (thm_715 t2_1 t1_2)) q_1 p_2.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_717 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_718 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))))) (thm_716 q_2 p_3) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) => thm_717 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ;)

(; dict ;)

def thm_719 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1)))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ;)

(; dict ;)

def thm_720 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1)))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (thm_719 t3_1 t2_2 t1_3) (thm_719 t3_1 t2_2 t1_3).

(; Theorem: |- (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))))) ;)

(; dict ;)

def thm_721 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) :=
  t1_1 : hol.term hol.bool => thm_33 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ;)

(; dict ;)

def thm_722 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_721 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ;)

(; dict ;)

def thm_723 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_722 t2_2 t1_3 t3_1.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ;)

(; dict ;)

def thm_724 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (thm_720 t3_1 t2_2 t1_3) (thm_723 t3_1 t2_2 t1_3)) r_1 q_2 p_3.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ;)

(; dict ;)

def thm_725 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ;)

(; dict ;)

def thm_726 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) (thm_724 r_1 q_2 p_3) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) => thm_725 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_727 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_728 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (thm_727 r_1 q_2 p_3) (thm_727 r_1 q_2 p_3).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) ;)

(; dict ;)

def thm_729 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) ;)

(; dict ;)

def thm_730 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) thm_729 thm_729.

(; Theorem: |- ((= (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))))) ;)

(; dict ;)

def thm_731 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) thm_183 thm_730.

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) ;)

(; dict ;)

def thm_732 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))).

(; Theorem: |- ((= \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) ;)

(; dict ;)

def thm_733 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) :=
  p_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (thm_732 p_1) (thm_732 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) ;)

(; dict ;)

def thm_734 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) thm_183 (thm_733 p_1).

(; Theorem: |- ((= \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_735 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))).

(; Theorem: |- ((= \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_736 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (thm_735 q_1 p_2) (thm_735 q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) ;)

(; dict ;)

def thm_737 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3)))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) thm_183 (thm_736 q_1 p_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_738 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_739 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (thm_738 t3_1 t2_2 t1_3) (thm_738 t3_1 t2_2 t1_3).

(; Theorem: |- ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ;)

(; dict ;)

def thm_740 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) -> hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ;)

(; dict ;)

def thm_741 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) -> hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) => hol.SYM hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1) (thm_740 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ;)

(; dict ;)

def thm_742 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) -> hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ;)

(; dict ;)

def thm_743 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) -> hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) => hol.SYM hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1)) (thm_742 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_744 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.PROP_EXT (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) => thm_741 t3_1 t2_2 t1_3 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or (hol.or t1_3 t2_2) t3_1) (hol.or t1_3 (hol.or t2_2 t3_1))) => thm_743 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))) \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_745 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3)) (t3_3 : hol.term hol.bool => thm_744 t3_3 t2_1 t1_2).

(; Theorem: |- ((= (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))))) (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)))) ;)

(; dict ;)

def thm_746 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3)))) (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_2 t2_1) t3_3) (hol.or t1_2 (hol.or t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3)) thm_183 (thm_745 t2_1 t1_2).

(; Theorem: |- ((= \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))))) \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)))) ;)

(; dict ;)

def thm_747 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))) :=
  t1_1 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))) (t2_2 : hol.term hol.bool => thm_746 t2_2 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))))) (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))))) ;)

(; dict ;)

def thm_748 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))))) :=
  t1_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))) thm_183 (thm_747 t1_1).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3)))))) \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))))) ;)

(; dict ;)

def thm_749 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))))) :=
  hol.ABS_THM hol.bool hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))) (t1_1 : hol.term hol.bool => thm_748 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)))))) ;)

(; dict ;)

def thm_750 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))) thm_183 thm_749.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))))) ;)

(; dict ;)

def thm_751 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))))) :=
  hol.EQ_MP (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or (hol.or t1_1 t2_2) t3_3) (hol.or t1_1 (hol.or t2_2 t3_3)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3))))) thm_750 thm_33.

(; Theorem: |- (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)))) ;)

(; dict ;)

def thm_752 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_1 (hol.or t2_2 t3_3)) (hol.or (hol.or t1_1 t2_2) t3_3)))) :=
  t1_1 : hol.term hol.bool => thm_751 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t3. ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3))) ;)

(; dict ;)

def thm_753 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.or t1_2 (hol.or t2_1 t3_3)) (hol.or (hol.or t1_2 t2_1) t3_3))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_752 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool.\/ t1) ((Data.Bool.\/ t2) t3))) ((Data.Bool.\/ ((Data.Bool.\/ t1) t2)) t3)) ;)

(; dict ;)

def thm_754 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_753 t2_2 t1_3 t3_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ;)

(; dict ;)

def thm_755 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or (hol.or p_3 q_2) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.or t1_3 (hol.or t2_2 t3_1)) (hol.or (hol.or t1_3 t2_2) t3_1)) (thm_739 t3_1 t2_2 t1_3) (thm_754 t3_1 t2_2 t1_3)) r_1 q_2 p_3.

(; Theorem: |- ((= (= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) (= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r))) ;)

(; dict ;)

def thm_756 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1))) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or p_3 (hol.or q_2 r_1)) (hol.or (hol.or p_3 q_2) r_1) thm_91 (thm_755 r_1 q_2 p_3).

(; Theorem: |- ((= ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))) ((Data.Bool.\/ ((Data.Bool.\/ q) p)) r)) ;)

(; dict ;)

def thm_757 : r_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or q_3 (hol.or p_2 r_1)) (hol.or (hol.or q_3 p_2) r_1)) :=
  r_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_754 t3_1 t2_2 t1_3) r_1 p_2 q_3.

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ ((Data.Bool.\/ q) p)) r))) ;)

(; dict ;)

def thm_758 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1))) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1)) (hol.or q_2 (hol.or p_3 r_1)) (hol.or (hol.or q_2 p_3) r_1) (thm_756 r_1 q_2 p_3) (thm_757 r_1 p_3 q_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ ((Data.Bool.\/ q) p)) r))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_759 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1)) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1)) (thm_758 r_1 q_2 p_3).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool.\/ p) q))) (Data.Bool.\/ ((Data.Bool.\/ q) p))) ;)

(; dict ;)

def thm_760 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.or p_2 q_1)) (hol.or (hol.or q_1 p_2))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.or p_2 q_1) (hol.or q_1 p_2) thm_343 (thm_716 q_1 p_2).

(; Theorem: |- ((= r) r) ;)

(; dict ;)

def thm_761 : r_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool r_1 r_1) :=
  r_1 : hol.term hol.bool => hol.REFL hol.bool r_1.

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ ((Data.Bool.\/ q) p)) r)) ;)

(; dict ;)

def thm_762 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.or p_3 q_2)) (hol.or (hol.or q_2 p_3)) r_1 r_1 (thm_760 q_2 p_3) (thm_761 r_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))) ;)

(; dict ;)

def thm_763 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or (hol.or q_2 p_3) r_1)) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (thm_759 r_1 q_2 p_3) (thm_762 r_1 q_2 p_3).

(; Theorem: |- (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ;)

(; dict ;)

def thm_764 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => r_3 : hol.term hol.bool => thm_763 r_3 q_1 p_2.

(; Theorem: |- (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r))))) ;)

(; dict ;)

def thm_765 : p_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))) (thm_737 q_2 p_1) (thm_764 q_2 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))))) ;)

(; dict ;)

def thm_766 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3)))))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))))) (thm_734 p_1) (thm_765 p_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ;)

(; dict ;)

def thm_767 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ;)

(; dict ;)

def thm_768 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.EQ_MP (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (thm_728 r_1 q_2 p_3) (hol.EQ_MP (hol.forall hol.bool (p_4 : hol.term hol.bool => hol.forall hol.bool (q_5 : hol.term hol.bool => hol.forall hol.bool (r_6 : hol.term hol.bool => hol.eq hol.bool (hol.or p_4 (hol.or q_5 r_6)) (hol.or q_5 (hol.or p_4 r_6)))))) (hol.forall hol.bool (p_4 : hol.term hol.bool => hol.forall hol.bool (q_5 : hol.term hol.bool => hol.forall hol.bool (r_6 : hol.term hol.bool => hol.eq hol.bool (hol.or p_4 (hol.or q_5 r_6)) (hol.or q_5 (hol.or p_4 r_6)))))) thm_731 thm_766 p_3 q_2 r_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) => thm_767 r_1 q_2 p_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) p)) p) ;)

(; dict ;)

def thm_769 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_1 p_1) p_1) :=
  p_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_536 t_1) p_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_770 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_2 p_2) p_2) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_2 p_2) p_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_771 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))) (thm_769 p_2) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or p_2 p_2) p_2) => thm_770 q_1 p_2 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_772 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_773 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (thm_772 q_1 p_2) (thm_772 q_1 p_2).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_774 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_775 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) thm_774 thm_774.

(; Theorem: |- ((= (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ;)

(; dict ;)

def thm_776 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) thm_183 thm_775.

(; Theorem: |- ((= \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_777 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)).

(; Theorem: |- ((= \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_778 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) :=
  p_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (thm_777 p_1) (thm_777 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_779 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)) thm_183 (thm_778 p_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q)) ;)

(; dict ;)

def thm_780 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or (hol.or p_2 p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_754 t3_1 t2_2 t1_3) q_1 p_2 p_2.

(; Theorem: |- ((= (= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q)))) (= ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q))) ;)

(; dict ;)

def thm_781 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1))) (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or p_2 (hol.or p_2 q_1)) (hol.or (hol.or p_2 p_2) q_1) thm_91 (thm_780 q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ p) q)) ;)

(; dict ;)

def thm_782 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 q_1) (hol.or p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.or p_2 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ((= ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q)) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_783 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1))) (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1)) (hol.or p_2 q_1) (hol.or p_2 q_1) (thm_781 q_1 p_2) (thm_782 q_1 p_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q)) ((Data.Bool.\/ p) q))) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_784 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1)) (thm_783 q_1 p_2).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool.\/ p) p))) (Data.Bool.\/ p)) ;)

(; dict ;)

def thm_785 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.or p_1 p_1)) (hol.or p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.or p_1 p_1) p_1 thm_343 (thm_769 p_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ p) p)) q)) ((Data.Bool.\/ p) q)) ;)

(; dict ;)

def thm_786 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.or p_2 p_2)) (hol.or p_2) q_1 q_1 (thm_785 p_2) (thm_199 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)) ;)

(; dict ;)

def thm_787 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.or p_2 p_2) q_1) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (thm_784 q_1 p_2) (thm_786 q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_788 : p_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => thm_787 q_2 p_1.

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_789 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))) (thm_779 p_1) (thm_788 p_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))) ;)

(; dict ;)

def thm_790 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))) (thm_771 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)) (thm_773 q_1 p_2) (hol.EQ_MP (hol.forall hol.bool (p_3 : hol.term hol.bool => hol.forall hol.bool (q_4 : hol.term hol.bool => hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_4)) (hol.or p_3 q_4)))) (hol.forall hol.bool (p_3 : hol.term hol.bool => hol.forall hol.bool (q_4 : hol.term hol.bool => hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_4)) (hol.or p_3 q_4)))) thm_776 thm_789 p_2 q_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))) ;)

(; dict ;)

def thm_791 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (thm_768 r_1 q_2 p_3) (thm_790 q_2 p_3).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))) ;)

(; dict ;)

def thm_792 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (thm_726 r_1 q_2 p_3) (thm_791 r_1 q_2 p_3).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))) ;)

(; dict ;)

def thm_793 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) (thm_718 r_1 q_2 p_3) (thm_792 r_1 q_2 p_3).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))) ;)

(; dict ;)

def thm_794 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) r_3) (hol.or p_2 (hol.or q_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 r_3)) (hol.or q_1 (hol.or p_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1))))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => r_3 : hol.term hol.bool => thm_793 r_3 q_1 p_2.

(; Theorem: |- (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q)))))))) ;)

(; dict ;)

def thm_795 : p_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))) (thm_711 q_2 p_1) (thm_794 q_2 p_1).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. ((Data.Bool./\ ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p))) ((Data.Bool./\ ((= ((Data.Bool.\/ ((Data.Bool.\/ p) q)) r)) ((Data.Bool.\/ p) ((Data.Bool.\/ q) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) ((Data.Bool.\/ q) r))) ((Data.Bool.\/ q) ((Data.Bool.\/ p) r)))) ((Data.Bool./\ ((= ((Data.Bool.\/ p) p)) p)) ((= ((Data.Bool.\/ p) ((Data.Bool.\/ p) q))) ((Data.Bool.\/ p) q))))))))) ;)

(; dict ;)

def thm_796 : hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2))))))))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_1 q_2) (hol.or q_2 p_1)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_1 q_2) r_3) (hol.or p_1 (hol.or q_2 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 (hol.or q_2 r_3)) (hol.or q_2 (hol.or p_1 r_3))) (hol.and (hol.eq hol.bool (hol.or p_1 p_1) p_1) (hol.eq hol.bool (hol.or p_1 (hol.or p_1 q_2)) (hol.or p_1 q_2)))))))) (thm_708 p_1) (thm_795 p_1).

(; Theorem: |- ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p)) ;)

(; dict ;)

def thm_797 : r_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) -> hol.proof (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) :=
  r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_2) r_1) (hol.or p_3 (hol.or q_2 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_2 r_1)) (hol.or q_2 (hol.or p_3 r_1))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_2)) (hol.or p_3 q_2))))) (hol.eq hol.bool (hol.or p_3 q_2) (hol.or q_2 p_3)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) q)) ((Data.Bool.\/ q) p)) ;)

(; dict ;)

def thm_798 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) (hol.witness hol.bool)) (hol.or p_2 (hol.or q_1 (hol.witness hol.bool)))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 (hol.witness hol.bool))) (hol.or q_1 (hol.or p_2 (hol.witness hol.bool)))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.EQ_MP (hol.forall hol.bool (p_3 : hol.term hol.bool => hol.forall hol.bool (q_4 : hol.term hol.bool => hol.forall hol.bool (r_5 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_3 q_4) (hol.or q_4 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_4) r_5) (hol.or p_3 (hol.or q_4 r_5))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_4 r_5)) (hol.or q_4 (hol.or p_3 r_5))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_4)) (hol.or p_3 q_4))))))))) (hol.forall hol.bool (p_3 : hol.term hol.bool => hol.forall hol.bool (q_4 : hol.term hol.bool => hol.forall hol.bool (r_5 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or p_3 q_4) (hol.or q_4 p_3)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_3 q_4) r_5) (hol.or p_3 (hol.or q_4 r_5))) (hol.and (hol.eq hol.bool (hol.or p_3 (hol.or q_4 r_5)) (hol.or q_4 (hol.or p_3 r_5))) (hol.and (hol.eq hol.bool (hol.or p_3 p_3) p_3) (hol.eq hol.bool (hol.or p_3 (hol.or p_3 q_4)) (hol.or p_3 q_4))))))))) thm_705 thm_796 p_2 q_1 (hol.witness hol.bool)) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.and (hol.eq hol.bool (hol.or (hol.or p_2 q_1) (hol.witness hol.bool)) (hol.or p_2 (hol.or q_1 (hol.witness hol.bool)))) (hol.and (hol.eq hol.bool (hol.or p_2 (hol.or q_1 (hol.witness hol.bool))) (hol.or q_1 (hol.or p_2 (hol.witness hol.bool)))) (hol.and (hol.eq hol.bool (hol.or p_2 p_2) p_2) (hol.eq hol.bool (hol.or p_2 (hol.or p_2 q_1)) (hol.or p_2 q_1)))))) => thm_797 (hol.witness hol.bool) q_1 p_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ;)

(; dict ;)

def thm_799 : __12201_1 : hol.term Number_2ENatural_2Enatural -> __12203_2 : hol.term Number_2ENatural_2Enatural -> __12202_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_3 __12203_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_1 __12203_2)) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_1 __12203_2) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_3 __12203_2)))) :=
  __12201_1 : hol.term Number_2ENatural_2Enatural => __12203_2 : hol.term Number_2ENatural_2Enatural => __12202_3 : hol.term Number_2ENatural_2Enatural => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (hol.eq hol.bool (hol.or p_2 q_1) (hol.or q_1 p_2)) (thm_702 q_1 p_2) (thm_798 q_1 p_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_1 __12203_2) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_3 __12203_2)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ;)

(; dict ;)

def thm_800 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2))) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (thm_700 __12202_2 __12201_3) (thm_799 __12201_3 __12203_1 __12202_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ;)

(; dict ;)

def thm_801 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => (r_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => thm_763 r_1 q_2 p_3) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ;)

(; dict ;)

def thm_802 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (thm_800 __12203_1 __12202_2 __12201_3) (thm_801 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))))) (= ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))))) ;)

(; dict ;)

def thm_803 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)))) (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) thm_91 (thm_802 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ;)

(; dict ;)

def thm_804 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12203_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2))))) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12203_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))))) ((= ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))))) ;)

(; dict ;)

def thm_805 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)))) (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (thm_803 __12203_1 __12202_2 __12201_3) (thm_804 __12202_2 __12203_1 __12201_3).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))))) Data.Bool.T) ;)

(; dict ;)

def thm_806 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12203_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2))))) hol.true) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12203_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => (x_1 : hol.term hol.bool => thm_130 x_1) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))))) Data.Bool.T) ;)

(; dict ;)

def thm_807 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) hol.true) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) hol.true (thm_805 __12203_1 __12202_2 __12201_3) (thm_806 __12202_2 __12203_1 __12201_3).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))))) ;)

(; dict ;)

def thm_808 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.SYM hol.bool (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) hol.true (thm_807 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) (Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203))))) ;)

(; dict ;)

def thm_809 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ((Number.Natural.< _12201) _12203))) ;)

(; dict ;)

def thm_810 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (thm_809 __12203_1 __12202_2 __12201_3) (thm_697 __12203_1 __12201_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ;)

(; dict ;)

def thm_811 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_723 t3_1 t2_2 t1_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ;)

(; dict ;)

def thm_812 : __12201_1 : hol.term Number_2ENatural_2Enatural -> __12203_2 : hol.term Number_2ENatural_2Enatural -> __12202_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_3 __12203_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_1 __12203_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_3 __12203_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_1 __12203_2))) :=
  __12201_1 : hol.term Number_2ENatural_2Enatural => __12203_2 : hol.term Number_2ENatural_2Enatural => __12202_3 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_3 __12203_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_1 __12203_2)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ;)

(; dict ;)

def thm_813 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2))) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (thm_700 __12202_2 __12201_3) (thm_812 __12201_3 __12203_1 __12202_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ;)

(; dict ;)

def thm_814 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (thm_813 __12203_1 __12202_2 __12201_3) (thm_813 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ;)

(; dict ;)

def thm_815 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (thm_811 __12203_1 __12202_2 __12201_3) (thm_814 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ((Number.Natural.< _12201) _12203))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)))) ;)

(; dict ;)

def thm_816 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (thm_810 __12203_1 __12202_2 __12201_3) (thm_815 __12203_1 __12202_2 __12201_3).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p)))))) ;)

(; dict ;)

def thm_817 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))))) :=
  hol.REFL hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p)))))) ;)

(; dict ;)

def thm_818 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))))) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) thm_817 thm_817.

(; Theorem: |- ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_819 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_820 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_819 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p))) (= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p))) ;)

(; dict ;)

def thm_821 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)).

(; Theorem: |- ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) Data.Bool.F)) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_822 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1)) hol.false) (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) Data.Bool.F))) ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_823 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false)) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (thm_821 p_1 q_2) (thm_822 q_2).

(; Theorem: |- ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_824 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1.

(; Theorem: |- ((= (= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p))) (= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_825 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) thm_91 (thm_824 p_1 q_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_826 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)).

(; Theorem: |- ((= ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_827 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (thm_825 p_1 q_2) (thm_826 q_2).

(; Theorem: |- ((= ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) Data.Bool.F))) ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_828 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false)) (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2))) (thm_823 p_1 q_2) (thm_827 p_1 q_2).

(; Theorem: |- ((= \lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q))) \lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q))) ;)

(; dict ;)

def thm_829 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1)) (__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__538_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_2 q_1) (hol.or (hol.not __538_2) q_1)).

(; Theorem: |- ((= (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) p)) (\lambda _538. ((= ((Data.Bool.==> _538) q)) ((Data.Bool.\/ (Data.Bool.~ _538)) q)) Data.Bool.F)) ;)

(; dict ;)

def thm_830 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) (__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_2) (hol.or (hol.not __538_3) q_2)) p_1 hol.false (thm_829 q_2) (thm_384 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_831 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_1) (hol.or (hol.not __538_3) q_1)) p_2) ((__538_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __538_3 q_1) (hol.or (hol.not __538_3) q_1)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) (thm_828 p_2 q_1) (thm_830 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_832 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.false q_2) (hol.or (hol.not hol.false) q_2)) (thm_831 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) q)) Data.Bool.T) ;)

(; dict ;)

def thm_833 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false q_1) hol.true) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_229 t_1) q_1.

(; Theorem: |- ((= (= ((Data.Bool.==> Data.Bool.F) q))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_834 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp hol.false q_1)) (hol.eq hol.bool hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp hol.false q_1) hol.true thm_91 (thm_833 q_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ Data.Bool.F))) (Data.Bool.\/ Data.Bool.T)) ;)

(; dict ;)

def thm_835 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not hol.false)) (hol.or hol.true)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not hol.false) hol.true thm_343 thm_14.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)) ((Data.Bool.\/ Data.Bool.T) q)) ;)

(; dict ;)

def thm_836 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) q_1) (hol.or hol.true q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.false)) (hol.or hol.true) q_1 q_1 thm_835 (thm_199 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) q)) Data.Bool.T) ;)

(; dict ;)

def thm_837 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true q_1) hol.true) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_518 t_1) q_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)) Data.Bool.T) ;)

(; dict ;)

def thm_838 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) q_1) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.false) q_1) (hol.or hol.true q_1) hol.true (thm_836 q_1) (thm_837 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_839 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (hol.eq hol.bool hol.true hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp hol.false q_1)) (hol.eq hol.bool hol.true) (hol.or (hol.not hol.false) q_1) hol.true (thm_834 q_1) (thm_838 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) Data.Bool.T) ;)

(; dict ;)

def thm_840 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (hol.eq hol.bool hol.true hol.true) hol.true (thm_839 q_1) thm_577.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_841 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) hol.true (thm_840 q_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)) ;)

(; dict ;)

def thm_842 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (thm_841 q_1) thm_3.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_843 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false q_1) (hol.or (hol.not hol.false) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_832 p_2 q_1 hyp_1) (thm_842 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_844 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_843 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p))) (= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p))) ;)

(; dict ;)

def thm_845 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)).

(; Theorem: |- ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_846 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1)) hol.true) (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) Data.Bool.T))) ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_847 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true)) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (thm_845 p_1 q_2) (thm_846 q_2).

(; Theorem: |- ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_848 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1.

(; Theorem: |- ((= (= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p))) (= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_849 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) thm_91 (thm_848 p_1 q_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_850 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)).

(; Theorem: |- ((= ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_851 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (thm_849 p_1 q_2) (thm_850 q_2).

(; Theorem: |- ((= ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) Data.Bool.T))) ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_852 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true)) (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2))) (thm_847 p_1 q_2) (thm_851 p_1 q_2).

(; Theorem: |- ((= \lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q))) \lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q))) ;)

(; dict ;)

def thm_853 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1)) (__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__536_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_2 q_1) (hol.or (hol.not __536_2) q_1)).

(; Theorem: |- ((= (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) p)) (\lambda _536. ((= ((Data.Bool.==> _536) q)) ((Data.Bool.\/ (Data.Bool.~ _536)) q)) Data.Bool.T)) ;)

(; dict ;)

def thm_854 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) (__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_2) (hol.or (hol.not __536_3) q_2)) p_1 hol.true (thm_853 q_2) (thm_438 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_855 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_1) (hol.or (hol.not __536_3) q_1)) p_2) ((__536_3 : hol.term hol.bool => hol.eq hol.bool (hol.imp __536_3 q_1) (hol.or (hol.not __536_3) q_1)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) (thm_852 p_2 q_1) (thm_854 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_856 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp p_1 q_2) (hol.or (hol.not p_1) q_2)) (hol.eq hol.bool (hol.imp hol.true q_2) (hol.or (hol.not hol.true) q_2)) (thm_855 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) q)) q) ;)

(; dict ;)

def thm_857 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true q_1) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_189 t_1) q_1.

(; Theorem: |- ((= (= ((Data.Bool.==> Data.Bool.T) q))) (= q)) ;)

(; dict ;)

def thm_858 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp hol.true q_1)) (hol.eq hol.bool q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp hol.true q_1) q_1 thm_91 (thm_857 q_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ Data.Bool.T))) (Data.Bool.\/ Data.Bool.F)) ;)

(; dict ;)

def thm_859 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not hol.true)) (hol.or hol.false)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not hol.true) hol.false thm_343 thm_13.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)) ((Data.Bool.\/ Data.Bool.F) q)) ;)

(; dict ;)

def thm_860 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) q_1) (hol.or hol.false q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.true)) (hol.or hol.false) q_1 q_1 thm_859 (thm_199 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) q)) q) ;)

(; dict ;)

def thm_861 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false q_1) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_526 t_1) q_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)) q) ;)

(; dict ;)

def thm_862 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) q_1) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.true) q_1) (hol.or hol.false q_1) q_1 (thm_860 q_1) (thm_861 q_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ((= q) q)) ;)

(; dict ;)

def thm_863 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (hol.eq hol.bool q_1 q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp hol.true q_1)) (hol.eq hol.bool q_1) (hol.or (hol.not hol.true) q_1) q_1 (thm_858 q_1) (thm_862 q_1).

(; Theorem: |- ((= ((= q) q)) Data.Bool.T) ;)

(; dict ;)

def thm_864 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool q_1 q_1) hol.true) :=
  q_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_130 x_1) q_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) Data.Bool.T) ;)

(; dict ;)

def thm_865 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (hol.eq hol.bool q_1 q_1) hol.true (thm_863 q_1) (thm_864 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_866 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) hol.true (thm_865 q_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) q)) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)) ;)

(; dict ;)

def thm_867 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (thm_866 q_1) thm_3.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_868 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true q_1) (hol.or (hol.not hol.true) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_856 p_2 q_1 hyp_1) (thm_867 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_869 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_868 q_1 p_2 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_870 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_871 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_448 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_870 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_872 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_869 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => thm_871 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.\/ (Data.Bool.~ p)) q)) ;)

(; dict ;)

def thm_873 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_844 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1))) => thm_872 q_1 p_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p))) ((Data.Bool.\/ (Data.Bool.~ ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p))) ;)

(; dict ;)

def thm_874 : p_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1)) (hol.or (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_820 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.or (hol.not p_2) q_1)) (thm_819 q_1 p_2) (thm_873 q_1 p_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_875 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_876 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_875 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p))) (= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p))) ;)

(; dict ;)

def thm_877 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)).

(; Theorem: |- ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_878 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1))) hol.false) (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) Data.Bool.F))) ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_879 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false)) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (thm_877 p_1 q_2) (thm_878 q_2).

(; Theorem: |- ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_880 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p))) (= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_881 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) thm_91 (thm_880 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_882 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))).

(; Theorem: |- ((= ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))))) ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_883 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (thm_881 p_1 q_2) (thm_882 q_2).

(; Theorem: |- ((= ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) Data.Bool.F))) ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_884 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false)) (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2)))) (thm_879 p_1 q_2) (thm_883 p_1 q_2).

(; Theorem: |- ((= \lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q)))) \lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_885 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1))) (__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__530_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_2 q_1)) (hol.or (hol.not __530_2) (hol.not q_1))).

(; Theorem: |- ((= (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) p)) (\lambda _530. ((= (Data.Bool.~ ((Data.Bool./\ _530) q))) ((Data.Bool.\/ (Data.Bool.~ _530)) (Data.Bool.~ q))) Data.Bool.F)) ;)

(; dict ;)

def thm_886 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) (__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_2)) (hol.or (hol.not __530_3) (hol.not q_2))) p_1 hol.false (thm_885 q_2) (thm_384 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_887 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_1)) (hol.or (hol.not __530_3) (hol.not q_1))) p_2) ((__530_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __530_3 q_1)) (hol.or (hol.not __530_3) (hol.not q_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) (thm_884 p_2 q_1) (thm_886 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_888 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.false q_2)) (hol.or (hol.not hol.false) (hol.not q_2))) (thm_887 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) q)) Data.Bool.F) ;)

(; dict ;)

def thm_889 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false q_1) hol.false) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_623 t_1) q_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_890 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.not hol.false)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.and hol.false q_1) hol.false thm_345 (thm_889 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) Data.Bool.T) ;)

(; dict ;)

def thm_891 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.not (hol.and hol.false q_1)) (hol.not hol.false) hol.true (thm_890 q_1) thm_14.

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q)))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_892 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.and hol.false q_1))) (hol.eq hol.bool hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.and hol.false q_1)) hol.true thm_91 (thm_891 q_1).

(; Theorem: |- ((= (Data.Bool.~ q)) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_893 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.not q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))) ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_894 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) (hol.not q_1)) (hol.or hol.true (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.false)) (hol.or hol.true) (hol.not q_1) (hol.not q_1) thm_835 (thm_893 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) Data.Bool.T) ;)

(; dict ;)

def thm_895 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true (hol.not q_1)) hol.true) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_518 t_1) (hol.not q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))) Data.Bool.T) ;)

(; dict ;)

def thm_896 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.false) (hol.not q_1)) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.false) (hol.not q_1)) (hol.or hol.true (hol.not q_1)) hol.true (thm_894 q_1) (thm_895 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_897 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (hol.eq hol.bool hol.true hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1))) (hol.eq hol.bool hol.true) (hol.or (hol.not hol.false) (hol.not q_1)) hol.true (thm_892 q_1) (thm_896 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) Data.Bool.T) ;)

(; dict ;)

def thm_898 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (hol.eq hol.bool hol.true hol.true) hol.true (thm_897 q_1) thm_577.

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_899 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) hol.true (thm_898 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.F) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_900 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (thm_899 q_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_901 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and hol.false q_1)) (hol.or (hol.not hol.false) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_888 p_2 q_1 hyp_1) (thm_900 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_902 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_901 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p))) (= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p))) ;)

(; dict ;)

def thm_903 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)).

(; Theorem: |- ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_904 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1))) hol.true) (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) Data.Bool.T))) ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_905 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true)) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (thm_903 p_1 q_2) (thm_904 q_2).

(; Theorem: |- ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_906 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p))) (= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_907 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) thm_91 (thm_906 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_908 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))).

(; Theorem: |- ((= ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))))) ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_909 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (thm_907 p_1 q_2) (thm_908 q_2).

(; Theorem: |- ((= ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) Data.Bool.T))) ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_910 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true)) (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2)))) (thm_905 p_1 q_2) (thm_909 p_1 q_2).

(; Theorem: |- ((= \lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q)))) \lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_911 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1))) (__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__528_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_2 q_1)) (hol.or (hol.not __528_2) (hol.not q_1))).

(; Theorem: |- ((= (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) p)) (\lambda _528. ((= (Data.Bool.~ ((Data.Bool./\ _528) q))) ((Data.Bool.\/ (Data.Bool.~ _528)) (Data.Bool.~ q))) Data.Bool.T)) ;)

(; dict ;)

def thm_912 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) (__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_2)) (hol.or (hol.not __528_3) (hol.not q_2))) p_1 hol.true (thm_911 q_2) (thm_438 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_913 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_1)) (hol.or (hol.not __528_3) (hol.not q_1))) p_2) ((__528_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and __528_3 q_1)) (hol.or (hol.not __528_3) (hol.not q_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) (thm_910 p_2 q_1) (thm_912 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_914 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and p_1 q_2)) (hol.or (hol.not p_1) (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.and hol.true q_2)) (hol.or (hol.not hol.true) (hol.not q_2))) (thm_913 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) q)) q) ;)

(; dict ;)

def thm_915 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true q_1) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_613 t_1) q_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_916 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.and hol.true q_1) q_1 thm_345 (thm_915 q_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q)))) (= (Data.Bool.~ q))) ;)

(; dict ;)

def thm_917 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.and hol.true q_1))) (hol.eq hol.bool (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.and hol.true q_1)) (hol.not q_1) thm_91 (thm_916 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))) ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_918 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) (hol.not q_1)) (hol.or hol.false (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.not hol.true)) (hol.or hol.false) (hol.not q_1) (hol.not q_1) thm_859 (thm_893 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_919 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false (hol.not q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_526 t_1) (hol.not q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_920 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not hol.true) (hol.not q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.not hol.true) (hol.not q_1)) (hol.or hol.false (hol.not q_1)) (hol.not q_1) (thm_918 q_1) (thm_919 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ((= (Data.Bool.~ q)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_921 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1))) (hol.eq hol.bool (hol.not q_1)) (hol.or (hol.not hol.true) (hol.not q_1)) (hol.not q_1) (thm_917 q_1) (thm_920 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ q)) (Data.Bool.~ q))) Data.Bool.T) ;)

(; dict ;)

def thm_922 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true) :=
  q_1 : hol.term hol.bool => (x_1 : hol.term hol.bool => thm_130 x_1) (hol.not q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) Data.Bool.T) ;)

(; dict ;)

def thm_923 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true (thm_921 q_1) (thm_922 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_924 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) hol.true (thm_923 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ Data.Bool.T) q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_925 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (thm_924 q_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_926 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and hol.true q_1)) (hol.or (hol.not hol.true) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_914 p_2 q_1 hyp_1) (thm_925 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_927 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_926 q_1 p_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_928 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_929 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_448 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_928 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_930 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_927 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => thm_929 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ p) q))) ((Data.Bool.\/ (Data.Bool.~ p)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_931 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_902 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1)))) => thm_930 q_1 p_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ;)

(; dict ;)

def thm_932 : p_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_876 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.and p_2 q_1)) (hol.or (hol.not p_2) (hol.not q_1))) (thm_875 q_1 p_2) (thm_931 q_1 p_2))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.< m) n))) ;)

(; dict ;)

def thm_933 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n)))) (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n)))) ;)

(; dict ;)

def thm_934 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) thm_343 (thm_933 n_1 m_2).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.<= n) p))) (Data.Bool.~ ((Number.Natural.<= n) p))) ;)

(; dict ;)

def thm_935 : p_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ;)

(; dict ;)

def thm_936 : p_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)) (thm_934 n_2 m_3) (thm_935 p_1 n_2).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ;)

(; dict ;)

def thm_937 : p_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (thm_932 p_1 n_2 m_3) (thm_936 p_1 n_2 m_3).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))))) (Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p))))) ;)

(; dict ;)

def thm_938 : p_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)))) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) thm_343 (thm_937 p_1 n_2 m_3).

(; Theorem: |- ((= ((Number.Natural.< m) p)) ((Number.Natural.< m) p)) ;)

(; dict ;)

def thm_939 : p_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_1)) :=
  p_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p))) ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p))) ;)

(; dict ;)

def thm_940 : p_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1)) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)))) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1) (thm_938 p_1 n_2 m_3) (thm_939 p_1 m_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p))) ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p))) ;)

(; dict ;)

def thm_941 : p_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> m_3 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1)) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1))) :=
  p_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => m_3 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1)) (hol.or (hol.not (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1)) (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_1)) (thm_874 p_1 n_2 m_3) (thm_940 p_1 n_2 m_3).

(; Theorem: |- ((= \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p))) \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p))) ;)

(; dict ;)

def thm_942 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_3)) (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_3))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_3)) (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_3)) (p_3 : hol.term Number_2ENatural_2Enatural => thm_941 p_3 n_1 m_2).

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))) (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p)))) ;)

(; dict ;)

def thm_943 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_3))) (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_3)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_3)) (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_3)) thm_314 (thm_942 n_1 m_2).

(; Theorem: |- ((= \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))) \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p)))) ;)

(; dict ;)

def thm_944 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))) (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))) (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))) (n_2 : hol.term Number_2ENatural_2Enatural => thm_943 n_2 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p))))) (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p))))) ;)

(; dict ;)

def thm_945 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))) (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))) thm_314 (thm_944 m_1).

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p))))) \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p))))) ;)

(; dict ;)

def thm_946 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))) (m_1 : hol.term Number_2ENatural_2Enatural => thm_945 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p)))))) ;)

(; dict ;)

def thm_947 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))) thm_314 thm_946.

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p)))))) ;)

(; dict ;)

def thm_948 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3)))))) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) thm_947 thm_817.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p))))) ;)

(; dict ;)

def thm_949 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< m) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< m) p))))) ;)

(; dict ;)

def thm_950 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) thm_948 (thm_949 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) n))) (Data.Bool.~ ((Number.Natural.<= n) p)))) ((Number.Natural.< _12201) p)))) ;)

(; dict ;)

def thm_951 : __12201_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_1 n_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_1 p_3)))) :=
  __12201_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) thm_818 (hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) thm_817 (thm_950 hyp_1)) __12201_1.

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) p)))) ((Number.Natural.< _12201) p))) ;)

(; dict ;)

def thm_952 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12201_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 p_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_2 p_3))) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12201_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) => thm_951 __12201_2 hyp_1 __12202_1.

(; Theorem: |- ((Data.Bool.\/ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ((Number.Natural.< _12201) _12203)) ;)

(; dict ;)

def thm_953 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hol.proof (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => thm_952 __12202_2 __12201_3 hyp_1 __12203_1.

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203))) ;)

(; dict ;)

def thm_954 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hol.proof (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hol.EQ_MP (hol.or (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1))) (thm_816 __12203_1 __12202_2 __12201_3) (thm_953 __12203_1 __12202_2 __12201_3 hyp_1).

(; Theorem: |- ((Data.Bool.\/ ((Number.Natural.< _12201) _12203)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< _12201) _12202))) (Data.Bool.~ ((Number.Natural.<= _12202) _12203)))) ;)

(; dict ;)

def thm_955 : __12202_1 : hol.term Number_2ENatural_2Enatural -> __12203_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hol.proof (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) :=
  __12202_1 : hol.term Number_2ENatural_2Enatural => __12203_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hol.EQ_MP (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)))) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2))) (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_2) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_1 __12203_2))))) (thm_808 __12203_2 __12202_1 __12201_3) thm_3) (thm_954 __12203_2 __12202_1 __12201_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< _12201) _12202)) ((Number.Natural.<= _12202) _12203))) ((Number.Natural.< _12201) _12203)) ;)

(; dict ;)

def thm_956 : __12203_1 : hol.term Number_2ENatural_2Enatural -> __12202_2 : hol.term Number_2ENatural_2Enatural -> __12201_3 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hol.proof (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) :=
  __12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hol.EQ_MP (hol.or (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)))) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (thm_699 __12202_2 __12203_1 __12201_3) (thm_955 __12202_2 __12203_1 __12201_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) ((Number.Natural.<= (m a)) (m b)))) ((Number.Natural.< (m y)) (m b))) ;)

(; dict ;)

def thm_957 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hol.proof (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => (__12203_1 : hol.term Number_2ENatural_2Enatural => __12202_2 : hol.term Number_2ENatural_2Enatural => __12201_3 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hol.EQ_MP (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12202_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12202_2 __12203_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12201_3 __12203_1)) (thm_495 __12203_1 __12202_2 __12201_3) (thm_956 __12203_1 __12202_2 __12201_3 hyp_1)) (m_4 b_1) (m_4 a_2) (m_4 y_3) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m a))) ;)

(; dict ;)

def thm_958 : A : hol.type -> a_1 : hol.term A -> y_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1))) :=
  A : hol.type => a_1 : hol.term A => y_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (p_1 : hol.term hol.bool => thm_471 p_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_2) (m_3 a_1)).

(; Theorem: |- ((Number.Natural.< (m y)) (m a)) ;)

(; dict ;)

def thm_959 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) -> hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) hyp_1.

(; Theorem: |- ((Number.Natural.< (m y)) (m a)) ;)

(; dict ;)

def thm_960 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) -> hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => hol.PROVE_HYP (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (thm_488 A b_1 a_2 y_3 m_4 hyp_1) (hyp_2 : hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) => thm_959 A b_1 a_2 y_3 m_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m a))) ;)

(; dict ;)

def thm_961 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) -> hol.proof (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => hyp_2 : hol.proof (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) => hol.EQ_MP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (thm_353 A a_2 y_3 m_4) (hol.EQ_MP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (thm_353 A a_2 y_3 m_4) (hol.EQ_MP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (thm_353 A a_2 y_3 m_4) (thm_960 A b_1 a_2 y_3 m_4 hyp_1))).

(; Theorem: |- ((= ((Number.Natural.<= (m a)) (m b))) ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_962 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) hyp_1.

(; Theorem: |- ((= ((Number.Natural.<= (m a)) (m b))) ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_963 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) => hol.PROVE_HYP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.eq hol.bool (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.EQ_MP (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (thm_958 A a_3 y_1 m_4) (thm_961 A b_2 a_3 y_1 m_4 hyp_1)) (hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) => thm_962 A y_1 b_2 a_3 m_4 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) ((Number.Natural.<= (m a)) (m b)))) ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_964 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (p_1 : hol.term hol.bool => thm_471 p_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)).

(; Theorem: |- ((Number.Natural.<= (m a)) (m b)) ;)

(; dict ;)

def thm_965 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) -> hol.proof (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) hyp_1.

(; Theorem: |- ((Number.Natural.<= (m a)) (m b)) ;)

(; dict ;)

def thm_966 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) -> hol.proof (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) => hol.PROVE_HYP (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (thm_487 A b_2 a_3 y_1 m_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) => thm_965 A y_1 b_2 a_3 m_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_967 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) -> hol.proof (hol.imp (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) => hyp_2 : hol.proof (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) => hol.EQ_MP (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (thm_169 A b_2 a_3 m_4) (hol.EQ_MP (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (thm_169 A b_2 a_3 m_4) (hol.EQ_MP (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (thm_169 A b_2 a_3 m_4) (thm_966 A y_1 b_2 a_3 m_4 hyp_1))).

(; Theorem: |- ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_968 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) -> hol.proof (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => hol.EQ_MP (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) (thm_963 A y_3 b_1 a_2 m_4 hyp_1) (hol.EQ_MP (hol.imp (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)) (thm_964 A b_1 a_2 m_4) (thm_967 A y_3 b_1 a_2 m_4 hyp_1)).

(; Theorem: |- ((Number.Natural.< (m y)) (m b)) ;)

(; dict ;)

def thm_969 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2))) -> hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2))) => thm_957 A b_2 a_1 y_3 m_4 hyp_1 (thm_968 A b_2 a_1 y_3 m_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) ((Number.Natural.< (m y)) (m b))) ;)

(; dict ;)

def thm_970 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2))) -> hol.proof (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2))) => hyp_3 : hol.proof (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2))) => hol.EQ_MP (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_2)) (thm_358 A b_2 y_3 m_4) (thm_969 A a_1 b_2 y_3 m_4 hyp_1 hyp_2).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_971 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) -> hol.proof hol.false :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => hol.EQ_MP (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)) hol.false) (thm_475 A b_1 y_3 m_4) (thm_492 A a_2 b_1 y_3 m_4 hyp_2) (hol.EQ_MP (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)) (thm_493 A b_1 y_3 m_4) (thm_970 A a_2 b_1 y_3 m_4 hyp_1 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_972 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) -> hol.proof (hol.imp (hol.not hol.false) hol.false) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => hyp_3 : hol.proof (hol.not hol.false) => hol.EQ_MP hol.false hol.false thm_473 (thm_971 A b_1 a_2 y_3 m_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) Data.Bool.F) ;)

(; dict ;)

def thm_973 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hol.proof (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) hol.false) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) => hol.EQ_MP (hol.imp (hol.not hol.false) hol.false) hol.false ((p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_374 p_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_373 p_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (hol.eq hol.bool (hol.imp (hol.not p_1) p_1) p_1) (thm_373 p_1) (thm_471 p_1)))) hol.false) (thm_972 A b_1 a_2 y_3 m_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.<= (m a)) (m b))) Data.Bool.F)) ((Data.Bool.==> ((Number.Natural.<= (m a)) (m b))) Data.Bool.F)) ;)

(; dict ;)

def thm_974 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL hol.bool (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.<= (m a)) (m b))) Data.Bool.F)) ((Data.Bool.==> ((Number.Natural.<= (m a)) (m b))) Data.Bool.F)) ;)

(; dict ;)

def thm_975 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (thm_974 A b_1 a_2 m_3) (thm_974 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) ((Data.Bool.==> ((Number.Natural.<= (m a)) (m b))) Data.Bool.F)) ;)

(; dict ;)

def thm_976 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (p_1 : hol.term hol.bool => thm_484 p_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) ((Data.Bool.==> ((Number.Natural.<= (m a)) (m b))) Data.Bool.F)) ;)

(; dict ;)

def thm_977 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (thm_363 A b_1 a_2 m_3) (thm_976 A b_1 a_2 m_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_978 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_979 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) hyp_1.

(; Theorem: |- (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_980 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => hol.PROVE_HYP (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_978 A b_1 a_2 m_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => thm_979 A b_1 a_2 m_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.<= (m a)) (m b))) Data.Bool.F) ;)

(; dict ;)

def thm_981 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => hol.EQ_MP (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (thm_977 A b_1 a_2 m_3) (hol.EQ_MP (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_363 A b_1 a_2 m_3) (hol.EQ_MP (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_363 A b_1 a_2 m_3) (thm_980 A b_1 a_2 m_3 hyp_1))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< _12198) _12197))) ((Number.Natural.<= _12197) _12198))) ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< _12198) _12197))) ((Number.Natural.<= _12197) _12198))) ;)

(; dict ;)

def thm_982 : __12197_1 : hol.term Number_2ENatural_2Enatural -> __12198_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2))) :=
  __12197_1 : hol.term Number_2ENatural_2Enatural => __12198_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< _12198) _12197))) ((Number.Natural.<= _12197) _12198))) ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< _12198) _12197))) ((Number.Natural.<= _12197) _12198))) ;)

(; dict ;)

def thm_983 : __12197_1 : hol.term Number_2ENatural_2Enatural -> __12198_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2))) :=
  __12197_1 : hol.term Number_2ENatural_2Enatural => __12198_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) (thm_982 __12197_1 __12198_2) (thm_982 __12197_1 __12198_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((Number.Natural.<= _12197) _12198)) ((Number.Natural.< _12198) _12197))) ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< _12198) _12197))) ((Number.Natural.<= _12197) _12198))) ;)

(; dict ;)

def thm_984 : __12198_1 : hol.term Number_2ENatural_2Enatural -> __12197_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1))) :=
  __12198_1 : hol.term Number_2ENatural_2Enatural => __12197_2 : hol.term Number_2ENatural_2Enatural => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => thm_587 b_1 a_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Number.Natural.<= _12197) _12198)) ((Number.Natural.< _12198) _12197))) ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< _12198) _12197))) ((Number.Natural.<= _12197) _12198))) ;)

(; dict ;)

def thm_985 : __12198_1 : hol.term Number_2ENatural_2Enatural -> __12197_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1))) :=
  __12198_1 : hol.term Number_2ENatural_2Enatural => __12197_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1)) (thm_984 __12198_1 __12197_2) (thm_982 __12197_2 __12198_1).

(; Theorem: |- ((= (Data.Bool.\/ ((Number.Natural.<= _12197) _12198))) (Data.Bool.\/ ((Number.Natural.<= _12197) _12198))) ;)

(; dict ;)

def thm_986 : __12198_1 : hol.term Number_2ENatural_2Enatural -> __12197_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1))) :=
  __12198_1 : hol.term Number_2ENatural_2Enatural => __12197_2 : hol.term Number_2ENatural_2Enatural => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1)).

(; Theorem: |- ((= ((Number.Natural.< _12198) _12197)) ((Number.Natural.< _12198) _12197)) ;)

(; dict ;)

def thm_987 : __12197_1 : hol.term Number_2ENatural_2Enatural -> __12198_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) :=
  __12197_1 : hol.term Number_2ENatural_2Enatural => __12198_2 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Number.Natural.<= _12197) _12198)) ((Number.Natural.< _12198) _12197))) ((Data.Bool.\/ ((Number.Natural.<= _12197) _12198)) ((Number.Natural.< _12198) _12197))) ;)

(; dict ;)

def thm_988 : __12198_1 : hol.term Number_2ENatural_2Enatural -> __12197_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2))) :=
  __12198_1 : hol.term Number_2ENatural_2Enatural => __12197_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2) (thm_986 __12198_1 __12197_2) (thm_987 __12197_2 __12198_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Number.Natural.<= _12197) _12198)) ((Number.Natural.< _12198) _12197))) ((Data.Bool.\/ ((Number.Natural.<= _12197) _12198)) ((Number.Natural.< _12198) _12197))) ;)

(; dict ;)

def thm_989 : __12198_1 : hol.term Number_2ENatural_2Enatural -> __12197_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2))) :=
  __12198_1 : hol.term Number_2ENatural_2Enatural => __12197_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) (thm_988 __12198_1 __12197_2) (thm_988 __12198_1 __12197_2).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_990 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hol.REFL hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_991 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_990 thm_990.

(; Theorem: |- ((= Number.Natural.<=) Number.Natural.<=) ;)

(; dict ;)

def thm_992 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))).

(; Theorem: |- ((= m) m) ;)

(; dict ;)

def thm_993 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural m_1 m_1) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural m_1.

(; Theorem: |- ((= (Number.Natural.<= m)) (Number.Natural.<= m)) ;)

(; dict ;)

def thm_994 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1)) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) m_1 m_1 thm_992 (thm_993 m_1).

(; Theorem: |- ((= n) n) ;)

(; dict ;)

def thm_995 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural n_1 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural n_1.

(; Theorem: |- ((= ((Number.Natural.<= m) n)) ((Number.Natural.<= m) n)) ;)

(; dict ;)

def thm_996 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2) n_1 n_1 (thm_994 m_2) (thm_995 n_1).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.<= m) n))) ;)

(; dict ;)

def thm_997 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool hol.not hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) thm_345 (thm_996 n_1 m_2).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n)))) (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n)))) ;)

(; dict ;)

def thm_998 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) thm_343 (thm_997 n_1 m_2).

(; Theorem: |- ((= (Number.Natural.< n)) (Number.Natural.< n)) ;)

(; dict ;)

def thm_999 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool))) n_1 n_1 thm_346 (thm_995 n_1).

(; Theorem: |- ((= ((Number.Natural.< n) m)) ((Number.Natural.< n) m)) ;)

(; dict ;)

def thm_1000 : m_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)) :=
  m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2) m_1 m_1 (thm_999 n_2) (thm_993 m_1).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< n) m))) (Data.Bool.~ ((Number.Natural.< n) m))) ;)

(; dict ;)

def thm_1001 : m_1 : hol.term Number_2ENatural_2Enatural -> n_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool hol.not hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1) thm_345 (thm_1000 m_1 n_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1002 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (thm_998 n_1 m_2) (thm_1001 m_2 n_1).

(; Theorem: |- ((= \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1003 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (n_2 : hol.term Number_2ENatural_2Enatural => thm_1002 n_2 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1004 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) thm_314 (thm_1003 m_1).

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1005 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => thm_1004 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1006 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_314 thm_1005.

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))))) (Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))))) ;)

(; dict ;)

def thm_1007 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_344 thm_1006.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1008 : hol.proof (hol.eq hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.APP_THM hol.bool hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_1007 thm_990.

(; Theorem: |- ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1009 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))).

(; Theorem: |- ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1010 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1009 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p))) (= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p))) ;)

(; dict ;)

def thm_1011 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)).

(; Theorem: |- ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) Data.Bool.F)) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1012 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1))) hol.false) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) Data.Bool.F))) ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1013 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false)) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (thm_1011 p_1 q_2) (thm_1012 q_2).

(; Theorem: |- ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1014 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p))) (= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))))) ;)

(; dict ;)

def thm_1015 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) thm_91 (thm_1014 p_1 q_2).

(; Theorem: |- ((= ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1016 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))).

(; Theorem: |- ((= ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))))) ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1017 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (thm_1015 p_1 q_2) (thm_1016 q_2).

(; Theorem: |- ((= ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) Data.Bool.F))) ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1018 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false)) (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2)))) (thm_1013 p_1 q_2) (thm_1017 p_1 q_2).

(; Theorem: |- ((= \lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q)))) \lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q)))) ;)

(; dict ;)

def thm_1019 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1))) (__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__554_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_2 q_1) (hol.and (hol.or __554_2 (hol.not q_1)) (hol.or (hol.not __554_2) q_1))).

(; Theorem: |- ((= (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) p)) (\lambda _554. ((= ((= _554) q)) ((Data.Bool./\ ((Data.Bool.\/ _554) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _554)) q))) Data.Bool.F)) ;)

(; dict ;)

def thm_1020 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) (__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_2) (hol.and (hol.or __554_3 (hol.not q_2)) (hol.or (hol.not __554_3) q_2))) p_1 hol.false (thm_1019 q_2) (thm_384 p_1 hyp_1).

(; Theorem: |- ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1021 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_1) (hol.and (hol.or __554_3 (hol.not q_1)) (hol.or (hol.not __554_3) q_1))) p_2) ((__554_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __554_3 q_1) (hol.and (hol.or __554_3 (hol.not q_1)) (hol.or (hol.not __554_3) q_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) (thm_1018 p_2 q_1) (thm_1020 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1022 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.false q_2) (hol.and (hol.or hol.false (hol.not q_2)) (hol.or (hol.not hol.false) q_2))) (thm_1021 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.F) q)) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1023 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_405 t_1) q_1.

(; Theorem: |- ((= (= ((= Data.Bool.F) q))) (= (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1024 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq hol.bool hol.false q_1)) (hol.eq hol.bool (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq hol.bool hol.false q_1) (hol.not q_1) thm_91 (thm_1023 q_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q)))) (Data.Bool./\ (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1025 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.or hol.false (hol.not q_1))) (hol.and (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.or hol.false (hol.not q_1)) (hol.not q_1) thm_344 (thm_919 q_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ((Data.Bool./\ (Data.Bool.~ q)) Data.Bool.T)) ;)

(; dict ;)

def thm_1026 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)) (hol.and (hol.not q_1) hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.or hol.false (hol.not q_1))) (hol.and (hol.not q_1)) (hol.or (hol.not hol.false) q_1) hol.true (thm_1025 q_1) (thm_838 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ q)) Data.Bool.T)) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1027 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not q_1) hol.true) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_618 t_1) (hol.not q_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1028 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)) (hol.and (hol.not q_1) hol.true) (hol.not q_1) (thm_1026 q_1) (thm_1027 q_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ((= (Data.Bool.~ q)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1029 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1)) (hol.eq hol.bool (hol.not q_1)) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)) (hol.not q_1) (thm_1024 q_1) (thm_1028 q_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) Data.Bool.T) ;)

(; dict ;)

def thm_1030 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true (thm_1029 q_1) (thm_922 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1031 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) hol.true (thm_1030 q_1).

(; Theorem: |- ((= ((= Data.Bool.F) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_1032 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (thm_1031 q_1) thm_3.

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1033 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false q_1) (hol.and (hol.or hol.false (hol.not q_1)) (hol.or (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1022 p_2 q_1 hyp_1) (thm_1032 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1034 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_1033 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p))) (= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p))) ;)

(; dict ;)

def thm_1035 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)).

(; Theorem: |- ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) Data.Bool.T)) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1036 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1))) hol.true) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) Data.Bool.T))) ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1037 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true)) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (thm_1035 p_1 q_2) (thm_1036 q_2).

(; Theorem: |- ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1038 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p))) (= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))))) ;)

(; dict ;)

def thm_1039 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) thm_91 (thm_1038 p_1 q_2).

(; Theorem: |- ((= ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1040 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))).

(; Theorem: |- ((= ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))))) ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1041 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (thm_1039 p_1 q_2) (thm_1040 q_2).

(; Theorem: |- ((= ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) Data.Bool.T))) ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1042 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true)) (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2)))) (thm_1037 p_1 q_2) (thm_1041 p_1 q_2).

(; Theorem: |- ((= \lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q)))) \lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q)))) ;)

(; dict ;)

def thm_1043 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1))) (__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__552_2 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_2 q_1) (hol.and (hol.or __552_2 (hol.not q_1)) (hol.or (hol.not __552_2) q_1))).

(; Theorem: |- ((= (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) p)) (\lambda _552. ((= ((= _552) q)) ((Data.Bool./\ ((Data.Bool.\/ _552) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ _552)) q))) Data.Bool.T)) ;)

(; dict ;)

def thm_1044 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) (__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_2) (hol.and (hol.or __552_3 (hol.not q_2)) (hol.or (hol.not __552_3) q_2))) p_1 hol.true (thm_1043 q_2) (thm_438 p_1 hyp_1).

(; Theorem: |- ((= ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1045 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_1) (hol.and (hol.or __552_3 (hol.not q_1)) (hol.or (hol.not __552_3) q_1))) p_2) ((__552_3 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool __552_3 q_1) (hol.and (hol.or __552_3 (hol.not q_1)) (hol.or (hol.not __552_3) q_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) (thm_1042 p_2 q_1) (thm_1044 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1046 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool p_1 q_2) (hol.and (hol.or p_1 (hol.not q_2)) (hol.or (hol.not p_1) q_2))) (hol.eq hol.bool (hol.eq hol.bool hol.true q_2) (hol.and (hol.or hol.true (hol.not q_2)) (hol.or (hol.not hol.true) q_2))) (thm_1045 q_2 p_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.T) q)) q) ;)

(; dict ;)

def thm_1047 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_395 t_1) q_1.

(; Theorem: |- ((= (= ((= Data.Bool.T) q))) (= q)) ;)

(; dict ;)

def thm_1048 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq hol.bool hol.true q_1)) (hol.eq hol.bool q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq hol.bool hol.true q_1) q_1 thm_91 (thm_1047 q_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q)))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1049 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.or hol.true (hol.not q_1))) (hol.and hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.or hol.true (hol.not q_1)) hol.true thm_344 (thm_895 q_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ((Data.Bool./\ Data.Bool.T) q)) ;)

(; dict ;)

def thm_1050 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)) (hol.and hol.true q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.or hol.true (hol.not q_1))) (hol.and hol.true) (hol.or (hol.not hol.true) q_1) q_1 (thm_1049 q_1) (thm_862 q_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) q) ;)

(; dict ;)

def thm_1051 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)) (hol.and hol.true q_1) q_1 (thm_1050 q_1) (thm_915 q_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ((= q) q)) ;)

(; dict ;)

def thm_1052 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (hol.eq hol.bool q_1 q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1)) (hol.eq hol.bool q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)) q_1 (thm_1048 q_1) (thm_1051 q_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) Data.Bool.T) ;)

(; dict ;)

def thm_1053 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (hol.eq hol.bool q_1 q_1) hol.true (thm_1052 q_1) (thm_864 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1054 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) hol.true (thm_1053 q_1).

(; Theorem: |- ((= ((= Data.Bool.T) q)) ((Data.Bool./\ ((Data.Bool.\/ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_1055 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (thm_1054 q_1) thm_3.

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1056 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true q_1) (hol.and (hol.or hol.true (hol.not q_1)) (hol.or (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1046 p_2 q_1 hyp_1) (thm_1055 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1057 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_1056 q_1 p_2 hyp_1.

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1058 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1059 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_448 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_1058 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1060 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1057 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => thm_1059 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= ((= p) q)) ((Data.Bool./\ ((Data.Bool.\/ p) (Data.Bool.~ q))) ((Data.Bool.\/ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1061 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1034 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1)))) => thm_1060 q_1 p_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))) ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= m) n)))) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1062 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1010 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (hol.eq hol.bool (hol.eq hol.bool p_2 q_1) (hol.and (hol.or p_2 (hol.not q_1)) (hol.or (hol.not p_2) q_1))) (thm_1009 q_1 p_2) (thm_1061 q_1 p_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1063 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) thm_344 (thm_1002 n_1 m_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= m) n)))) ((Number.Natural.<= m) n)) ;)

(; dict ;)

def thm_1064 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => (p_1 : hol.term hol.bool => thm_281 p_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= m) n)))) ((Number.Natural.<= m) n)) ;)

(; dict ;)

def thm_1065 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (thm_1064 n_1 m_2) (thm_996 n_1 m_2).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= m) n))))) (Data.Bool.\/ ((Number.Natural.<= m) n))) ;)

(; dict ;)

def thm_1066 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) thm_343 (thm_1065 n_1 m_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= m) n)))) ((Number.Natural.< n) m))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) ;)

(; dict ;)

def thm_1067 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.or (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2) (thm_1066 n_1 m_2) (thm_1000 m_2 n_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.~ ((Number.Natural.<= m) n)))) ((Number.Natural.< n) m)))) ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1068 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) (hol.or (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (thm_1063 n_1 m_2) (thm_1067 n_1 m_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))) ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1069 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (hol.not (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (thm_1062 n_1 m_2) (thm_1068 n_1 m_2).

(; Theorem: |- ((= \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))) \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1070 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (n_2 : hol.term Number_2ENatural_2Enatural => thm_1069 n_2 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m)))) (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1071 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) thm_314 (thm_1070 m_1).

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m)))) \lambda m. (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1072 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => thm_1071 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1073 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_314 thm_1072.

(; Theorem: |- ((= (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1074 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) n_1) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) n_1.

(; Theorem: |- ((= (Data.Bool./\ (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n))) (Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1075 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) n_1)) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) n_1) (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) thm_344 (thm_1074 n_1 m_2).

(; Theorem: |- ((= (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n)) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) ;)

(; dict ;)

def thm_1076 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)) n_1) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)) n_1.

(; Theorem: |- ((= ((Data.Bool./\ (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)) (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n))) ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1077 : n_1 : hol.term Number_2ENatural_2Enatural -> m_2 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) n_1) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)) n_1)) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => m_2 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) n_1)) (hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)))) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)) n_1) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 m_2)) (thm_1075 n_1 m_2) (thm_1076 n_1 m_2).

(; Theorem: |- ((= \lambda n. ((Data.Bool./\ (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)) (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n))) \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1078 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (n_2 : hol.term Number_2ENatural_2Enatural => thm_1077 n_2 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool./\ (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)) (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n)))) (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1079 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) thm_314 (thm_1078 m_1).

(; Theorem: |- ((= (= (Data.Bool.! \lambda n. ((Data.Bool./\ (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)) (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n))))) (= (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1080 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_91 (thm_1079 m_1).

(; Theorem: |- ((= \lambda n. (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)) \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1081 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (n_2 : hol.term Number_2ENatural_2Enatural => thm_1074 n_2 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n))) (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1082 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) thm_314 (thm_1081 m_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)))) (Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1083 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_344 (thm_1082 m_1).

(; Theorem: |- ((= \lambda n. (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n)) \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) ;)

(; dict ;)

def thm_1084 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)) (n_2 : hol.term Number_2ENatural_2Enatural => thm_1076 n_2 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1085 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)) thm_314 (thm_1084 m_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n))) (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n)))) ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1086 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (thm_1083 m_1) (thm_1085 m_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda n. ((Data.Bool./\ (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)) (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n)))) ((Data.Bool./\ (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n))) (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n))))) ((= (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1087 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (thm_1080 m_1) (thm_1086 m_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ;)

(; dict ;)

def thm_1088 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda n. ((Data.Bool./\ (p n)) (q n)))) ((Data.Bool./\ (Data.Bool.! \lambda n. (p n))) (Data.Bool.! \lambda n. (q n))))) ((= (Data.Bool.! \lambda n. ((Data.Bool./\ (p n)) (q n)))) ((Data.Bool./\ (Data.Bool.! \lambda n. (p n))) (Data.Bool.! \lambda n. (q n))))) ;)

(; dict ;)

def thm_1089 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (n_3 : hol.term A => hol.and (p_2 n_3) (q_1 n_3))) (hol.and (hol.forall A (n_3 : hol.term A => p_2 n_3)) (hol.forall A (n_3 : hol.term A => q_1 n_3)))) (hol.eq hol.bool (hol.forall A (n_3 : hol.term A => hol.and (p_2 n_3) (q_1 n_3))) (hol.and (hol.forall A (n_3 : hol.term A => p_2 n_3)) (hol.forall A (n_3 : hol.term A => q_1 n_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (n_3 : hol.term A => hol.and (p_2 n_3) (q_1 n_3))) (hol.and (hol.forall A (n_3 : hol.term A => p_2 n_3)) (hol.forall A (n_3 : hol.term A => q_1 n_3)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ((= (Data.Bool.! \lambda n. ((Data.Bool./\ (p n)) (q n)))) ((Data.Bool./\ (Data.Bool.! \lambda n. (p n))) (Data.Bool.! \lambda n. (q n))))) ;)

(; dict ;)

def thm_1090 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (n_3 : hol.term A => hol.and (p_2 n_3) (q_1 n_3))) (hol.and (hol.forall A (n_3 : hol.term A => p_2 n_3)) (hol.forall A (n_3 : hol.term A => q_1 n_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (n_3 : hol.term A => hol.and (p_2 n_3) (q_1 n_3))) (hol.and (hol.forall A (n_3 : hol.term A => p_2 n_3)) (hol.forall A (n_3 : hol.term A => q_1 n_3)))) (thm_1088 A q_1 p_2) (thm_1089 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ;)

(; dict ;)

def thm_1091 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_1 x_3) (q_2 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_1 x_3)) (hol.forall A (x_3 : hol.term A => q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_34 A p_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x)))) ;)

(; dict ;)

def thm_1092 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1091 A p_2 q_1.

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool./\ (p n)) (q n)))) ((Data.Bool./\ (Data.Bool.! \lambda n. (p n))) (Data.Bool.! \lambda n. (q n)))) ;)

(; dict ;)

def thm_1093 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (n_3 : hol.term A => hol.and (p_2 n_3) (q_1 n_3))) (hol.and (hol.forall A (n_3 : hol.term A => p_2 n_3)) (hol.forall A (n_3 : hol.term A => q_1 n_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (n_3 : hol.term A => hol.and (p_2 n_3) (q_1 n_3))) (hol.and (hol.forall A (n_3 : hol.term A => p_2 n_3)) (hol.forall A (n_3 : hol.term A => q_1 n_3)))) (thm_1090 A q_1 p_2) (thm_1092 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool./\ (p n)) (q n)))) ((Data.Bool./\ (Data.Bool.! \lambda n. (p n))) (Data.Bool.! \lambda n. (q n)))) ;)

(; dict ;)

def thm_1094 : q_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_2 n_3) (q_1 n_3))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => p_2 n_3)) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => q_1 n_3)))) :=
  q_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1093 A q_1 p_2) Number_2ENatural_2Enatural q_1 p_2.

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool./\ (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n)) (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n)))) ((Data.Bool./\ (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))) n))) (Data.Bool.! \lambda n. (\lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)) n)))) ;)

(; dict ;)

def thm_1095 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => (q_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_1094 q_1 p_2) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1096 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2) ((n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1))) n_2)) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_1)) n_2)))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (thm_1087 m_1) (thm_1095 m_1).

(; Theorem: |- ((= \lambda m. (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) \lambda m. ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1097 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => thm_1096 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1098 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_314 thm_1097.

(; Theorem: |- ((= (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)) (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1099 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1.

(; Theorem: |- ((= (Data.Bool./\ (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m))) (Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1100 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_344 (thm_1099 m_1).

(; Theorem: |- ((= (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m)) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1101 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural hol.bool (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1.

(; Theorem: |- ((= ((Data.Bool./\ (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)) (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m))) ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1102 : m_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  m_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM hol.bool hol.bool (hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (thm_1100 m_1) (thm_1101 m_1).

(; Theorem: |- ((= \lambda m. ((Data.Bool./\ (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)) (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m))) \lambda m. ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1103 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)) (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)) (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => thm_1102 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)) (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m)))) (Data.Bool.! \lambda m. ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1104 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)) (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_314 thm_1103.

(; Theorem: |- ((= (= (Data.Bool.! \lambda m. ((Data.Bool./\ (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)) (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m))))) (= (Data.Bool.! \lambda m. ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))))) ;)

(; dict ;)

def thm_1105 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_91 thm_1104.

(; Theorem: |- ((= \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)) \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1106 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (m_1 : hol.term Number_2ENatural_2Enatural => thm_1099 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1107 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_314 thm_1106.

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)))) (Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))))) ;)

(; dict ;)

def thm_1108 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_344 thm_1107.

(; Theorem: |- ((= \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m)) \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1109 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (m_1 : hol.term Number_2ENatural_2Enatural => thm_1101 m_1).

(; Theorem: |- ((= (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1110 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) thm_314 thm_1109.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m))) (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m)))) ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1111 : hol.proof (hol.eq hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.APP_THM hol.bool hol.bool (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) thm_1108 thm_1110.

(; Theorem: |- ((= ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)) (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m)))) ((Data.Bool./\ (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m))) (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m))))) ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))))) ;)

(; dict ;)

def thm_1112 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))) :=
  hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_1105 thm_1111.

(; Theorem: |- ((= ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (p m)) (q m)))) ((Data.Bool./\ (Data.Bool.! \lambda m. (p m))) (Data.Bool.! \lambda m. (q m))))) ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (p m)) (q m)))) ((Data.Bool./\ (Data.Bool.! \lambda m. (p m))) (Data.Bool.! \lambda m. (q m))))) ;)

(; dict ;)

def thm_1113 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (m_3 : hol.term A => hol.and (p_2 m_3) (q_1 m_3))) (hol.and (hol.forall A (m_3 : hol.term A => p_2 m_3)) (hol.forall A (m_3 : hol.term A => q_1 m_3)))) (hol.eq hol.bool (hol.forall A (m_3 : hol.term A => hol.and (p_2 m_3) (q_1 m_3))) (hol.and (hol.forall A (m_3 : hol.term A => p_2 m_3)) (hol.forall A (m_3 : hol.term A => q_1 m_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (m_3 : hol.term A => hol.and (p_2 m_3) (q_1 m_3))) (hol.and (hol.forall A (m_3 : hol.term A => p_2 m_3)) (hol.forall A (m_3 : hol.term A => q_1 m_3)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool./\ (p x)) (q x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda x. (q x))))) ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (p m)) (q m)))) ((Data.Bool./\ (Data.Bool.! \lambda m. (p m))) (Data.Bool.! \lambda m. (q m))))) ;)

(; dict ;)

def thm_1114 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (m_3 : hol.term A => hol.and (p_2 m_3) (q_1 m_3))) (hol.and (hol.forall A (m_3 : hol.term A => p_2 m_3)) (hol.forall A (m_3 : hol.term A => q_1 m_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (m_3 : hol.term A => hol.and (p_2 m_3) (q_1 m_3))) (hol.and (hol.forall A (m_3 : hol.term A => p_2 m_3)) (hol.forall A (m_3 : hol.term A => q_1 m_3)))) (thm_1088 A q_1 p_2) (thm_1113 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (p m)) (q m)))) ((Data.Bool./\ (Data.Bool.! \lambda m. (p m))) (Data.Bool.! \lambda m. (q m)))) ;)

(; dict ;)

def thm_1115 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (m_3 : hol.term A => hol.and (p_2 m_3) (q_1 m_3))) (hol.and (hol.forall A (m_3 : hol.term A => p_2 m_3)) (hol.forall A (m_3 : hol.term A => q_1 m_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.and (p_2 x_3) (q_1 x_3))) (hol.and (hol.forall A (x_3 : hol.term A => p_2 x_3)) (hol.forall A (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (hol.forall A (m_3 : hol.term A => hol.and (p_2 m_3) (q_1 m_3))) (hol.and (hol.forall A (m_3 : hol.term A => p_2 m_3)) (hol.forall A (m_3 : hol.term A => q_1 m_3)))) (thm_1114 A q_1 p_2) (thm_1092 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (p m)) (q m)))) ((Data.Bool./\ (Data.Bool.! \lambda m. (p m))) (Data.Bool.! \lambda m. (q m)))) ;)

(; dict ;)

def thm_1116 : q_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.and (p_2 m_3) (q_1 m_3))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => p_2 m_3)) (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => q_1 m_3)))) :=
  q_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1115 A q_1 p_2) Number_2ENatural_2Enatural q_1 p_2.

(; Theorem: |- ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m)) (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m)))) ((Data.Bool./\ (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) m))) (Data.Bool.! \lambda m. (\lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))) m)))) ;)

(; dict ;)

def thm_1117 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)))) :=
  (q_1 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => p_2 : hol.term (hol.arr Number_2ENatural_2Enatural hol.bool) => thm_1116 q_1 p_2) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))).

(; Theorem: |- ((= (Data.Bool.! \lambda m. ((Data.Bool./\ (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m))))) (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1118 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.EQ_MP (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1) ((m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) m_1)) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2))) m_1)))) (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) thm_1112 thm_1117.

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1119 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.and (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_1098 thm_1118.

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))) ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1120 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_1119 thm_1008.

(; Theorem: |- ((= (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1121 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.and (hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_1073 thm_1120.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1122 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.<= m) n))) (Data.Bool.~ ((Number.Natural.< n) m)))))) (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1123 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) -> hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_1121 (thm_1122 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1124 : hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  hyp_1 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_211 p_1 q_2 hyp_1) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= m) n)) ((Number.Natural.< n) m)))) ;)

(; dict ;)

def thm_1125 : hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) :=
  hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) => hol.PROVE_HYP (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) (hol.EQ_MP (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_1008 (thm_1123 hyp_1)) (hyp_2 : hol.proof (hol.and (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) => thm_1124 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda n. ((Data.Bool.\/ ((Number.Natural.<= _12197) n)) ((Number.Natural.< n) _12197))) ;)

(; dict ;)

def thm_1126 : __12197_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 n_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 __12197_1))) :=
  __12197_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) => hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) thm_991 (thm_1125 hyp_1) __12197_1.

(; Theorem: |- ((Data.Bool.\/ ((Number.Natural.<= _12197) _12198)) ((Number.Natural.< _12198) _12197)) ;)

(; dict ;)

def thm_1127 : __12198_1 : hol.term Number_2ENatural_2Enatural -> __12197_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) -> hol.proof (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_2 __12198_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_1 __12197_2)) :=
  __12198_1 : hol.term Number_2ENatural_2Enatural => __12197_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) => thm_1126 __12197_2 hyp_1 __12198_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< _12198) _12197))) ((Number.Natural.<= _12197) _12198)) ;)

(; dict ;)

def thm_1128 : __12197_1 : hol.term Number_2ENatural_2Enatural -> __12198_2 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) -> hol.proof (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) :=
  __12197_1 : hol.term Number_2ENatural_2Enatural => __12198_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) => hol.EQ_MP (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) (thm_985 __12198_2 __12197_1) (hol.EQ_MP (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (hol.or (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (thm_989 __12198_2 __12197_1) (thm_1127 __12198_2 __12197_1 hyp_1)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m b)) (m a)))) ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_1129 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hol.proof (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_1) (m_3 b_2))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => (__12197_1 : hol.term Number_2ENatural_2Enatural => __12198_2 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) => hol.EQ_MP (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12198_2 __12197_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12197_1 __12198_2)) (thm_983 __12197_1 __12198_2) (thm_1128 __12197_1 __12198_2 hyp_1)) (m_3 a_1) (m_3 b_2) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_1130 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_1131 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_1130 p_1) (thm_1130 p_1).

(; Theorem: |- ((= (= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p))) (= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p))) ;)

(; dict ;)

def thm_1132 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1)) (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1)).

(; Theorem: |- ((= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) Data.Bool.F)) ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F))) ;)

(; dict ;)

def thm_1133 : hol.proof (hol.eq hol.bool ((__622_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_1 (hol.not __622_1)) (hol.not __622_1)) hol.false) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false))) :=
  hol.BETA_CONV hol.bool hol.bool (__622_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_1 (hol.not __622_1)) (hol.not __622_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p)) (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) Data.Bool.F))) ((= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p)) ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F)))) ;)

(; dict ;)

def thm_1134 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) hol.false)) (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1)) (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1)) ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) hol.false) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (thm_1132 p_1) thm_1133.

(; Theorem: |- ((= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p)) ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_1135 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1.

(; Theorem: |- ((= (= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p))) (= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p)))) ;)

(; dict ;)

def thm_1136 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) thm_91 (thm_1135 p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F))) ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F))) ;)

(; dict ;)

def thm_1137 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false))) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)).

(; Theorem: |- ((= ((= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p)) ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F)))) ((= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F)))) ;)

(; dict ;)

def thm_1138 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (thm_1136 p_1) thm_1137.

(; Theorem: |- ((= ((= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p)) (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) Data.Bool.F))) ((= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F)))) ;)

(; dict ;)

def thm_1139 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) hol.false)) (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false))) (thm_1134 p_1) (thm_1138 p_1).

(; Theorem: |- ((= \lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622))) \lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622))) ;)

(; dict ;)

def thm_1140 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__622_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_1 (hol.not __622_1)) (hol.not __622_1)) (__622_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_1 (hol.not __622_1)) (hol.not __622_1))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (__622_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_1 (hol.not __622_1)) (hol.not __622_1)).

(; Theorem: |- ((= (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) p)) (\lambda _622. ((= ((Data.Bool.==> _622) (Data.Bool.~ _622))) (Data.Bool.~ _622)) Data.Bool.F)) ;)

(; dict ;)

def thm_1141 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) hol.false)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) (__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1 hol.false thm_1140 (thm_384 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F))) ;)

(; dict ;)

def thm_1142 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false))) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) p_1) ((__622_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __622_2 (hol.not __622_2)) (hol.not __622_2)) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false))) (thm_1139 p_1) (thm_1141 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F))) ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_1143 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (thm_1142 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_1144 : hol.proof (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) hol.true) :=
  (t_1 : hol.term hol.bool => thm_229 t_1) (hol.not hol.false).

(; Theorem: |- ((= (= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F)))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_1145 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false))) (hol.eq hol.bool hol.true)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp hol.false (hol.not hol.false)) hol.true thm_91 thm_1144.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F))) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_1146 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (hol.eq hol.bool hol.true hol.true)) :=
  hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false))) (hol.eq hol.bool hol.true) (hol.not hol.false) hol.true thm_1145 thm_14.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_1147 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) hol.true) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (hol.eq hol.bool hol.true hol.true) hol.true thm_1146 thm_577.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F))) ;)

(; dict ;)

def thm_1148 : hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false))) :=
  hol.SYM hol.bool (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) hol.true thm_1147.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) (Data.Bool.~ Data.Bool.F))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_1149 : hol.proof (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) :=
  hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) thm_1148 thm_3.

(; Theorem: |- ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p)) ;)

(; dict ;)

def thm_1150 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false (hol.not hol.false)) (hol.not hol.false)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_1143 p_1 hyp_1) thm_1149.

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_1151 : p_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => thm_1150 p_1 hyp_1.

(; Theorem: |- ((= (= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p))) (= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p))) ;)

(; dict ;)

def thm_1152 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1)) (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1)).

(; Theorem: |- ((= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T))) ;)

(; dict ;)

def thm_1153 : hol.proof (hol.eq hol.bool ((__620_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_1 (hol.not __620_1)) (hol.not __620_1)) hol.true) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true))) :=
  hol.BETA_CONV hol.bool hol.bool (__620_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_1 (hol.not __620_1)) (hol.not __620_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p)) (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) Data.Bool.T))) ((= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p)) ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T)))) ;)

(; dict ;)

def thm_1154 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) hol.true)) (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1)) (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1)) ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) hol.true) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (thm_1152 p_1) thm_1153.

(; Theorem: |- ((= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p)) ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_1155 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1.

(; Theorem: |- ((= (= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p))) (= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p)))) ;)

(; dict ;)

def thm_1156 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) thm_91 (thm_1155 p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T))) ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T))) ;)

(; dict ;)

def thm_1157 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true))) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)).

(; Theorem: |- ((= ((= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p)) ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T)))) ((= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T)))) ;)

(; dict ;)

def thm_1158 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (thm_1156 p_1) thm_1157.

(; Theorem: |- ((= ((= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p)) (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) Data.Bool.T))) ((= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T)))) ;)

(; dict ;)

def thm_1159 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)))) :=
  p_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) hol.true)) (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true))) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true))) (thm_1154 p_1) (thm_1158 p_1).

(; Theorem: |- ((= \lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620))) \lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620))) ;)

(; dict ;)

def thm_1160 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__620_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_1 (hol.not __620_1)) (hol.not __620_1)) (__620_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_1 (hol.not __620_1)) (hol.not __620_1))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (__620_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_1 (hol.not __620_1)) (hol.not __620_1)).

(; Theorem: |- ((= (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) p)) (\lambda _620. ((= ((Data.Bool.==> _620) (Data.Bool.~ _620))) (Data.Bool.~ _620)) Data.Bool.T)) ;)

(; dict ;)

def thm_1161 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) hol.true)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) (__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1 hol.true thm_1160 (thm_438 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T))) ;)

(; dict ;)

def thm_1162 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true))) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) p_1) ((__620_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp __620_2 (hol.not __620_2)) (hol.not __620_2)) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true))) (thm_1159 p_1) (thm_1161 p_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T))) ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_1163 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (thm_1162 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T)) ;)

(; dict ;)

def thm_1164 : hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) :=
  (t_1 : hol.term hol.bool => thm_189 t_1) (hol.not hol.true).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) Data.Bool.F) ;)

(; dict ;)

def thm_1165 : hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) hol.false) :=
  hol.TRANS hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true) hol.false thm_1164 thm_13.

(; Theorem: |- ((= (= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T)))) (= Data.Bool.F)) ;)

(; dict ;)

def thm_1166 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true))) (hol.eq hol.bool hol.false)) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp hol.true (hol.not hol.true)) hol.false thm_91 thm_1165.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T))) ((= Data.Bool.F) Data.Bool.F)) ;)

(; dict ;)

def thm_1167 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (hol.eq hol.bool hol.false hol.false)) :=
  hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true))) (hol.eq hol.bool hol.false) (hol.not hol.true) hol.false thm_1166 thm_13.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T))) Data.Bool.T) ;)

(; dict ;)

def thm_1168 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) hol.true) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (hol.eq hol.bool hol.false hol.false) hol.true thm_1167 thm_671.

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ Data.Bool.T))) ;)

(; dict ;)

def thm_1169 : hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true))) :=
  hol.SYM hol.bool (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) hol.true thm_1168.

(; Theorem: |- ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p)) ;)

(; dict ;)

def thm_1170 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_1163 p_1 hyp_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.imp hol.true (hol.not hol.true)) (hol.not hol.true)) thm_1169 thm_3).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p))) ;)

(; dict ;)

def thm_1171 : p_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => thm_1170 p_1 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p)) ;)

(; dict ;)

def thm_1172 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) -> hol.proof (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p)) ;)

(; dict ;)

def thm_1173 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) -> hol.proof (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_448 p_1) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool p_1 hol.false)) => thm_1172 p_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p)) ;)

(; dict ;)

def thm_1174 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) -> hol.proof (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_1171 p_1) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.true) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) => thm_1173 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> p) (Data.Bool.~ p))) (Data.Bool.~ p)) ;)

(; dict ;)

def thm_1175 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) :=
  p_1 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_1151 p_1) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_1 hol.false) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1))) => thm_1174 p_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< (m b)) (m a))) (Data.Bool.~ ((Number.Natural.< (m b)) (m a))))) (Data.Bool.~ ((Number.Natural.< (m b)) (m a)))) ;)

(; dict ;)

def thm_1176 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_1131 p_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_1130 p_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (hol.eq hol.bool (hol.imp p_1 (hol.not p_1)) (hol.not p_1)) (thm_1130 p_1) (thm_1175 p_1)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< (m b)) (m a)))) (Data.Bool.~ ((Number.Natural.< (m b)) (m a)))) ;)

(; dict ;)

def thm_1177 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< (m b)) (m a)))) (Data.Bool.~ ((Number.Natural.< (m b)) (m a)))) ;)

(; dict ;)

def thm_1178 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) (thm_1177 A a_1 b_2 m_3) (thm_1177 A a_1 b_2 m_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m _12199)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a))))) ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m _12199)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a))))) ;)

(; dict ;)

def thm_1179 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> __12199_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1))))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m _12199)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a))))) ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m _12199)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a))))) ;)

(; dict ;)

def thm_1180 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> __12199_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1))))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) (thm_1179 A a_1 b_2 __12199_3 m_4) (thm_1179 A a_1 b_2 __12199_3 m_4).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a)))) ((Number.Natural.< (m _12199)) (m b)))) ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m _12199)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a))))) ;)

(; dict ;)

def thm_1181 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> __12199_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (b_1 : hol.term hol.bool => a_2 : hol.term hol.bool => thm_587 b_1 a_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a)))) ((Number.Natural.< (m _12199)) (m b)))) ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m _12199)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a))))) ;)

(; dict ;)

def thm_1182 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> __12199_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2)))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2)))) (thm_1181 A b_1 a_2 __12199_3 m_4) (thm_1179 A a_2 b_1 __12199_3 m_4).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a))))) (Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a))))) ;)

(; dict ;)

def thm_1183 : A : hol.type -> a_1 : hol.term A -> __12199_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 __12199_2) (m_3 a_1)))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 __12199_2) (m_3 a_1))))) :=
  A : hol.type => a_1 : hol.term A => __12199_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 __12199_2) (m_3 a_1)))).

(; Theorem: |- ((= ((Number.Natural.< (m _12199)) (m b))) ((Number.Natural.< (m _12199)) (m b))) ;)

(; dict ;)

def thm_1184 : A : hol.type -> b_1 : hol.term A -> __12199_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 __12199_2) (m_3 b_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 __12199_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => __12199_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.REFL hol.bool (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 __12199_2) (m_3 b_1)).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a)))) ((Number.Natural.< (m _12199)) (m b)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a)))) ((Number.Natural.< (m _12199)) (m b)))) ;)

(; dict ;)

def thm_1185 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> __12199_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2)))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2)))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1)) (thm_1183 A a_2 __12199_3 m_4) (thm_1184 A b_1 __12199_3 m_4).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a)))) ((Number.Natural.< (m _12199)) (m b)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a)))) ((Number.Natural.< (m _12199)) (m b)))) ;)

(; dict ;)

def thm_1186 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> __12199_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) (thm_1185 A b_1 a_2 __12199_3 m_4) (thm_1185 A b_1 a_2 __12199_3 m_4).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_1187 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_1188 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => hol.PROVE_HYP (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (thm_978 A b_1 a_2 m_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => thm_1187 A b_1 a_2 m_3 hyp_2).

(; Theorem: |- ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a)))) ((Number.Natural.< (m _12199)) (m b))) ;)

(; dict ;)

def thm_1189 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> __12199_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) -> hol.proof (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) => hol.EQ_MP (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_1)))) (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_1)))) (thm_361 A b_1 a_2 m_4) (thm_1188 A b_1 a_2 m_4 hyp_1) __12199_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m _12199)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m _12199)) (m a)))) ;)

(; dict ;)

def thm_1190 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> __12199_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2)))) -> hol.proof (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2)))) => hol.EQ_MP (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) (thm_1182 A b_2 a_1 __12199_3 m_4) (hol.EQ_MP (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (thm_1186 A b_2 a_1 __12199_3 m_4) (thm_1189 A b_2 a_1 __12199_3 m_4 hyp_1)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.< (m b)) (m b)))) (Data.Bool.~ ((Number.Natural.< (m b)) (m a)))) ;)

(; dict ;)

def thm_1191 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_1) (m_3 b_2)))) -> hol.proof (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_1) (m_3 b_2)))) => (A : hol.type => a_1 : hol.term A => b_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2)))) => (A : hol.type => a_1 : hol.term A => b_2 : hol.term A => __12199_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_1) (m_4 b_2)))) => hol.EQ_MP (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) (hol.imp (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 b_2))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 __12199_3) (m_4 a_1)))) (thm_1180 A a_1 b_2 __12199_3 m_4) (thm_1190 A a_1 b_2 __12199_3 m_4 hyp_1)) A a_1 b_2 __12199_3 m_4 hyp_1) A a_1 b_2 b_2 m_3 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< (m b)) (m b))) (Data.Bool.~ ((Number.Natural.< (m b)) (m b))))) (Data.Bool.~ ((Number.Natural.< (m b)) (m b)))) ;)

(; dict ;)

def thm_1192 : A : hol.type -> b_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 b_1) (m_2 b_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 b_1) (m_2 b_1)))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 b_1) (m_2 b_1)))) :=
  A : hol.type => b_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (p_1 : hol.term hol.bool => thm_1175 p_1) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 b_1) (m_2 b_1)).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< _12191) _12191))) (Data.Bool.~ ((Number.Natural.< _12191) _12191))) ;)

(; dict ;)

def thm_1193 : __12191_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1))) :=
  __12191_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)).

(; Theorem: |- ((= (Data.Bool.~ ((Number.Natural.< _12191) _12191))) (Data.Bool.~ ((Number.Natural.< _12191) _12191))) ;)

(; dict ;)

def thm_1194 : __12191_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1))) :=
  __12191_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (thm_1193 __12191_1) (thm_1193 __12191_1).

(; Theorem: |- (Data.Bool.~ ((Number.Natural.< _12191) _12191)) ;)

(; dict ;)

def thm_1195 : __12191_1 : hol.term Number_2ENatural_2Enatural -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) -> hol.proof (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) :=
  __12191_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) => thm_319 hyp_1 __12191_1.

(; Theorem: |- (Data.Bool.~ ((Number.Natural.< (m b)) (m b))) ;)

(; dict ;)

def thm_1196 : A : hol.type -> b_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) -> hol.proof (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 b_1) (m_2 b_1))) :=
  A : hol.type => b_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) => (__12191_1 : hol.term Number_2ENatural_2Enatural => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) => hol.EQ_MP (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (thm_1194 __12191_1) (hol.EQ_MP (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) __12191_1 __12191_1)) (thm_1193 __12191_1) (thm_1195 __12191_1 hyp_1))) (m_2 b_1) hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< (m b)) (m b))) (Data.Bool.~ ((Number.Natural.< (m b)) (m b)))) ;)

(; dict ;)

def thm_1197 : A : hol.type -> b_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 b_1) (m_2 b_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 b_1) (m_2 b_1)))) :=
  A : hol.type => b_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) => hyp_2 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 b_1) (m_2 b_1)) => thm_1196 A b_1 m_2 hyp_1.

(; Theorem: |- (Data.Bool.~ ((Number.Natural.< (m b)) (m a))) ;)

(; dict ;)

def thm_1198 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_2 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_1) (m_3 b_2)))) -> hol.proof (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_2 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_1) (m_3 b_2)))) => thm_1191 A a_1 b_2 m_3 hyp_2 (hol.EQ_MP (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 b_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 b_2)))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 b_2))) (thm_1192 A b_2 m_3) (thm_1197 A b_2 m_3 hyp_1)).

(; Theorem: |- ((Data.Bool.==> ((Number.Natural.< (m b)) (m a))) (Data.Bool.~ ((Number.Natural.< (m b)) (m a)))) ;)

(; dict ;)

def thm_1199 : A : hol.type -> a_1 : hol.term A -> b_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_2 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_1) (m_3 b_2)))) -> hol.proof (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)))) :=
  A : hol.type => a_1 : hol.term A => b_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_2 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_1) (m_3 b_2)))) => hyp_3 : hol.proof (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1)) => hol.EQ_MP (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_2) (m_3 a_1))) (thm_1178 A a_1 b_2 m_3) (thm_1198 A a_1 b_2 m_3 hyp_1 hyp_2).

(; Theorem: |- ((Number.Natural.<= (m a)) (m b)) ;)

(; dict ;)

def thm_1200 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => thm_1129 A a_2 b_1 m_3 hyp_1 (hol.EQ_MP (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_1) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_1) (m_3 a_2)))) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 b_1) (m_3 a_2))) (thm_1176 A a_2 b_1 m_3) (thm_1199 A a_2 b_1 m_3 hyp_2 hyp_3)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) ((Number.Natural.<= (m a)) (m b))) ;)

(; dict ;)

def thm_1201 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (hol.imp (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => hyp_4 : hol.proof (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) => hol.EQ_MP (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (thm_169 A b_1 a_2 m_3) (thm_1200 A b_1 a_2 m_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1202 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof hol.false :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => hol.EQ_MP (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (hol.imp (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) hol.false) (thm_975 A b_1 a_2 m_3) (thm_981 A b_1 a_2 m_3 hyp_3) (hol.EQ_MP (hol.imp (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (thm_964 A b_1 a_2 m_3) (thm_1201 A b_1 a_2 m_3 hyp_1 hyp_2 hyp_3)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_1203 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof (hol.imp (hol.not hol.false) hol.false) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => hyp_4 : hol.proof (hol.not hol.false) => hol.EQ_MP hol.false hol.false thm_472 (thm_1202 A b_1 a_2 m_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1204 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) -> hol.proof hol.false :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) hol.false (thm_319 hyp_2) (hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hol.EQ_MP (hol.imp (hol.not hol.false) hol.false) hol.false thm_422 (thm_1203 A b_1 a_2 m_3 hyp_1 hyp_4 hyp_3)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) Data.Bool.F) ;)

(; dict ;)

def thm_1205 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hol.proof (hol.imp (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) hol.false) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_3 : hol.proof (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) => thm_1204 A b_1 a_2 m_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1206 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.imp (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) hol.false) -> hyp_2 : hol.proof (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) hol.false) -> hyp_3 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) -> hol.proof hol.false :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.imp (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) hol.false) => hyp_2 : hol.proof (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) hol.false) => hyp_3 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) hol.false hyp_1 hyp_2 hyp_3.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1207 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.imp (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) hol.false) -> hyp_2 : hol.proof (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) hol.false) -> hyp_3 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) -> hol.proof hol.false :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.imp (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) hol.false) => hyp_2 : hol.proof (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) hol.false) => hyp_3 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => hol.PROVE_HYP (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) hol.false (thm_372 A y_1 b_2 a_3 m_4 hyp_3) (hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => thm_1206 A y_1 b_2 a_3 m_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1208 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) -> hyp_3 : hol.proof (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) hol.false) -> hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) -> hol.proof hol.false :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) => hyp_3 : hol.proof (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1))) hol.false) => hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) => hol.PROVE_HYP (hol.imp (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) hol.false) hol.false (thm_1205 A b_1 a_2 m_4 hyp_1 hyp_2) (hyp_5 : hol.proof (hol.imp (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_2) (m_4 b_1)))) hol.false) => thm_1207 A y_3 b_1 a_2 m_4 hyp_5 hyp_3 hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1209 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) -> hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) -> hol.proof hol.false :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) => hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => hol.PROVE_HYP (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) hol.false) hol.false (thm_973 A b_2 a_3 y_1 m_4 hyp_1) (hyp_5 : hol.proof (hol.imp (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) hol.false) => thm_1208 A b_2 a_3 y_1 m_4 hyp_2 hyp_3 hyp_5 hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1210 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) -> hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) -> hol.proof hol.false :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) => hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => hol.PROVE_HYP (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) hol.false (hol.EQ_MP (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (thm_371 A y_1 b_2 a_3 m_4) (thm_372 A y_1 b_2 a_3 m_4 hyp_4)) (hyp_5 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => thm_1209 A y_1 b_2 a_3 m_4 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1211 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) -> hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) -> hol.proof hol.false :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) => hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) hol.false (thm_319 hyp_3) (hyp_5 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) => thm_1210 A y_1 b_2 a_3 m_4 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) Data.Bool.F) ;)

(; dict ;)

def thm_1212 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) -> hol.proof (hol.imp (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) hol.false) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) => hyp_4 : hol.proof (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) => thm_1211 A y_1 b_2 a_3 m_4 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((= (\lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) y)) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y_1. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y_1)) (m a)))) ((Number.Natural.< (m y_1)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1213 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) (hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y__1_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y__1_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1.

(; Theorem: |- (\lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) y) ;)

(; dict ;)

def thm_1214 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) -> hol.proof ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) => hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y_1. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y_1)) (m a)))) ((Number.Natural.< (m y_1)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1215 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) -> hol.proof (hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y__1_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y__1_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) => hol.EQ_MP ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) (hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y__1_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y__1_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (thm_1213 A y_1 b_2 a_3 m_4) (thm_1214 A y_1 b_2 a_3 m_4 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1216 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) -> hyp_4 : hol.proof ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) -> hol.proof hol.false :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) => hyp_4 : hol.proof ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) => thm_1212 A y_1 b_2 a_3 m_4 hyp_1 hyp_2 hyp_3 (thm_1215 A y_1 b_2 a_3 m_4 hyp_4).

(; Theorem: |- ((Data.Bool.==> (\lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) y)) Data.Bool.F) ;)

(; dict ;)

def thm_1217 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) -> hol.proof (hol.imp ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) hol.false) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_7 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 p_7)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 p_7))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_6 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_5 n_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_6 m_5)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 n_5))) => hyp_4 : hol.proof ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_6) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) y_1) => thm_1216 A y_1 b_2 a_3 m_4 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> (\lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) y)) Data.Bool.F)) ;)

(; dict ;)

def thm_1218 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.imp ((y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) y_4) hol.false)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => y_4 : hol.term A => thm_1217 A y_4 b_1 a_2 m_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) Data.Bool.F) ;)

(; dict ;)

def thm_1219 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) hol.false) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => thm_342 A b_1 a_2 m_3 (thm_1218 A b_1 a_2 m_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1220 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1221 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) -> hol.proof hol.false :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) => thm_1219 A b_1 a_2 m_3 hyp_1 hyp_2 hyp_3 (thm_1220 A b_1 a_2 m_3 hyp_4).

(; Theorem: |- ((= (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) b)) (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y_1. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y_1)) (m a)))) ((Number.Natural.< (m y_1)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1222 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y__1_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y__1_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1.

(; Theorem: |- (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) b) ;)

(; dict ;)

def thm_1223 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) -> hol.proof ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y_1. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y_1)) (m a)))) ((Number.Natural.< (m y_1)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1224 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y__1_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y__1_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) => hol.EQ_MP ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y__1_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y__1_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (thm_1222 A b_1 a_2 m_3) (thm_1223 A b_1 a_2 m_3 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1225 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hyp_4 : hol.proof ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) -> hol.proof hol.false :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_4 : hol.proof ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) => (hyp_5 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) => thm_1221 A b_1 a_2 m_3 hyp_1 hyp_2 hyp_3 hyp_5) (thm_1224 A b_1 a_2 m_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) b)) Data.Bool.F) ;)

(; dict ;)

def thm_1226 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) -> hol.proof (hol.imp ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) hol.false) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_6 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 p_6)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 p_6))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_5 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_4 n_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_5 m_4)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 n_4))) => hyp_4 : hol.proof ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_6) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))))) b_1) => thm_1225 A b_1 a_2 m_3 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) b)) Data.Bool.F)) ;)

(; dict ;)

def thm_1227 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) -> hol.proof (hol.forall A (b_3 : hol.term A => hol.imp ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))))) b_3) hol.false)) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) => b_3 : hol.term A => thm_1226 A b_3 a_1 m_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) Data.Bool.F) ;)

(; dict ;)

def thm_1228 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) hol.false) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) => thm_341 A a_1 m_2 (thm_1227 A a_1 m_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1229 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1230 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) -> hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) -> hol.proof hol.false :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) => hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) => thm_1228 A a_1 m_2 hyp_1 hyp_2 hyp_3 (thm_1229 A a_1 m_2 hyp_4).

(; Theorem: |- ((= (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) a)) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y_1. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y_1)) (m a)))) ((Number.Natural.< (m y_1)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1231 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y__1_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y__1_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1.

(; Theorem: |- (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) a) ;)

(; dict ;)

def thm_1232 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) -> hol.proof ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y_1. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y_1)) (m a)))) ((Number.Natural.< (m y_1)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1233 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y__1_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y__1_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) => hol.EQ_MP ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y__1_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y__1_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (thm_1231 A a_1 m_2) (thm_1232 A a_1 m_2 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1234 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) -> hyp_4 : hol.proof ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) -> hol.proof hol.false :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) => hyp_4 : hol.proof ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) => (hyp_5 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) => thm_1230 A a_1 m_2 hyp_1 hyp_2 hyp_3 hyp_5) (thm_1233 A a_1 m_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) a)) Data.Bool.F) ;)

(; dict ;)

def thm_1235 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) -> hol.proof (hol.imp ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) hol.false) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_5 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 p_5)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 p_5))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_3 n_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_4 m_3)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 n_3))) => hyp_4 : hol.proof ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) a_1) => thm_1234 A a_1 m_2 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) a)) Data.Bool.F)) ;)

(; dict ;)

def thm_1236 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.imp ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_6) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_6) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))))) a_2) hol.false)) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) => a_2 : hol.term A => thm_1235 A a_2 m_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) Data.Bool.F) ;)

(; dict ;)

def thm_1237 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) hol.false) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) => thm_340 A m_1 (thm_1236 A m_1 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1238 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1239 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) -> hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof hol.false :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) => hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1237 A m_1 hyp_1 hyp_2 hyp_3 (thm_1238 A m_1 hyp_4).

(; Theorem: |- ((= (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) m)) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y_1. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y_1)) (m a)))) ((Number.Natural.< (m y_1)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1240 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y__1_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y__1_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1.

(; Theorem: |- (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) m) ;)

(; dict ;)

def thm_1241 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) -> hol.proof ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y_1. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y_1)) (m a)))) ((Number.Natural.< (m y_1)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1242 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y__1_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y__1_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) => hol.EQ_MP ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y__1_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y__1_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y__1_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1240 A m_1) (thm_1241 A m_1 hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1243 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) -> hyp_4 : hol.proof ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) -> hol.proof hol.false :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) => hyp_4 : hol.proof ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) => (hyp_5 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1239 A m_1 hyp_1 hyp_2 hyp_3 hyp_5) (thm_1242 A m_1 hyp_4).

(; Theorem: |- ((Data.Bool.==> (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) m)) Data.Bool.F) ;)

(; dict ;)

def thm_1244 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) -> hol.proof (hol.imp ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) hol.false) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_4 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 p_4)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 p_4))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_2 n_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_3 m_2)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 n_2))) => hyp_4 : hol.proof ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) => thm_1243 A m_1 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda m. ((Data.Bool.==> (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) m)) Data.Bool.F)) ;)

(; dict ;)

def thm_1245 : A : hol.type -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) -> hol.proof (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.imp ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.or (hol.and (hol.forall A (y_6 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_6) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))))) m_1) hol.false)) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1244 A m_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) Data.Bool.F) ;)

(; dict ;)

def thm_1246 : A : hol.type -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) hol.false) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => thm_339 A (thm_1245 A hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((= t) \lambda x. (t x))) ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1247 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)).

(; Theorem: |- ((= ((= t) \lambda x. (t x))) ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1248 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (thm_1247 B A t_1) (thm_1247 B A t_1).

(; Theorem: |- ((= t) \lambda x. (t x)) ;)

(; dict ;)

def thm_1249 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) -> hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) => hyp_1.

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_1250 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) -> hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) => hol.SYM (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2) (thm_1249 B A t_1 hyp_1).

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_1251 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) -> hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) => hyp_1.

(; Theorem: |- ((= t) \lambda x. (t x)) ;)

(; dict ;)

def thm_1252 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) -> hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) => hol.SYM (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1 (thm_1251 B A t_1 hyp_1).

(; Theorem: |- ((= ((= \lambda x. (t x)) t)) ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1253 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hol.PROP_EXT (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hyp_1 : hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) => thm_1250 B A t_1 hyp_1) (hyp_1 : hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) => thm_1252 B A t_1 hyp_1).

(; Theorem: |- ((= \lambda t. ((= \lambda x. (t x)) t)) \lambda t. ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1254 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr A B) hol.bool (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (t_1 : hol.term (hol.arr A B) => thm_1253 B A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= \lambda x. (t x)) t))) (Data.Bool.! \lambda t. ((= t) \lambda x. (t x)))) ;)

(; dict ;)

def thm_1255 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1)) (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (thm_63 B A) (thm_1254 B A).

(; Theorem: |- (Data.Bool.! \lambda t. ((= t) \lambda x. (t x))) ;)

(; dict ;)

def thm_1256 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1)) (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2))) (thm_1255 B A) (thm_35 B A).

(; Theorem: |- ((= t) \lambda x. (t x)) ;)

(; dict ;)

def thm_1257 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => thm_1256 B A t_1.

(; Theorem: |- ((= t) \lambda x. (t x)) ;)

(; dict ;)

def thm_1258 : A : hol.type -> t_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) t_1 (x_2 : hol.term A => t_1 x_2)) :=
  A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => (B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (hol.eq (hol.arr A B) t_1 (x_2 : hol.term A => t_1 x_2)) (thm_1248 B A t_1) (thm_1257 B A t_1)) hol.bool A t_1.

(; Theorem: |- ((= P) \lambda x. (P x)) ;)

(; dict ;)

def thm_1259 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 (x_2 : hol.term A => P_1 x_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => thm_1258 A t_1) A P_1.

(; Theorem: |- ((= (Data.Bool.! P)) (Data.Bool.! \lambda x. (P x))) ;)

(; dict ;)

def thm_1260 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A P_1) (hol.forall A (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) P_1 (x_2 : hol.term A => P_1 x_2) (thm_81 A) (thm_1259 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) ;)

(; dict ;)

def thm_1261 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.forall A P_1) (hol.forall A (x_2 : hol.term A => P_1 x_2)) thm_345 (thm_1260 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.! P)))) (= (Data.Bool.~ (Data.Bool.! \lambda x. (P x))))) ;)

(; dict ;)

def thm_1262 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.forall A P_1))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.forall A P_1)) (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) thm_91 (thm_1261 A P_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1263 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1264 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.forall A P_1))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (thm_1262 A P_1) (thm_1263 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1265 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1264 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ;)

(; dict ;)

def thm_1266 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ;)

(; dict ;)

def thm_1267 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (thm_1266 A p_1) (thm_1266 A p_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x)))) ;)

(; dict ;)

def thm_1268 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_36 A p_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1269 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (thm_1267 A p_1) (thm_1268 A p_1)) A p_1) A P_1.

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.! \lambda x. (P x))))) (= (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1270 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) thm_91 (thm_1269 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1271 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (thm_1270 A P_1) (thm_1263 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) Data.Bool.T) ;)

(; dict ;)

def thm_1272 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (x_1 : hol.term hol.bool => thm_130 x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) Data.Bool.T) ;)

(; dict ;)

def thm_1273 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true (thm_1271 A P_1) (thm_1272 A P_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (P x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1274 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true (thm_1273 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1275 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1265 A P_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1274 A P_1) thm_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))))) ;)

(; dict ;)

def thm_1276 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))))) ;)

(; dict ;)

def thm_1277 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.PROVE_HYP (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))))) (thm_1275 A P_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) => thm_1276 A P_1 hyp_1).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_1278 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.? \lambda x. (P x))) ;)

(; dict ;)

def thm_1279 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) P_1 (x_2 : hol.term A => P_1 x_2) (thm_1278 A) (thm_1259 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) ;)

(; dict ;)

def thm_1280 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) thm_345 (thm_1279 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.? P)))) (= (Data.Bool.~ (Data.Bool.? \lambda x. (P x))))) ;)

(; dict ;)

def thm_1281 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) thm_91 (thm_1280 A P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1282 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1283 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (thm_1281 A P_1) (thm_1282 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1284 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1283 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ;)

(; dict ;)

def thm_1285 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ;)

(; dict ;)

def thm_1286 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (thm_1285 A p_1) (thm_1285 A p_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x)))) ;)

(; dict ;)

def thm_1287 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_37 A p_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1288 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (p_1 x_2)))) (thm_1286 A p_1) (thm_1287 A p_1)) A p_1) A P_1.

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.? \lambda x. (P x))))) (= (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1289 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) thm_91 (thm_1288 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1290 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (thm_1289 A P_1) (thm_1282 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) Data.Bool.T) ;)

(; dict ;)

def thm_1291 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (x_1 : hol.term hol.bool => thm_130 x_1) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) Data.Bool.T) ;)

(; dict ;)

def thm_1292 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true (thm_1290 A P_1) (thm_1291 A P_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1293 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) hol.true (thm_1292 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1294 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1284 A P_1) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1293 A P_1) thm_3).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ;)

(; dict ;)

def thm_1295 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ;)

(; dict ;)

def thm_1296 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.PROVE_HYP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) (thm_1294 A P_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) => thm_1295 A P_1 hyp_1).

(; Theorem: |- ((= Data.Bool.?!) Data.Bool.?!) ;)

(; dict ;)

def thm_1297 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool.?! P)) (Data.Bool.?! \lambda x. (P x))) ;)

(; dict ;)

def thm_1298 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) P_1 (x_2 : hol.term A => P_1 x_2) (thm_1297 A) (thm_1259 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! P))) (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ;)

(; dict ;)

def thm_1299 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) thm_345 (thm_1298 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.?! P)))) (= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x))))) ;)

(; dict ;)

def thm_1300 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) thm_91 (thm_1299 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ;)

(; dict ;)

def thm_1301 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1302 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (thm_1300 A P_1) (thm_1301 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1303 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1302 A P_1).

(; Theorem: |- ((= ((= Data.Bool.?!) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))))) ((= Data.Bool.?!) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1304 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => hol.REFL hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))).

(; Theorem: |- ((= ((= Data.Bool.?!) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))))) ((= Data.Bool.?!) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1305 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) (thm_1304 A) (thm_1304 A).

(; Theorem: |- ((= \lambda x. (P x)) \lambda x. (P x)) ;)

(; dict ;)

def thm_1306 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => P_1 x_2) (x_2 : hol.term A => P_1 x_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) (x_2 : hol.term A => P_1 x_2).

(; Theorem: |- ((= (Data.Bool.?! \lambda x. (P x))) (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ;)

(; dict ;)

def thm_1307 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2) (x_2 : hol.term A => P_1 x_2) (hol.EQ_MP (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4)))))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4)))))) (thm_1305 A) (thm_38 A)) (thm_1306 A P_1).

(; Theorem: |- ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p)) ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1308 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) p_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) p_1.

(; Theorem: |- ((= \lambda p. (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p)) \lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1309 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) p_1) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A hol.bool) hol.bool (p_1 : hol.term (hol.arr A hol.bool) => (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) p_1) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3))))) (p_1 : hol.term (hol.arr A hol.bool) => thm_1308 A p_1).

(; Theorem: |- ((= (\lambda p. (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p) \lambda x. (P x))) (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ;)

(; dict ;)

def thm_1310 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2) (x_2 : hol.term A => P_1 x_2) (thm_1309 A) (thm_1306 A P_1).

(; Theorem: |- ((= (= (\lambda p. (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p) \lambda x. (P x)))) (= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x)))) ;)

(; dict ;)

def thm_1311 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2))) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) thm_91 (thm_1310 A P_1).

(; Theorem: |- ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x. (P x) x)) (\lambda x. (P x) y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1312 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2).

(; Theorem: |- ((= ((= (\lambda p. (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) p) \lambda x. (P x))) (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x)))) ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x. (P x) x)) (\lambda x. (P x) y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1313 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2))) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))))) (thm_1311 A P_1) (thm_1312 A P_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.? \lambda x. (P x)))) (Data.Bool./\ (Data.Bool.? \lambda x. (P x)))) ;)

(; dict ;)

def thm_1314 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))).

(; Theorem: |- ((= ((= (\lambda x. (f x) y)) (f y))) ((= (\lambda x. (f x) y)) (f y))) ;)

(; dict ;)

def thm_1315 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)).

(; Theorem: |- ((= ((= (\lambda x. (f x) y)) (f y))) ((= (\lambda x. (f x) y)) (f y))) ;)

(; dict ;)

def thm_1316 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (thm_1315 A B y_1 f_2) (thm_1315 A B y_1 f_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= (\lambda x. (f x) y)) (f y))) ;)

(; dict ;)

def thm_1317 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall A (y_2 : hol.term A => hol.eq B ((x_3 : hol.term A => f_1 x_3) y_2) (f_1 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_39 B A f_1.

(; Theorem: |- ((= (\lambda x. (f x) y)) (f y)) ;)

(; dict ;)

def thm_1318 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => thm_1317 B A f_2 y_1.

(; Theorem: |- ((= (\lambda x. (f x) y)) (f y)) ;)

(; dict ;)

def thm_1319 : A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (hol.eq B ((x_3 : hol.term A => f_2 x_3) y_1) (f_2 y_1)) (thm_1316 A B y_1 f_2) (thm_1318 A B y_1 f_2)) A hol.bool y_1 f_2.

(; Theorem: |- ((= (\lambda x_1. (P x_1) x)) (P x)) ;)

(; dict ;)

def thm_1320 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x__1_3 : hol.term A => P_2 x__1_3) x_1) (P_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A hol.bool) => thm_1319 A y_1 f_2) A x_1 P_2.

(; Theorem: |- ((= (Data.Bool./\ (\lambda x_1. (P x_1) x))) (Data.Bool./\ (P x))) ;)

(; dict ;)

def thm_1321 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((x__1_3 : hol.term A => P_2 x__1_3) x_1)) (hol.and (P_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((x__1_3 : hol.term A => P_2 x__1_3) x_1) (P_2 x_1) thm_344 (thm_1320 A x_1 P_2).

(; Theorem: |- ((= (\lambda x. (P x) y)) (P y)) ;)

(; dict ;)

def thm_1322 : A : hol.type -> y_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => P_2 x_3) y_1) (P_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A hol.bool) => thm_1319 A y_1 f_2) A y_1 P_2.

(; Theorem: |- ((= ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((Data.Bool./\ (P x)) (P y))) ;)

(; dict ;)

def thm_1323 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1)) (hol.and (P_3 x_2) (P_3 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2)) (hol.and (P_3 x_2)) ((x_4 : hol.term A => P_3 x_4) y_1) (P_3 y_1) (thm_1321 A x_2 P_3) (thm_1322 A y_1 P_3).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y)))) (Data.Bool.==> ((Data.Bool./\ (P x)) (P y)))) ;)

(; dict ;)

def thm_1324 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1))) (hol.imp (hol.and (P_3 x_2) (P_3 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1)) (hol.and (P_3 x_2) (P_3 y_1)) thm_161 (thm_1323 A y_1 x_2 P_3).

(; Theorem: |- ((= ((= x) y)) ((= x) y)) ;)

(; dict ;)

def thm_1325 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq A x_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y))) ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) ;)

(; dict ;)

def thm_1326 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1)) (hol.eq A x_2 y_1)) (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and ((x__1_4 : hol.term A => P_3 x__1_4) x_2) ((x_4 : hol.term A => P_3 x_4) y_1))) (hol.imp (hol.and (P_3 x_2) (P_3 y_1))) (hol.eq A x_2 y_1) (hol.eq A x_2 y_1) (thm_1324 A y_1 x_2 P_3) (thm_1325 A y_1 x_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) ;)

(; dict ;)

def thm_1327 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_2 x__1_4) x_1) ((x_4 : hol.term A => P_2 x_4) y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_2 x__1_4) x_1) ((x_4 : hol.term A => P_2 x_4) y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => thm_1326 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1328 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_2 x__1_4) x_1) ((x_4 : hol.term A => P_2 x_4) y_3)) (hol.eq A x_1 y_3))) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_2 x__1_4) x_1) ((x_4 : hol.term A => P_2 x_4) y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)) (thm_81 A) (thm_1327 A x_1 P_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1329 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => thm_1328 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1330 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))) (thm_81 A) (thm_1329 A P_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (\lambda x_1. (P x_1) x)) (\lambda x. (P x) y))) ((= x) y)))))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1331 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x__1_4 : hol.term A => P_1 x__1_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (thm_1314 A P_1) (thm_1330 A P_1).

(; Theorem: |- ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) \lambda x. (P x))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1332 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (hol.EQ_MP (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (p_3 x_4) (p_3 y_5)) (hol.eq A x_4 y_5))))) p_2) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2))) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and ((x_4 : hol.term A => P_1 x_4) x_2) ((x_4 : hol.term A => P_1 x_4) y_3)) (hol.eq A x_2 y_3)))))) (thm_1313 A P_1) (thm_1310 A P_1)) (thm_1331 A P_1).

(; Theorem: |- ((= (Data.Bool.?! \lambda x. (P x))) ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1333 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (thm_1307 A P_1) (thm_1332 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) (Data.Bool.~ ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1334 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) thm_345 (thm_1333 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1335 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1336 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (thm_1335 t2_1 t1_2) (thm_1335 t2_1 t1_2).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_1337 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_1338 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) thm_1337 thm_1337.

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))))) ;)

(; dict ;)

def thm_1339 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) thm_183 thm_1338.

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1340 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))).

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1341 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (thm_1340 t1_1) (thm_1340 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_1342 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  t1_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) thm_183 (thm_1341 t1_1).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1343 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2)))) :=
  t1_1 : hol.term hol.bool => thm_40 t1_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1344 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1343 t1_2 t2_1.

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1345 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_219 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1346 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (thm_1335 t2_1 t1_2) (thm_1344 t2_1 t1_2)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) => thm_1345 t2_1 t1_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1347 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1348 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (thm_1347 t2_1 t1_2) (thm_1347 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1349 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) :=
  t1_1 : hol.term hol.bool => thm_41 t1_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1350 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1349 t1_2 t2_1.

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1351 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) (thm_1346 t2_1 t1_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (thm_1348 t2_1 t1_2) (thm_1350 t2_1 t1_2)).

(; Theorem: |- (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_1352 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => thm_1351 t2_2 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_1353 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  t1_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (thm_1342 t1_1) (thm_1352 t1_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1354 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1355 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.EQ_MP (hol.forall hol.bool (t1_3 : hol.term hol.bool => hol.forall hol.bool (t2_4 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_3 t2_4)) (hol.or (hol.not t1_3) (hol.not t2_4))) (hol.eq hol.bool (hol.not (hol.or t1_3 t2_4)) (hol.and (hol.not t1_3) (hol.not t2_4)))))) (hol.forall hol.bool (t1_3 : hol.term hol.bool => hol.forall hol.bool (t2_4 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_3 t2_4)) (hol.or (hol.not t1_3) (hol.not t2_4))) (hol.eq hol.bool (hol.not (hol.or t1_3 t2_4)) (hol.and (hol.not t1_3) (hol.not t2_4)))))) thm_1339 thm_1353 t1_2 t2_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) => thm_1354 t2_1 t1_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1356 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (thm_1336 t2_1 t1_2) (thm_1355 t2_1 t1_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.~ (Data.Bool.? \lambda x. (P x))))) (Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1357 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) thm_343 (thm_1288 A P_1).

(; Theorem: |- ((= (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1358 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_2 x_3) (P_2 y_4)) (hol.eq A x_3 y_4))) x_1) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV A hol.bool (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_2 x_3) (P_2 y_4)) (hol.eq A x_3 y_4))) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1359 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => thm_1358 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1360 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))) (thm_81 A) (thm_1359 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1361 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) thm_345 (thm_1360 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))))) (= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1362 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) thm_91 (thm_1361 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))) (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1363 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_2 x_3) (P_2 y_4)) (hol.eq A x_3 y_4))) x_1)) (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_2 x_3) (P_2 y_4)) (hol.eq A x_3 y_4))) x_1) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) thm_345 (thm_1358 A x_1 P_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))) \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1364 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (x_2 : hol.term A => thm_1363 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1365 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (thm_1278 A) (thm_1364 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1366 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (thm_1362 A P_1) (thm_1365 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) x)))) ;)

(; dict ;)

def thm_1367 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_1268 A p_1) A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1368 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (P_1 x_3) (P_1 y_4)) (hol.eq A x_3 y_4))) x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (thm_1366 A P_1) (thm_1367 A P_1).

(; Theorem: |- ((= (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)) ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) ;)

(; dict ;)

def thm_1369 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => hol.imp (hol.and (P_3 x_2) (P_3 y_4)) (hol.eq A x_2 y_4)) y_1) (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV A hol.bool (y_4 : hol.term A => hol.imp (hol.and (P_3 x_2) (P_3 y_4)) (hol.eq A x_2 y_4)) y_1.

(; Theorem: |- ((= \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)) \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))) ;)

(; dict ;)

def thm_1370 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)) (y_3 : hol.term A => thm_1369 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1371 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3) (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)) (thm_81 A) (thm_1370 A x_1 P_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1372 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) thm_345 (thm_1371 A x_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))))) (= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1373 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) thm_91 (thm_1372 A x_1 P_2).

(; Theorem: |- ((= (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))) (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1374 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_3 x_2) (P_3 y_4)) (hol.eq A x_2 y_4)) y_1)) (hol.not (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_3 x_2) (P_3 y_4)) (hol.eq A x_2 y_4)) y_1) (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1)) thm_345 (thm_1369 A y_1 x_2 P_3).

(; Theorem: |- ((= \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))) \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ;)

(; dict ;)

def thm_1375 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (y_3 : hol.term A => thm_1374 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) (Data.Bool.? \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1376 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (thm_1278 A) (thm_1375 A x_1 P_2).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y))))) ((= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) (Data.Bool.? \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1377 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (thm_1373 A x_1 P_2) (thm_1376 A x_1 P_2).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda y. (p y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (p y))))) ((= (Data.Bool.~ (Data.Bool.! \lambda y. (p y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (p y))))) ;)

(; dict ;)

def thm_1378 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))) (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ((= (Data.Bool.~ (Data.Bool.! \lambda y. (p y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (p y))))) ;)

(; dict ;)

def thm_1379 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))) (thm_1266 A p_1) (thm_1378 A p_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. (p y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (p y)))) ;)

(; dict ;)

def thm_1380 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => p_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (p_1 x_2)))) (hol.eq hol.bool (hol.not (hol.forall A (y_2 : hol.term A => p_1 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_2 : hol.term A => hol.not (p_1 y_2)))) (thm_1379 A p_1) (thm_1268 A p_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) (Data.Bool.? \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)) y)))) ;)

(; dict ;)

def thm_1381 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_1380 A p_1) A p_1) A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) (Data.Bool.? \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_1382 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => (y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not ((y_4 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_4)) (hol.eq A x_1 y_4)) y_3)))) (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))))) (thm_1377 A x_1 P_2) (thm_1381 A x_1 P_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1383 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1384 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (thm_1383 t2_1 t1_2) (thm_1383 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_1385 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp t1_1 t2_2)) (hol.and t1_1 (hol.not t2_2)))) :=
  t1_1 : hol.term hol.bool => thm_42 t1_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_1386 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1385 t1_2 t2_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1387 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp (hol.and (P_3 x_2) (P_3 y_1)) (hol.eq A x_2 y_1))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A x_2 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.imp t1_2 t2_1)) (hol.and t1_2 (hol.not t2_1))) (thm_1384 t2_1 t1_2) (thm_1386 t2_1 t1_2)) (hol.eq A x_2 y_1) (hol.and (P_3 x_2) (P_3 y_1)).

(; Theorem: |- ((= \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))) \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1388 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))) (y_3 : hol.term A => thm_1387 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (Data.Bool.~ ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1389 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))) (thm_1278 A) (thm_1388 A x_1 P_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1390 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.not (hol.imp (hol.and (P_2 x_1) (P_2 y_3)) (hol.eq A x_1 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3)))) (thm_1382 A x_1 P_2) (thm_1389 A x_1 P_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1391 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))) (x_2 : hol.term A => thm_1390 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))) ;)

(; dict ;)

def thm_1392 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))) (thm_1278 A) (thm_1391 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))) ;)

(; dict ;)

def thm_1393 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) (thm_1368 A P_1) (thm_1392 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ (Data.Bool.? \lambda x. (P x)))) (Data.Bool.~ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1394 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) (thm_1357 A P_1) (thm_1393 A P_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ (Data.Bool.? \lambda x. (P x))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1395 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (thm_1356 A P_1) (thm_1394 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1396 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.not (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (thm_1334 A P_1) (thm_1395 A P_1).

(; Theorem: |- ((= (= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x))))) (= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ;)

(; dict ;)

def thm_1397 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) thm_91 (thm_1396 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1398 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (thm_1397 A P_1) (thm_1301 A P_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1399 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1398 A P_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ;)

(; dict ;)

def thm_1400 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => thm_68 y_1 x_2) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) (Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ;)

(; dict ;)

def thm_1401 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))).

(; Theorem: |- ((= ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1402 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)).

(; Theorem: |- ((= ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1403 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (thm_1402 t3_1 t2_2 t1_3) (thm_1402 t3_1 t2_2 t1_3).

(; Theorem: |- ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ;)

(; dict ;)

def thm_1404 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) -> hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ;)

(; dict ;)

def thm_1405 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) -> hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) => hol.SYM hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1) (thm_1404 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ;)

(; dict ;)

def thm_1406 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) => hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ;)

(; dict ;)

def thm_1407 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) -> hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) => hol.SYM hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1)) (thm_1406 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3)))) ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1408 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1))) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.PROP_EXT (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) => thm_1405 t3_1 t2_2 t1_3 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and (hol.and t1_3 t2_2) t3_1) (hol.and t1_3 (hol.and t2_2 t3_1))) => thm_1407 t3_1 t2_2 t1_3 hyp_1).

(; Theorem: |- ((= \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3)))) \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1409 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_2 t2_1) t3_3) (hol.and t1_2 (hol.and t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_2 t2_1) t3_3) (hol.and t1_2 (hol.and t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3)) (t3_3 : hol.term hol.bool => thm_1408 t3_3 t2_1 t1_2).

(; Theorem: |- ((= (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))))) (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1410 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_2 t2_1) t3_3) (hol.and t1_2 (hol.and t2_1 t3_3)))) (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_2 t2_1) t3_3) (hol.and t1_2 (hol.and t2_1 t3_3))) (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3)) thm_183 (thm_1409 t2_1 t1_2).

(; Theorem: |- ((= \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))))) \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1411 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))) :=
  t1_1 : hol.term hol.bool => hol.ABS_THM hol.bool hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))) (t2_2 : hol.term hol.bool => thm_1410 t2_2 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3)))))) (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1412 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))))) :=
  t1_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))) (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))) thm_183 (thm_1411 t1_1).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3)))))) \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1413 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))))) :=
  hol.ABS_THM hol.bool hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))) (t1_1 : hol.term hol.bool => thm_1412 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)))))) ;)

(; dict ;)

def thm_1414 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))) thm_183 thm_1413.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))))) ;)

(; dict ;)

def thm_1415 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))))) :=
  hol.EQ_MP (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and (hol.and t1_1 t2_2) t3_3) (hol.and t1_1 (hol.and t2_2 t3_3)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3))))) thm_1414 thm_43.

(; Theorem: |- (Data.Bool.! \lambda t2. (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)))) ;)

(; dict ;)

def thm_1416 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 (hol.and t2_2 t3_3)) (hol.and (hol.and t1_1 t2_2) t3_3)))) :=
  t1_1 : hol.term hol.bool => thm_1415 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t3. ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3))) ;)

(; dict ;)

def thm_1417 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t3_3 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_2 (hol.and t2_1 t3_3)) (hol.and (hol.and t1_2 t2_1) t3_3))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_1416 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool./\ t1) ((Data.Bool./\ t2) t3))) ((Data.Bool./\ ((Data.Bool./\ t1) t2)) t3)) ;)

(; dict ;)

def thm_1418 : t3_1 : hol.term hol.bool -> t2_2 : hol.term hol.bool -> t1_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) :=
  t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => thm_1417 t2_2 t1_3 t3_1.

(; Theorem: |- ((= ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))) ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= y) x)))) ;)

(; dict ;)

def thm_1419 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (P_3 x_2) (hol.and (P_3 y_1) (hol.not (hol.eq A y_1 x_2)))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A y_1 x_2)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => (t3_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => t1_3 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (hol.eq hol.bool (hol.and t1_3 (hol.and t2_2 t3_1)) (hol.and (hol.and t1_3 t2_2) t3_1)) (thm_1403 t3_1 t2_2 t1_3) (thm_1418 t3_1 t2_2 t1_3)) (hol.not (hol.eq A y_1 x_2)) (P_3 y_1) (P_3 x_2).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool./\ (P x)) (P y)))) (Data.Bool./\ ((Data.Bool./\ (P x)) (P y)))) ;)

(; dict ;)

def thm_1420 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.and (P_3 x_2) (P_3 y_1))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.and (P_3 x_2) (P_3 y_1))).

(; Theorem: |- ((= ((= y) x)) ((= x) y)) ;)

(; dict ;)

def thm_1421 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A y_2 x_1) (hol.eq A x_1 y_2)) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_67 A y_1 x_2) A x_1 y_2.

(; Theorem: |- ((= (Data.Bool.~ ((= y) x))) (Data.Bool.~ ((= x) y))) ;)

(; dict ;)

def thm_1422 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (hol.eq A y_2 x_1)) (hol.not (hol.eq A x_1 y_2))) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq A y_2 x_1) (hol.eq A x_1 y_2) thm_345 (thm_1421 A x_1 y_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= y) x)))) ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1423 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A y_1 x_2))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A x_2 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (hol.and (P_3 x_2) (P_3 y_1))) (hol.and (hol.and (P_3 x_2) (P_3 y_1))) (hol.not (hol.eq A y_1 x_2)) (hol.not (hol.eq A x_2 y_1)) (thm_1420 A y_1 x_2 P_3) (thm_1422 A x_2 y_1).

(; Theorem: |- ((= ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))) ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1424 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (P_3 x_2) (hol.and (P_3 y_1) (hol.not (hol.eq A y_1 x_2)))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A x_2 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.and (P_3 x_2) (hol.and (P_3 y_1) (hol.not (hol.eq A y_1 x_2)))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A y_1 x_2))) (hol.and (hol.and (P_3 x_2) (P_3 y_1)) (hol.not (hol.eq A x_2 y_1))) (thm_1419 A y_1 x_2 P_3) (thm_1423 A y_1 x_2 P_3).

(; Theorem: |- ((= \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))) \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))) ;)

(; dict ;)

def thm_1425 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.and (P_2 x_1) (hol.and (P_2 y_3) (hol.not (hol.eq A y_3 x_1)))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3)))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.and (P_2 x_1) (hol.and (P_2 y_3) (hol.not (hol.eq A y_3 x_1)))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))) (y_3 : hol.term A => thm_1424 A y_3 x_1 P_2).

(; Theorem: |- ((= (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1426 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_2 x_1) (hol.and (P_2 y_3) (hol.not (hol.eq A y_3 x_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_3 : hol.term A => hol.and (P_2 x_1) (hol.and (P_2 y_3) (hol.not (hol.eq A y_3 x_1)))) (y_3 : hol.term A => hol.and (hol.and (P_2 x_1) (P_2 y_3)) (hol.not (hol.eq A x_1 y_3))) (thm_1278 A) (thm_1425 A x_1 P_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))) \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))) ;)

(; dict ;)

def thm_1427 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.ABS_THM A hol.bool (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))) (x_2 : hol.term A => thm_1426 A x_2 P_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))) ;)

(; dict ;)

def thm_1428 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))) (thm_1278 A) (thm_1427 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1429 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))) (thm_1401 A P_1) (thm_1428 A P_1).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) (= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ;)

(; dict ;)

def thm_1430 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) thm_91 (thm_1429 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ;)

(; dict ;)

def thm_1431 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) ;)

(; dict ;)

def thm_1432 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (thm_1430 A P_1) (thm_1431 A P_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) Data.Bool.T) ;)

(; dict ;)

def thm_1433 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (x_1 : hol.term hol.bool => thm_130 x_1) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y)))))))) Data.Bool.T) ;)

(; dict ;)

def thm_1434 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) hol.true (thm_1432 A P_1) (thm_1433 A P_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) Data.Bool.T) ;)

(; dict ;)

def thm_1435 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) hol.true) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3))))))) hol.true (thm_1400 A P_1) (thm_1434 A P_1).

(; Theorem: |- ((= Data.Bool.T) ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1436 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) hol.true (thm_1435 A P_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ (P x)) (P y))) (Data.Bool.~ ((= x) y))))))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ;)

(; dict ;)

def thm_1437 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP hol.true (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1436 A P_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! \lambda x. (P x)))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ;)

(; dict ;)

def thm_1438 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.and (P_1 x_2) (P_1 y_3)) (hol.not (hol.eq A x_2 y_3)))))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1399 A P_1) (thm_1437 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))) ;)

(; dict ;)

def thm_1439 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2))) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (thm_1303 A P_1) (thm_1438 A P_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x))))))))) ;)

(; dict ;)

def thm_1440 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (thm_1296 A P_1) (thm_1439 A P_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x))))) ((Data.Bool./\ ((= (Data.Bool.~ (Data.Bool.? P))) (Data.Bool.! \lambda x. (Data.Bool.~ (P x))))) ((= (Data.Bool.~ (Data.Bool.?! P))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (Data.Bool.~ (P x)))) (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ (P x)) ((Data.Bool./\ (P y)) (Data.Bool.~ ((= y) x)))))))))) ;)

(; dict ;)

def thm_1441 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) (thm_1277 A P_1) (thm_1440 A P_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1442 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_277 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2))))))))) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) hyp_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1443 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (thm_1441 A P_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.forall A P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.and (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2)))) (hol.eq hol.bool (hol.not (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.or (hol.forall A (x_2 : hol.term A => hol.not (P_1 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (P_1 x_2) (hol.and (P_1 y_3) (hol.not (hol.eq A y_3 x_2)))))))))) => thm_1442 A P_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! P))) (Data.Bool.? \lambda x. (Data.Bool.~ (P x)))) ;)

(; dict ;)

def thm_1444 : A : hol.type -> P_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) P_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (x_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.not (P_1 x_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_1443 A P_1) (hol.arr A Number_2ENatural_2Enatural) P_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) x)))) ;)

(; dict ;)

def thm_1445 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (x_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) x_1)))) :=
  A : hol.type => (A : hol.type => P_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => thm_1444 A P_1) A (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_1446 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)).

(; Theorem: |- ((= (\lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) m)) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1447 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1) (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) m))) (Data.Bool.~ (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1448 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (hol.not (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1) (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) thm_345 (thm_1447 A m_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) x)))) ;)

(; dict ;)

def thm_1449 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) x_2)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_1275 A P_1) A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))).

(; Theorem: |- ((= (\lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) a)) (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1450 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1) (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) a))) (Data.Bool.~ (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1451 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1)) (hol.not (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1) (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) thm_345 (thm_1450 A a_1 m_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) x)))) ;)

(; dict ;)

def thm_1452 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) x_3)))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_1275 A P_1) A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))).

(; Theorem: |- ((= (\lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) b)) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1453 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1) (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) b))) (Data.Bool.~ ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1454 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1)) (hol.not (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1) (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) thm_345 (thm_1453 A b_1 a_2 m_3).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1455 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1456 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_1455 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p))) (= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p))) ;)

(; dict ;)

def thm_1457 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)).

(; Theorem: |- ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) Data.Bool.F)) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1458 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1))) hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) Data.Bool.F))) ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1459 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false)) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (thm_1457 p_1 q_2) (thm_1458 q_2).

(; Theorem: |- ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1460 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p))) (= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))))) ;)

(; dict ;)

def thm_1461 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) thm_91 (thm_1460 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1462 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))).

(; Theorem: |- ((= ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))))) ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1463 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (thm_1461 p_1 q_2) (thm_1462 q_2).

(; Theorem: |- ((= ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) Data.Bool.F))) ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))))) ;)

(; dict ;)

def thm_1464 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false)) (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2)))) (thm_1459 p_1 q_2) (thm_1463 p_1 q_2).

(; Theorem: |- ((= \lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q)))) \lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q)))) ;)

(; dict ;)

def thm_1465 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1))) (__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__550_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_2 q_1)) (hol.or (hol.and __550_2 (hol.not q_1)) (hol.and (hol.not __550_2) q_1))).

(; Theorem: |- ((= (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) p)) (\lambda _550. ((= (Data.Bool.~ ((= _550) q))) ((Data.Bool.\/ ((Data.Bool./\ _550) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _550)) q))) Data.Bool.F)) ;)

(; dict ;)

def thm_1466 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) (__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_2)) (hol.or (hol.and __550_3 (hol.not q_2)) (hol.and (hol.not __550_3) q_2))) p_1 hol.false (thm_1465 q_2) (thm_384 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1467 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_1)) (hol.or (hol.and __550_3 (hol.not q_1)) (hol.and (hol.not __550_3) q_1))) p_2) ((__550_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __550_3 q_1)) (hol.or (hol.and __550_3 (hol.not q_1)) (hol.and (hol.not __550_3) q_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) (thm_1464 p_2 q_1) (thm_1466 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1468 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_2)) (hol.or (hol.and hol.false (hol.not q_2)) (hol.and (hol.not hol.false) q_2))) (thm_1467 q_2 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.F) q))) (Data.Bool.~ (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1469 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.not (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.bool hol.false q_1) (hol.not q_1) thm_345 (thm_1023 q_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ q))) q) ;)

(; dict ;)

def thm_1470 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not q_1)) q_1) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_280 t_1) q_1.

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.F) q))) q) ;)

(; dict ;)

def thm_1471 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.not (hol.not q_1)) q_1 (thm_1469 q_1) (thm_1470 q_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((= Data.Bool.F) q)))) (= q)) ;)

(; dict ;)

def thm_1472 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1))) (hol.eq hol.bool q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.eq hol.bool hol.false q_1)) q_1 thm_91 (thm_1471 q_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) Data.Bool.F) ;)

(; dict ;)

def thm_1473 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.not q_1)) hol.false) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_623 t_1) (hol.not q_1).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) (Data.Bool.\/ Data.Bool.F)) ;)

(; dict ;)

def thm_1474 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.and hol.false (hol.not q_1))) (hol.or hol.false)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.and hol.false (hol.not q_1)) hol.false thm_343 (thm_1473 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)) ((Data.Bool./\ Data.Bool.T) q)) ;)

(; dict ;)

def thm_1475 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.false) q_1) (hol.and hol.true q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.not hol.false)) (hol.and hol.true) q_1 q_1 thm_605 (thm_199 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)) q) ;)

(; dict ;)

def thm_1476 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.false) q_1) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.not hol.false) q_1) (hol.and hol.true q_1) q_1 (thm_1475 q_1) (thm_915 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))) ((Data.Bool.\/ Data.Bool.F) q)) ;)

(; dict ;)

def thm_1477 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)) (hol.or hol.false q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.and hol.false (hol.not q_1))) (hol.or hol.false) (hol.and (hol.not hol.false) q_1) q_1 (thm_1474 q_1) (thm_1476 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))) q) ;)

(; dict ;)

def thm_1478 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)) q_1) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)) (hol.or hol.false q_1) q_1 (thm_1477 q_1) (thm_861 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ((= q) q)) ;)

(; dict ;)

def thm_1479 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (hol.eq hol.bool q_1 q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1))) (hol.eq hol.bool q_1) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)) q_1 (thm_1472 q_1) (thm_1478 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) Data.Bool.T) ;)

(; dict ;)

def thm_1480 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (hol.eq hol.bool q_1 q_1) hol.true (thm_1479 q_1) (thm_864 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q)))) ;)

(; dict ;)

def thm_1481 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) hol.true (thm_1480 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.F) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.F)) q))) ;)

(; dict ;)

def thm_1482 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (thm_1481 q_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1483 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.false q_1)) (hol.or (hol.and hol.false (hol.not q_1)) (hol.and (hol.not hol.false) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_1468 p_2 q_1 hyp_1) (thm_1482 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1484 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_1483 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p))) (= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p))) ;)

(; dict ;)

def thm_1485 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)).

(; Theorem: |- ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) Data.Bool.T)) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1486 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1))) hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) Data.Bool.T))) ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1487 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true)) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (thm_1485 p_1 q_2) (thm_1486 q_2).

(; Theorem: |- ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1488 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p))) (= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))))) ;)

(; dict ;)

def thm_1489 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) thm_91 (thm_1488 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1490 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))).

(; Theorem: |- ((= ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))))) ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1491 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (thm_1489 p_1 q_2) (thm_1490 q_2).

(; Theorem: |- ((= ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) Data.Bool.T))) ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))))) ;)

(; dict ;)

def thm_1492 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true)) (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2)))) (thm_1487 p_1 q_2) (thm_1491 p_1 q_2).

(; Theorem: |- ((= \lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q)))) \lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q)))) ;)

(; dict ;)

def thm_1493 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1))) (__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__548_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_2 q_1)) (hol.or (hol.and __548_2 (hol.not q_1)) (hol.and (hol.not __548_2) q_1))).

(; Theorem: |- ((= (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) p)) (\lambda _548. ((= (Data.Bool.~ ((= _548) q))) ((Data.Bool.\/ ((Data.Bool./\ _548) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ _548)) q))) Data.Bool.T)) ;)

(; dict ;)

def thm_1494 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) (__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_2)) (hol.or (hol.and __548_3 (hol.not q_2)) (hol.and (hol.not __548_3) q_2))) p_1 hol.true (thm_1493 q_2) (thm_438 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1495 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_1)) (hol.or (hol.and __548_3 (hol.not q_1)) (hol.and (hol.not __548_3) q_1))) p_2) ((__548_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.eq hol.bool __548_3 q_1)) (hol.or (hol.and __548_3 (hol.not q_1)) (hol.and (hol.not __548_3) q_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) (thm_1492 p_2 q_1) (thm_1494 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1496 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool p_1 q_2)) (hol.or (hol.and p_1 (hol.not q_2)) (hol.and (hol.not p_1) q_2))) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_2)) (hol.or (hol.and hol.true (hol.not q_2)) (hol.and (hol.not hol.true) q_2))) (thm_1495 q_2 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.T) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1497 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.bool hol.true q_1) q_1 thm_345 (thm_1047 q_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((= Data.Bool.T) q)))) (= (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1498 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1))) (hol.eq hol.bool (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.eq hol.bool hol.true q_1)) (hol.not q_1) thm_91 (thm_1497 q_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1499 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.not q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_613 t_1) (hol.not q_1).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) (Data.Bool.\/ (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1500 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.and hol.true (hol.not q_1))) (hol.or (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.and hol.true (hol.not q_1)) (hol.not q_1) thm_343 (thm_1499 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)) ((Data.Bool./\ Data.Bool.F) q)) ;)

(; dict ;)

def thm_1501 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.true) q_1) (hol.and hol.false q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.not hol.true)) (hol.and hol.false) q_1 q_1 thm_665 (thm_199 q_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)) Data.Bool.F) ;)

(; dict ;)

def thm_1502 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.not hol.true) q_1) hol.false) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.not hol.true) q_1) (hol.and hol.false q_1) hol.false (thm_1501 q_1) (thm_889 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))) ((Data.Bool.\/ (Data.Bool.~ q)) Data.Bool.F)) ;)

(; dict ;)

def thm_1503 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)) (hol.or (hol.not q_1) hol.false)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or (hol.and hol.true (hol.not q_1))) (hol.or (hol.not q_1)) (hol.and (hol.not hol.true) q_1) hol.false (thm_1500 q_1) (thm_1502 q_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.~ q)) Data.Bool.F)) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1504 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.not q_1) hol.false) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_531 t_1) (hol.not q_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1505 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)) (hol.or (hol.not q_1) hol.false) (hol.not q_1) (thm_1503 q_1) (thm_1504 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ((= (Data.Bool.~ q)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1506 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1))) (hol.eq hol.bool (hol.not q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)) (hol.not q_1) (thm_1498 q_1) (thm_1505 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) Data.Bool.T) ;)

(; dict ;)

def thm_1507 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true (thm_1506 q_1) (thm_922 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q)))) ;)

(; dict ;)

def thm_1508 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) hol.true (thm_1507 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((= Data.Bool.T) q))) ((Data.Bool.\/ ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ Data.Bool.T)) q))) ;)

(; dict ;)

def thm_1509 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (thm_1508 q_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1510 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq hol.bool hol.true q_1)) (hol.or (hol.and hol.true (hol.not q_1)) (hol.and (hol.not hol.true) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_1496 p_2 q_1 hyp_1) (thm_1509 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q)))) ;)

(; dict ;)

def thm_1511 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_1510 q_1 p_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1512 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1513 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_448 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_1512 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1514 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_1511 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => thm_1513 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((= p) q))) ((Data.Bool.\/ ((Data.Bool./\ p) (Data.Bool.~ q))) ((Data.Bool./\ (Data.Bool.~ p)) q))) ;)

(; dict ;)

def thm_1515 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_1484 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1)))) => thm_1514 q_1 p_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1516 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_1456 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (hol.eq hol.bool (hol.not (hol.eq hol.bool p_2 q_1)) (hol.or (hol.and p_2 (hol.not q_1)) (hol.and (hol.not p_2) q_1))) (thm_1455 q_1 p_2) (thm_1515 q_1 p_2))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_1517 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_873 q_1 p_2) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))) ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_1518 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))) (thm_1517 A b_1 a_2 y_3 m_4) (thm_359 A b_1 a_2 y_3 m_4).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))) \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_1519 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => thm_1518 A b_1 a_2 y_4 m_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_1520 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))) (thm_81 A) (thm_1519 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))))) (Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b)))))) ;)

(; dict ;)

def thm_1521 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) thm_344 (thm_1520 A b_1 a_2 m_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1522 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_1521 A b_1 a_2 m_3) (thm_363 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1523 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) thm_343 (thm_1522 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))))) (Data.Bool.? \lambda x. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))) x)))) ;)

(; dict ;)

def thm_1524 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1))) x_4)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_1275 A P_1) A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))).

(; Theorem: |- ((= (\lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))) y)) ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))) ;)

(; dict ;)

def thm_1525 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2))) y_1) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2))) y_1.

(; Theorem: |- ((= (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))) y))) (Data.Bool.~ ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_1526 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2))) y_1)) (hol.not (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2))))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool hol.not hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2))) y_1) (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2))) thm_345 (thm_1525 A y_1 b_2 a_3 m_4).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1527 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1528 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (thm_1527 q_1 p_2).

(; Theorem: |- ((= (= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p))) (= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p))) ;)

(; dict ;)

def thm_1529 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1)) (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1)).

(; Theorem: |- ((= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1530 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__542_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_2 q_1)) (hol.and __542_2 (hol.not q_1))) hol.false) (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__542_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_2 q_1)) (hol.and __542_2 (hol.not q_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p)) (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) Data.Bool.F))) ((= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_1531 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) hol.false)) (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1)) (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1)) ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) hol.false) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2))) (thm_1529 p_1 q_2) (thm_1530 q_2).

(; Theorem: |- ((= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1532 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p))) (= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_1533 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) thm_91 (thm_1532 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1534 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))).

(; Theorem: |- ((= ((= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))))) ((= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_1535 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2)))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2))) (thm_1533 p_1 q_2) (thm_1534 q_2).

(; Theorem: |- ((= ((= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p)) (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) Data.Bool.F))) ((= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_1536 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) hol.false)) (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2)))) (thm_1531 p_1 q_2) (thm_1535 p_1 q_2).

(; Theorem: |- ((= \lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q)))) \lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1537 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__542_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_2 q_1)) (hol.and __542_2 (hol.not q_1))) (__542_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_2 q_1)) (hol.and __542_2 (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__542_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_2 q_1)) (hol.and __542_2 (hol.not q_1))).

(; Theorem: |- ((= (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) p)) (\lambda _542. ((= (Data.Bool.~ ((Data.Bool.==> _542) q))) ((Data.Bool./\ _542) (Data.Bool.~ q))) Data.Bool.F)) ;)

(; dict ;)

def thm_1538 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1) ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) hol.false)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.APP_THM hol.bool hol.bool (__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) (__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_2)) (hol.and __542_3 (hol.not q_2))) p_1 hol.false (thm_1537 q_2) (thm_384 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1539 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_1)) (hol.and __542_3 (hol.not q_1))) p_2) ((__542_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __542_3 q_1)) (hol.and __542_3 (hol.not q_1))) hol.false)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1)))) (thm_1536 p_2 q_1) (thm_1538 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1540 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.false) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.false q_2)) (hol.and hol.false (hol.not q_2))) (thm_1539 q_2 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) (Data.Bool.~ Data.Bool.T)) ;)

(; dict ;)

def thm_1541 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.not hol.true)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.imp hol.false q_1) hol.true thm_345 (thm_833 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) Data.Bool.F) ;)

(; dict ;)

def thm_1542 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) hol.false) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.not (hol.imp hol.false q_1)) (hol.not hol.true) hol.false (thm_1541 q_1) thm_13.

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q)))) (= Data.Bool.F)) ;)

(; dict ;)

def thm_1543 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.imp hol.false q_1))) (hol.eq hol.bool hol.false)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.imp hol.false q_1)) hol.false thm_91 (thm_1542 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) ((= Data.Bool.F) Data.Bool.F)) ;)

(; dict ;)

def thm_1544 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))) (hol.eq hol.bool hol.false hol.false)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.false q_1))) (hol.eq hol.bool hol.false) (hol.and hol.false (hol.not q_1)) hol.false (thm_1543 q_1) (thm_1473 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) Data.Bool.T) ;)

(; dict ;)

def thm_1545 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))) (hol.eq hol.bool hol.false hol.false) hol.true (thm_1544 q_1) thm_671.

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1546 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))) hol.true (thm_1545 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.F) q))) ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1547 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))) (thm_1546 q_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1548 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.imp hol.false q_1)) (hol.and hol.false (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (thm_1540 p_2 q_1 hyp_1) (thm_1547 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.F)) ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1549 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.false) => thm_1548 q_1 p_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p))) (= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p))) ;)

(; dict ;)

def thm_1550 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1)) (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1)).

(; Theorem: |- ((= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1551 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__540_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_2 q_1)) (hol.and __540_2 (hol.not q_1))) hol.true) (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__540_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_2 q_1)) (hol.and __540_2 (hol.not q_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p)) (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) Data.Bool.T))) ((= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_1552 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) hol.true)) (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1)) (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1)) ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) hol.true) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2))) (thm_1550 p_1 q_2) (thm_1551 q_2).

(; Theorem: |- ((= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1553 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1.

(; Theorem: |- ((= (= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p))) (= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_1554 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) thm_91 (thm_1553 p_1 q_2).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1555 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))).

(; Theorem: |- ((= ((= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p)) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))))) ((= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_1556 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2)))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2))) (thm_1554 p_1 q_2) (thm_1555 q_2).

(; Theorem: |- ((= ((= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p)) (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) Data.Bool.T))) ((= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))))) ;)

(; dict ;)

def thm_1557 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2))))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) hol.true)) (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2)))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2)))) (thm_1552 p_1 q_2) (thm_1556 p_1 q_2).

(; Theorem: |- ((= \lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q)))) \lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1558 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__540_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_2 q_1)) (hol.and __540_2 (hol.not q_1))) (__540_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_2 q_1)) (hol.and __540_2 (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__540_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_2 q_1)) (hol.and __540_2 (hol.not q_1))).

(; Theorem: |- ((= (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) p)) (\lambda _540. ((= (Data.Bool.~ ((Data.Bool.==> _540) q))) ((Data.Bool./\ _540) (Data.Bool.~ q))) Data.Bool.T)) ;)

(; dict ;)

def thm_1559 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1) ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) hol.true)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.APP_THM hol.bool hol.bool (__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) (__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_2)) (hol.and __540_3 (hol.not q_2))) p_1 hol.true (thm_1558 q_2) (thm_438 p_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1560 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_1)) (hol.and __540_3 (hol.not q_1))) p_2) ((__540_3 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.imp __540_3 q_1)) (hol.and __540_3 (hol.not q_1))) hol.true)) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1)))) (thm_1557 p_2 q_1) (thm_1559 p_2 q_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1561 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2)))) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 hol.true) => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.imp p_1 q_2)) (hol.and p_1 (hol.not q_2))) (hol.eq hol.bool (hol.not (hol.imp hol.true q_2)) (hol.and hol.true (hol.not q_2))) (thm_1560 q_2 p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) (Data.Bool.~ q)) ;)

(; dict ;)

def thm_1562 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.not q_1)) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.imp hol.true q_1) q_1 thm_345 (thm_857 q_1).

(; Theorem: |- ((= (= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q)))) (= (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1563 : q_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not (hol.imp hol.true q_1))) (hol.eq hol.bool (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.not (hol.imp hol.true q_1)) (hol.not q_1) thm_91 (thm_1562 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) ((= (Data.Bool.~ q)) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1564 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.true q_1))) (hol.eq hol.bool (hol.not q_1)) (hol.and hol.true (hol.not q_1)) (hol.not q_1) (thm_1563 q_1) (thm_1499 q_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) Data.Bool.T) ;)

(; dict ;)

def thm_1565 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))) hol.true) :=
  q_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))) (hol.eq hol.bool (hol.not q_1) (hol.not q_1)) hol.true (thm_1564 q_1) (thm_922 q_1).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1566 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))) hol.true (thm_1565 q_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> Data.Bool.T) q))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1567 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))) :=
  q_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))) (thm_1566 q_1) thm_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1568 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.imp hol.true q_1)) (hol.and hol.true (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (thm_1561 p_2 q_1 hyp_1) (thm_1567 q_1).

(; Theorem: |- ((Data.Bool.==> ((= p) Data.Bool.T)) ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q)))) ;)

(; dict ;)

def thm_1569 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 hol.true) => thm_1568 q_1 p_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1570 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_467 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1571 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (thm_448 p_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool p_2 hol.false)) => thm_1570 q_1 p_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1572 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (thm_1569 q_1 p_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.true) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) => thm_1571 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> p) q))) ((Data.Bool./\ p) (Data.Bool.~ q))) ;)

(; dict ;)

def thm_1573 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (thm_1549 q_1 p_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool p_2 hol.false) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1)))) => thm_1572 q_1 p_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_1574 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (thm_1528 q_1 p_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (hol.eq hol.bool (hol.not (hol.imp p_2 q_1)) (hol.and p_2 (hol.not q_1))) (thm_1527 q_1 p_2) (thm_1573 q_1 p_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_1575 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> y_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => y_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_3) (m_4 b_1)))) (thm_1574 A b_1 a_2 y_3 m_4) (thm_368 A b_1 a_2 y_3 m_4).

(; Theorem: |- ((= (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))) y))) ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_1576 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2))) y_1)) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2))))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2))) y_1)) (hol.not (hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (thm_1526 A y_1 b_2 a_3 m_4) (thm_1575 A b_2 a_3 y_1 m_4).

(; Theorem: |- ((= \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))) y))) \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_1577 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1))) y_4)) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_4 : hol.term A => hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1))) y_4)) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (y_4 : hol.term A => thm_1576 A y_4 b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (Data.Bool.~ (\lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))) y)))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ;)

(; dict ;)

def thm_1578 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1))) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_4 : hol.term A => hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1))) y_4)) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (thm_1278 A) (thm_1577 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ;)

(; dict ;)

def thm_1579 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.not ((y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1))) x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (thm_1524 A b_1 a_2 m_3) (thm_1578 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))))) (Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))))) ;)

(; dict ;)

def thm_1580 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) thm_344 (thm_1579 A b_1 a_2 m_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1581 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.and (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (thm_1580 A b_1 a_2 m_3) (thm_169 A b_1 a_2 m_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.~ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1582 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (hol.and (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_1523 A b_1 a_2 m_3) (thm_1581 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.~ ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1583 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.not (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (thm_1516 A b_1 a_2 m_3) (thm_1582 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.~ (\lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) b))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1584 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1)) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1)) (hol.not (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (thm_1454 A b_1 a_2 m_3) (thm_1583 A b_1 a_2 m_3).

(; Theorem: |- ((= \lambda b. (Data.Bool.~ (\lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) b))) \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1585 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (b_3 : hol.term A => thm_1584 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. (Data.Bool.~ (\lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1586 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (b_3 : hol.term A => hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (thm_1278 A) (thm_1585 A a_1 m_2).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1587 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.not ((b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (thm_1452 A a_1 m_2) (thm_1586 A a_1 m_2).

(; Theorem: |- ((= (Data.Bool.~ (\lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) a))) (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1588 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1)) (hol.not (hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (thm_1451 A a_1 m_2) (thm_1587 A a_1 m_2).

(; Theorem: |- ((= \lambda a. (Data.Bool.~ (\lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) a))) \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1589 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => thm_1588 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (Data.Bool.~ (\lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) a)))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1590 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1278 A) (thm_1589 A m_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1591 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => hol.not ((a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1449 A m_1) (thm_1590 A m_1).

(; Theorem: |- ((= (Data.Bool.~ (\lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) m))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1592 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (hol.not (hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1448 A m_1) (thm_1591 A m_1).

(; Theorem: |- ((= \lambda m. (Data.Bool.~ (\lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) m))) \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1593 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1592 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. (Data.Bool.~ (\lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) m)))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1594 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1446 A) (thm_1593 A).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1595 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (x_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.not ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_3 : hol.term A => hol.forall A (b_4 : hol.term A => hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1445 A) (thm_1594 A).

(; Theorem: |- ((= (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1596 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1.

(; Theorem: |- ((= (Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1597 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1)) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) thm_343 (thm_1596 A b_1 a_2 m_3).

(; Theorem: |- ((= (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b)) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1598 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1.

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1599 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1)) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1)) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4))) b_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_1597 A b_1 a_2 m_3) (thm_1598 A b_1 a_2 m_3).

(; Theorem: |- ((= \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b))) \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1600 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (b_3 : hol.term A => thm_1599 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1601 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (thm_1278 A) (thm_1600 A a_1 m_2).

(; Theorem: |- ((= (= (Data.Bool.? \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b))))) (= (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1602 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) thm_91 (thm_1601 A a_1 m_2).

(; Theorem: |- ((= \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1603 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (b_3 : hol.term A => thm_1596 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1604 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (thm_1278 A) (thm_1603 A a_1 m_2).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)))) (Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1605 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) thm_343 (thm_1604 A a_1 m_2).

(; Theorem: |- ((= \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b)) \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1606 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => thm_1598 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1607 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (thm_1278 A) (thm_1606 A a_1 m_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b)))) ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1608 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (thm_1605 A a_1 m_2) (thm_1607 A a_1 m_2).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b)))) ((Data.Bool.\/ (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b))))) ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1609 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (thm_1602 A a_1 m_2) (thm_1608 A a_1 m_2).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ;)

(; dict ;)

def thm_1610 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ (p b)) (q b)))) ((Data.Bool.\/ (Data.Bool.? \lambda b. (p b))) (Data.Bool.? \lambda b. (q b))))) ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ (p b)) (q b)))) ((Data.Bool.\/ (Data.Bool.? \lambda b. (p b))) (Data.Bool.? \lambda b. (q b))))) ;)

(; dict ;)

def thm_1611 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ (p b)) (q b)))) ((Data.Bool.\/ (Data.Bool.? \lambda b. (p b))) (Data.Bool.? \lambda b. (q b))))) ;)

(; dict ;)

def thm_1612 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3)))) (thm_1610 A q_1 p_2) (thm_1611 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ;)

(; dict ;)

def thm_1613 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) (q_2 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_44 A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) ;)

(; dict ;)

def thm_1614 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1613 A p_2 q_1.

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ (p b)) (q b)))) ((Data.Bool.\/ (Data.Bool.? \lambda b. (p b))) (Data.Bool.? \lambda b. (q b)))) ;)

(; dict ;)

def thm_1615 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3)))) (thm_1612 A q_1 p_2) (thm_1614 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b)))) ((Data.Bool.\/ (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))) b)))) ;)

(; dict ;)

def thm_1616 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1615 A q_1 p_2) A q_1 p_2) A (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1617 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4))) b_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (thm_1609 A a_1 m_2) (thm_1616 A a_1 m_2).

(; Theorem: |- ((= \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1618 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => thm_1617 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1619 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1278 A) (thm_1618 A m_1).

(; Theorem: |- ((= (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1620 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1.

(; Theorem: |- ((= (Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1621 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) thm_343 (thm_1620 A a_1 m_2).

(; Theorem: |- ((= (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a)) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1622 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1.

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a))) ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1623 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))) a_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (thm_1621 A a_1 m_2) (thm_1622 A a_1 m_2).

(; Theorem: |- ((= \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a))) \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1624 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => thm_1623 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a)))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1625 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1278 A) (thm_1624 A m_1).

(; Theorem: |- ((= (= (Data.Bool.? \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a))))) (= (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1626 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) thm_91 (thm_1625 A m_1).

(; Theorem: |- ((= \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1627 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => thm_1620 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1628 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1278 A) (thm_1627 A m_1).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)))) (Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1629 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) thm_343 (thm_1628 A m_1).

(; Theorem: |- ((= \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a)) \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1630 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => thm_1622 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1631 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (thm_1278 A) (thm_1630 A m_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a)))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1632 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1629 A m_1) (thm_1631 A m_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a)))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a))))) ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1633 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1626 A m_1) (thm_1632 A m_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (p a)) (q a)))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (p a))) (Data.Bool.? \lambda a. (q a))))) ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (p a)) (q a)))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (p a))) (Data.Bool.? \lambda a. (q a))))) ;)

(; dict ;)

def thm_1634 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (p a)) (q a)))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (p a))) (Data.Bool.? \lambda a. (q a))))) ;)

(; dict ;)

def thm_1635 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3)))) (thm_1610 A q_1 p_2) (thm_1634 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (p a)) (q a)))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (p a))) (Data.Bool.? \lambda a. (q a)))) ;)

(; dict ;)

def thm_1636 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3)))) (thm_1635 A q_1 p_2) (thm_1614 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a)))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) a)))) ;)

(; dict ;)

def thm_1637 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1636 A q_1 p_2) A q_1 p_2) A (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))).

(; Theorem: |- ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1638 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4)))) a_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1633 A m_1) (thm_1637 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1639 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1619 A m_1) (thm_1638 A m_1).

(; Theorem: |- ((= \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1640 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1639 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1641 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1446 A) (thm_1640 A).

(; Theorem: |- ((= (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1642 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1.

(; Theorem: |- ((= (Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1643 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) thm_343 (thm_1642 A m_1).

(; Theorem: |- ((= (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m)) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1644 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1.

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1645 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1643 A m_1) (thm_1644 A m_1).

(; Theorem: |- ((= \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m))) \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1646 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1645 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1647 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1446 A) (thm_1646 A).

(; Theorem: |- ((= (= (Data.Bool.? \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m))))) (= (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1648 : A : hol.type -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) thm_91 (thm_1647 A).

(; Theorem: |- ((= \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1649 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1642 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1650 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1446 A) (thm_1649 A).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)))) (Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1651 : A : hol.type -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) thm_343 (thm_1650 A).

(; Theorem: |- ((= \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m)) \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1652 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1644 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1653 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1446 A) (thm_1652 A).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1654 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1651 A) (thm_1653 A).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m))))) ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1655 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1648 A) (thm_1654 A).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m))))) ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m))))) ;)

(; dict ;)

def thm_1656 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x))))) ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m))))) ;)

(; dict ;)

def thm_1657 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3)))) (thm_1610 A q_1 p_2) (thm_1656 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m)))) ;)

(; dict ;)

def thm_1658 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3)))) (thm_1657 A q_1 p_2) (thm_1614 A q_1 p_2).

(; Theorem: |- ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m)))) ;)

(; dict ;)

def thm_1659 : A : hol.type -> q_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) -> p_2 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (p_2 m_3) (q_1 m_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => q_1 m_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => p_2 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1658 A q_1 p_2) (hol.arr A Number_2ENatural_2Enatural) q_1 p_2.

(; Theorem: |- ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) m)))) ;)

(; dict ;)

def thm_1660 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)))) :=
  A : hol.type => (A : hol.type => q_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => p_2 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => thm_1659 A q_1 p_2) A (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))).

(; Theorem: |- ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1661 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) m_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (thm_1655 A) (thm_1660 A).

(; Theorem: |- ((= (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1662 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1641 A) (thm_1661 A).

(; Theorem: |- ((= (Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))))) (Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1663 : A : hol.type -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.REFL (hol.arr hol.bool hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))).

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y)) ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_1664 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) y_1) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2))))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) y_1.

(; Theorem: |- ((= \lambda y. (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y)) \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ;)

(; dict ;)

def thm_1665 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (y_4 : hol.term A => thm_1664 A y_4 b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ;)

(; dict ;)

def thm_1666 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (thm_1278 A) (thm_1665 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y)))) (Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))))) ;)

(; dict ;)

def thm_1667 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) thm_344 (thm_1666 A b_1 a_2 m_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y))) ((Number.Natural.<= (m a)) (m b)))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1668 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (thm_1667 A b_1 a_2 m_3) (thm_169 A b_1 a_2 m_3).

(; Theorem: |- ((= (= ((Data.Bool./\ (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y))) ((Number.Natural.<= (m a)) (m b))))) (= ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1669 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) thm_91 (thm_1668 A b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool./\ (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y))) (Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ;)

(; dict ;)

def thm_1670 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) y_1)) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) y_1) (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) thm_344 (thm_1664 A y_1 b_2 a_3 m_4).

(; Theorem: |- ((= ((Data.Bool./\ (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y)) ((Number.Natural.<= (m a)) (m b)))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1671 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) y_1) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) y_1)) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)) (thm_1670 A y_1 b_2 a_3 m_4) (thm_169 A b_2 a_3 m_4).

(; Theorem: |- ((= \lambda y. ((Data.Bool./\ (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y)) ((Number.Natural.<= (m a)) (m b)))) \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1672 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_4 : hol.term A => hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (y_4 : hol.term A => thm_1671 A y_4 b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.? \lambda y. ((Data.Bool./\ (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y)) ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1673 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_4 : hol.term A => hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_1278 A) (thm_1672 A b_1 a_2 m_3).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y))) ((Number.Natural.<= (m a)) (m b)))) (Data.Bool.? \lambda y. ((Data.Bool./\ (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y)) ((Number.Natural.<= (m a)) (m b)))))) ((= ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1674 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (thm_1669 A b_1 a_2 m_3) (thm_1673 A b_1 a_2 m_3).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool./\ (p x)) q)))) ((= ((Data.Bool./\ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool./\ (p x)) q)))) ;)

(; dict ;)

def thm_1675 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_2 x_3) q_1))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_2 x_3) q_1)))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_2 x_3) q_1))).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.? \lambda y. (p y))) q)) (Data.Bool.? \lambda y. ((Data.Bool./\ (p y)) q)))) ((= ((Data.Bool./\ (Data.Bool.? \lambda y. (p y))) q)) (Data.Bool.? \lambda y. ((Data.Bool./\ (p y)) q)))) ;)

(; dict ;)

def thm_1676 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => p_2 y_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (p_2 y_3) q_1))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => p_2 y_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (p_2 y_3) q_1)))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => p_2 y_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (p_2 y_3) q_1))).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool./\ (p x)) q)))) ((= ((Data.Bool./\ (Data.Bool.? \lambda y. (p y))) q)) (Data.Bool.? \lambda y. ((Data.Bool./\ (p y)) q)))) ;)

(; dict ;)

def thm_1677 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_2 x_3) q_1))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => p_2 y_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (p_2 y_3) q_1)))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_2 x_3) q_1))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_2 x_3) q_1))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => p_2 y_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (p_2 y_3) q_1))) (thm_1675 A q_1 p_2) (thm_1676 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool./\ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool./\ (p x)) q)))) ;)

(; dict ;)

def thm_1678 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) q_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_1 x_3) q_2)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_45 A p_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool./\ (p x)) q))) ;)

(; dict ;)

def thm_1679 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_2 x_3) q_1))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_1678 A p_2 q_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda y. (p y))) q)) (Data.Bool.? \lambda y. ((Data.Bool./\ (p y)) q))) ;)

(; dict ;)

def thm_1680 : A : hol.type -> q_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => p_2 y_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (p_2 y_3) q_1))) :=
  A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (p_2 x_3) q_1))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => p_2 y_3)) q_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (p_2 y_3) q_1))) (thm_1677 A q_1 p_2) (thm_1679 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y))) ((Number.Natural.<= (m a)) (m b)))) (Data.Bool.? \lambda y. ((Data.Bool./\ (\lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))) y)) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1681 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_1680 A q_1 p_2) A q_1 p_2) A (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1682 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4)) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and ((y_5 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) y_4) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (thm_1674 A b_1 a_2 m_3) (thm_1681 A b_1 a_2 m_3).

(; Theorem: |- ((= \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))) \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1683 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (b_3 : hol.term A => thm_1682 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1684 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (thm_1278 A) (thm_1683 A a_1 m_2).

(; Theorem: |- ((= \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))) \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1685 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => thm_1684 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1686 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1278 A) (thm_1685 A m_1).

(; Theorem: |- ((= \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))) \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1687 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1686 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1688 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1446 A) (thm_1687 A).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1689 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1663 A) (thm_1688 A).

(; Theorem: |- ((= (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m)) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1690 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1.

(; Theorem: |- ((= \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m)) \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1691 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1690 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1692 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1446 A) (thm_1691 A).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m)))) ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1693 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1651 A) (thm_1692 A).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m))))) (= ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))))) ;)

(; dict ;)

def thm_1694 : A : hol.type -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))))) :=
  A : hol.type => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) thm_91 (thm_1693 A).

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1695 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1643 A m_1) (thm_1690 A m_1).

(; Theorem: |- ((= \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m))) \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1696 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1695 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1697 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1446 A) (thm_1696 A).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))))) ;)

(; dict ;)

def thm_1698 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))))) :=
  A : hol.type => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (thm_1694 A) (thm_1697 A).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ;)

(; dict ;)

def thm_1699 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m))))) ;)

(; dict ;)

def thm_1700 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m))))) ;)

(; dict ;)

def thm_1701 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3)))) (thm_1699 A q_1 p_2) (thm_1700 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ;)

(; dict ;)

def thm_1702 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_1 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_1 x_3) (q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_46 A p_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x)))) ;)

(; dict ;)

def thm_1703 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1702 A p_2 q_1.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m)))) ;)

(; dict ;)

def thm_1704 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => q_1 m_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (m_3 : hol.term A => hol.or (p_2 m_3) (q_1 m_3)))) (thm_1701 A q_1 p_2) (thm_1703 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (p m))) (Data.Bool.? \lambda m. (q m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (p m)) (q m)))) ;)

(; dict ;)

def thm_1705 : A : hol.type -> q_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) -> p_2 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => p_2 m_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => q_1 m_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (p_2 m_3) (q_1 m_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => p_2 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1704 A q_1 p_2) (hol.arr A Number_2ENatural_2Enatural) q_1 p_2.

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m))) (Data.Bool.? \lambda m. (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m)))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) m)) (\lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) m)))) ;)

(; dict ;)

def thm_1706 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)))) :=
  A : hol.type => (A : hol.type => q_1 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => p_2 : hol.term (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) => thm_1705 A q_1 p_2) A (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1707 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1) ((m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4)))))) m_1)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) (thm_1698 A) (thm_1706 A).

(; Theorem: |- ((= (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a)) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1708 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1.

(; Theorem: |- ((= \lambda a. (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a)) \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1709 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => thm_1708 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1710 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (thm_1278 A) (thm_1709 A m_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a)))) ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1711 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1629 A m_1) (thm_1710 A m_1).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a))))) (= ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1712 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) thm_91 (thm_1711 A m_1).

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a))) ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1713 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1)) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_3) (m_2 b_4))))) a_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (thm_1621 A a_1 m_2) (thm_1708 A a_1 m_2).

(; Theorem: |- ((= \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a))) \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1714 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (a_2 : hol.term A => thm_1713 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a)))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1715 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1278 A) (thm_1714 A m_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a)))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1716 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1712 A m_1) (thm_1715 A m_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (p a))) (Data.Bool.? \lambda a. (q a)))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (p a)) (q a))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (p a))) (Data.Bool.? \lambda a. (q a)))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (p a)) (q a))))) ;)

(; dict ;)

def thm_1717 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (p a))) (Data.Bool.? \lambda a. (q a)))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (p a)) (q a))))) ;)

(; dict ;)

def thm_1718 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3)))) (thm_1699 A q_1 p_2) (thm_1717 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (p a))) (Data.Bool.? \lambda a. (q a)))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (p a)) (q a)))) ;)

(; dict ;)

def thm_1719 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => p_2 a_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => q_1 a_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_3 : hol.term A => hol.or (p_2 a_3) (q_1 a_3)))) (thm_1718 A q_1 p_2) (thm_1703 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a))) (Data.Bool.? \lambda a. (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a)))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) a)) (\lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) a)))) ;)

(; dict ;)

def thm_1720 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1719 A q_1 p_2) A q_1 p_2) A (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1721 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => (a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2) ((a_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_3) (m_1 b_4))))) a_2)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (thm_1716 A m_1) (thm_1720 A m_1).

(; Theorem: |- ((= (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b)) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1722 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1.

(; Theorem: |- ((= \lambda b. (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b)) \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1723 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (b_3 : hol.term A => thm_1722 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1724 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (thm_1278 A) (thm_1723 A a_1 m_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b)))) ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1725 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (thm_1605 A a_1 m_2) (thm_1724 A a_1 m_2).

(; Theorem: |- ((= (= ((Data.Bool.\/ (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b))))) (= ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1726 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) thm_91 (thm_1725 A a_1 m_2).

(; Theorem: |- ((= ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1727 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1)) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1)) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_4)))) b_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (thm_1597 A b_1 a_2 m_3) (thm_1722 A b_1 a_2 m_3).

(; Theorem: |- ((= \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b))) \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1728 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (b_3 : hol.term A => thm_1727 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1729 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (thm_1278 A) (thm_1728 A a_1 m_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1730 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (thm_1726 A a_1 m_2) (thm_1729 A a_1 m_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. (p b))) (Data.Bool.? \lambda b. (q b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ (p b)) (q b))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. (p b))) (Data.Bool.? \lambda b. (q b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ (p b)) (q b))))) ;)

(; dict ;)

def thm_1731 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ (p x)) (q x))))) ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. (p b))) (Data.Bool.? \lambda b. (q b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ (p b)) (q b))))) ;)

(; dict ;)

def thm_1732 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3)))) (thm_1699 A q_1 p_2) (thm_1731 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. (p b))) (Data.Bool.? \lambda b. (q b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ (p b)) (q b)))) ;)

(; dict ;)

def thm_1733 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => p_2 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or (p_2 x_3) (q_1 x_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => p_2 b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => q_1 b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (p_2 b_3) (q_1 b_3)))) (thm_1732 A q_1 p_2) (thm_1703 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b))) (Data.Bool.? \lambda b. (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b)))) (Data.Bool.? \lambda b. ((Data.Bool.\/ (\lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))) b)) (\lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) b)))) ;)

(; dict ;)

def thm_1734 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term (hol.arr A hol.bool) => thm_1733 A q_1 p_2) A q_1 p_2) A (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1735 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => (b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or ((b_4 : hol.term A => hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3) ((b_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_4)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_4)))) b_3)))) (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) (thm_1730 A a_1 m_2) (thm_1734 A a_1 m_2).

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y)) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1736 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) y_1) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.BETA_CONV A hol.bool (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) y_1.

(; Theorem: |- ((= \lambda y. (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y)) \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))) ;)

(; dict ;)

def thm_1737 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (y_4 : hol.term A => thm_1736 A y_4 b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1738 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (thm_1278 A) (thm_1737 A b_1 a_2 m_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y)))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1739 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (thm_365 A b_1 a_2 m_3) (thm_1738 A b_1 a_2 m_3).

(; Theorem: |- ((= (= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y))))) (= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1740 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)))) (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4))) (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) thm_91 (thm_1739 A b_1 a_2 m_3).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y))) ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1741 : A : hol.type -> y_1 : hol.term A -> b_2 : hol.term A -> a_3 : hol.term A -> m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) y_1)) (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))))) :=
  A : hol.type => y_1 : hol.term A => b_2 : hol.term A => a_3 : hol.term A => m_4 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))))) (hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_5) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) y_1) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 a_3)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 y_1) (m_4 b_2)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_4 a_3) (m_4 b_2))) (thm_365 A b_2 a_3 m_4) (thm_1736 A y_1 b_2 a_3 m_4).

(; Theorem: |- ((= \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y))) \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))) ;)

(; dict ;)

def thm_1742 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (y_4 : hol.term A => thm_1741 A y_4 b_1 a_2 m_3).

(; Theorem: |- ((= (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y)))) (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1743 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (thm_1278 A) (thm_1742 A b_1 a_2 m_3).

(; Theorem: |- ((= ((= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y)))) (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y))))) ((= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1744 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)))) (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)))) (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (thm_1740 A b_1 a_2 m_3) (thm_1743 A b_1 a_2 m_3).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x))))) ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x))))) ;)

(; dict ;)

def thm_1745 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool.\/ p) (q y))))) ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool.\/ p) (q y))))) ;)

(; dict ;)

def thm_1746 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.or p_2 (q_1 y_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.or p_2 (q_1 y_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.or p_2 (q_1 y_3)))).

(; Theorem: |- ((= ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x))))) ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool.\/ p) (q y))))) ;)

(; dict ;)

def thm_1747 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.or p_2 (q_1 y_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.or p_2 (q_1 y_3)))) (thm_1745 A q_1 p_2) (thm_1746 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x))))) ;)

(; dict ;)

def thm_1748 : A : hol.type -> p_1 : hol.term hol.bool -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.or p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_1 (q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term hol.bool => thm_47 A p_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.\/ p) (q x)))) ;)

(; dict ;)

def thm_1749 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_1748 A p_2 q_1.

(; Theorem: |- ((= ((Data.Bool.\/ p) (Data.Bool.? \lambda y. (q y)))) (Data.Bool.? \lambda y. ((Data.Bool.\/ p) (q y)))) ;)

(; dict ;)

def thm_1750 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.or p_2 (q_1 y_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.or p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.or p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => q_1 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.or p_2 (q_1 y_3)))) (thm_1747 A q_1 p_2) (thm_1749 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y)))) (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (\lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))) y)))) ;)

(; dict ;)

def thm_1751 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_1750 A q_1 p_2) A q_1 p_2) A (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))).

(; Theorem: |- ((= ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1752 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => m_3 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.EQ_MP (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) ((y_5 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))) y_4)))) (hol.eq hol.bool (hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_5) (m_3 b_1)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 y_4) (m_3 b_1)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_3 a_2) (m_3 b_1)))))) (thm_1744 A b_1 a_2 m_3) (thm_1751 A b_1 a_2 m_3).

(; Theorem: |- ((= \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1753 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (b_3 : hol.term A => thm_1752 A b_3 a_1 m_2).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1754 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (thm_1278 A) (thm_1753 A a_1 m_2).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1755 : A : hol.type -> a_1 : hol.term A -> m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))))) :=
  A : hol.type => a_1 : hol.term A => m_2 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 a_1))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_5) (m_2 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 a_1)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 y_4) (m_2 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_2 a_1) (m_2 b_3)))))) (thm_1735 A a_1 m_2) (thm_1754 A a_1 m_2).

(; Theorem: |- ((= \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))) ;)

(; dict ;)

def thm_1756 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (a_2 : hol.term A => thm_1755 A a_2 m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda a. ((Data.Bool.\/ (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))) (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1757 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_1278 A) (thm_1756 A m_1).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1758 : A : hol.type -> m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.TRANS hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1721 A m_1) (thm_1757 A m_1).

(; Theorem: |- ((= \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1759 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hol.ABS_THM (hol.arr A Number_2ENatural_2Enatural) hol.bool (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => thm_1758 A m_1).

(; Theorem: |- ((= (Data.Bool.? \lambda m. ((Data.Bool.\/ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1760 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool)) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (thm_1446 A) (thm_1759 A).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1761 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (thm_1707 A) (thm_1760 A).

(; Theorem: |- ((= ((Data.Bool.\/ (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1762 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (thm_1689 A) (thm_1761 A).

(; Theorem: |- ((= (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ (Data.Bool.? \lambda y. ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b)))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1763 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.or (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (thm_1662 A) (thm_1762 A).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b))))))))) ;)

(; dict ;)

def thm_1764 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))))) :=
  A : hol.type => hol.TRANS hol.bool (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => hol.or (hol.and (hol.forall A (y_4 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3))))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (thm_1595 A) (thm_1763 A).

(; Theorem: |- (Data.Bool.? \lambda m. (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda y. ((Data.Bool.\/ ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.\/ (Data.Bool.~ ((Number.Natural.< (m y)) (m a)))) ((Number.Natural.< (m y)) (m b))))) (Data.Bool.~ ((Number.Natural.<= (m a)) (m b))))) ((Data.Bool./\ ((Data.Bool./\ ((Number.Natural.< (m y)) (m a))) (Data.Bool.~ ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ;)

(; dict ;)

def thm_1765 : A : hol.type -> hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hol.EQ_MP (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A Number_2ENatural_2Enatural) hol.bool) hol.bool) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (b_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.or (hol.and (hol.forall A (y_5 : hol.term A => hol.or (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 a_2))) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_5) (m_1 b_3)))) (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))) (hol.and (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))))) (thm_1764 A) (thm_290 A hyp_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1766 : A : hol.type -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) -> hyp_4 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof hol.false :=
  A : hol.type => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => hyp_4 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1246 A hyp_1 hyp_2 hyp_3 (thm_1765 A hyp_4).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1767 : A : hol.type -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) -> hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) -> hyp_4 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof hol.false :=
  A : hol.type => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => hyp_4 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hol.PROVE_HYP (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) hol.false (hol.EQ_MP (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) thm_318 (thm_319 hyp_3)) (hyp_5 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => thm_1766 A hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F) ;)

(; dict ;)

def thm_1768 : A : hol.type -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) -> hyp_3 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => hyp_3 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hyp_4 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) => thm_1767 A hyp_1 hyp_4 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) ;)

(; dict ;)

def thm_1769 : A : hol.type -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) -> hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) -> hyp_3 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => hyp_3 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hol.EQ_MP (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))) thm_304 (thm_1768 A hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m)))))) ;)

(; dict ;)

def thm_1770 : A : hol.type -> hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) -> hyp_2 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => hyp_2 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hyp_3 : hol.proof (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) => thm_1769 A hyp_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))))) ;)

(; dict ;)

def thm_1771 : A : hol.type -> hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1))))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hyp_2 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) => thm_1770 A hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m)))))))) ;)

(; dict ;)

def thm_1772 : A : hol.type -> hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1771 A hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)))) ;)

(; dict ;)

def thm_1773 : A : hol.type -> hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) :=
  A : hol.type => hol.EQ_MP (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.not (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))))))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (thm_313 A) (thm_1772 A).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda n. (Data.Bool.~ ((Number.Natural.< n) n)))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F))) ;)

(; dict ;)

def thm_1774 : A : hol.type -> hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))) :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hol.EQ_MP (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (thm_292 A) ((A : hol.type => hol.EQ_MP (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (hol.imp (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)))) (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.not (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_1 n_1))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false))))) (thm_294 A) (thm_299 A (thm_300 A))) A (thm_1773 A)) (thm_290 A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< m) n)) ((Number.Natural.<= n) p))) ((Number.Natural.< m) p)))))) ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F)) ;)

(; dict ;)

def thm_1775 : A : hol.type -> hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (p_3 : hol.term Number_2ENatural_2Enatural => hol.imp (hol.and (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 p_3)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 p_3))))) (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false)) :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1774 A hyp_1 thm_48.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= (Data.Bool.~ ((Number.Natural.<= m) n))) ((Number.Natural.< n) m))))) Data.Bool.F) ;)

(; dict ;)

def thm_1776 : A : hol.type -> hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof (hol.imp (hol.forall Number_2ENatural_2Enatural (m_1 : hol.term Number_2ENatural_2Enatural => hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq hol.bool (hol.not (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) m_1 n_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) n_2 m_1)))) hol.false) :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1775 A hyp_1 thm_49.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1777 : A : hol.type -> hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof hol.false :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1776 A hyp_1 thm_50.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_1778 : A : hol.type -> hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) -> hol.proof hol.false :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => hol.PROVE_HYP (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) hol.false (thm_290 A hyp_1) (hyp_2 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1777 A hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))))) Data.Bool.F) ;)

(; dict ;)

def thm_1779 : A : hol.type -> hol.proof (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) hol.false) :=
  A : hol.type => hyp_1 : hol.proof (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) => thm_1778 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Number.Natural.< (m y)) (m a))) ((Number.Natural.< (m y)) (m b))))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1780 : A : hol.type -> hol.proof (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => hol.EQ_MP (hol.imp (hol.not (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3))))))) hol.false) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_289 A) (thm_1779 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b)))))) ;)

(; dict ;)

def thm_1781 : A : hol.type -> hol.proof (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) :=
  A : hol.type => hol.EQ_MP (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 a_2)) (Number_2ENatural_2E_3C (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 y_4) (m_1 b_3)))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (hol.forall (hol.arr A Number_2ENatural_2Enatural) (m_1 : hol.term (hol.arr A Number_2ENatural_2Enatural) => hol.forall A (a_2 : hol.term A => hol.forall A (b_3 : hol.term A => hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 a_2) (Relation_2Emeasure (hol.arr (hol.arr A Number_2ENatural_2Enatural) (hol.arr A (hol.arr A hol.bool))) m_1 y_4 b_3))) (Number_2ENatural_2E_3C_3D (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (m_1 a_2) (m_1 b_3)))))) (thm_177 A) (thm_1780 A).
