
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dthm_2Da7.

Set_2Eset : hol.type -> hol.type.

Set_2Emember : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Set_2Euniverse : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : hol.proof hol.true.

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_2 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_3 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_4 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_5 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_7 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_8 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))))).

(; axiom ;)

thm_9 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_10 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_11 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_12 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_13 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_14 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_15 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))).

(; axiom ;)

thm_16 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))))).

(; axiom ;)

thm_17 : A : hol.type -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.and p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_1 (q_2 x_3)))))).

(; axiom ;)

thm_18 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))).

(; axiom ;)

thm_19 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))).

(; axiom ;)

thm_20 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A)))).

(; axiom ;)

thm_21 : A : hol.type -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_22 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_23 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_24 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (thm_23 B A) (thm_23 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ;)

(; dict ;)

def thm_25 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (thm_22 B A) (thm_24 B A).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_26 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)).

(; Theorem: |- ((= \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_27 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))).

(; Theorem: |- ((= \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_28 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (thm_27 B A f_1) (thm_27 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_29 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (thm_26 A) (thm_28 B A f_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_30 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (hol.forall (hol.arr B A)) (hol.forall (hol.arr B A))) :=
  A : hol.type => B : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (hol.forall (hol.arr B A)).

(; Theorem: |- ((= \lambda g. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) \lambda g. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_31 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (hol.arr B A) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))).

(; Theorem: |- ((= \lambda g. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) \lambda g. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_32 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr (hol.arr B A) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (thm_31 A B f_1 s_2) (thm_31 A B f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))))) (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))))) ;)

(; dict ;)

def thm_33 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (hol.forall (hol.arr B A)) (hol.forall (hol.arr B A)) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (thm_30 A B) (thm_32 A B f_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_34 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) => hyp_1.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_35 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_36 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_37 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (thm_36 B A f_1 g_2 s_3) (thm_36 B A f_1 g_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_38 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (thm_35 A) (thm_37 B A f_1 g_2 s_3).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_39 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) ;)

(; dict ;)

def thm_40 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hol.REFL hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) ;)

(; dict ;)

def thm_41 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (thm_40 B A g_1 f_2 y_3 s_4 x_5) (thm_40 B A g_1 f_2 y_3 s_4 x_5).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) ;)

(; dict ;)

def thm_42 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_5 (f_2 x_6))) (hol.eq A (g_1 y_5) x_6)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_5 (f_2 x_6))) (hol.eq A (g_1 y_5) x_6)))) => thm_34 A B g_1 f_2 s_4 hyp_1 y_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)) ;)

(; dict ;)

def thm_43 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_6 (f_2 x_7))) (hol.eq A (g_1 y_6) x_7)))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_6 (f_2 x_7))) (hol.eq A (g_1 y_6) x_7)))) => thm_42 B A g_1 f_2 y_3 s_4 hyp_1 x_5.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_44 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x__1_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_3) (hol.eq B y_5 (f_2 x__1_6))) (hol.eq A (g_1 y_5) x__1_6)))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) (f_2 x_4))) (hol.eq A (g_1 (f_2 x_4)) x_4)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x__1_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_3) (hol.eq B y_5 (f_2 x__1_6))) (hol.eq A (g_1 y_5) x__1_6)))) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_6 (f_2 x_7))) (hol.eq A (g_1 y_6) x_7)))) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_6 (f_2 x_7))) (hol.eq A (g_1 y_6) x_7)))) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (thm_41 B A g_1 f_2 y_3 s_4 x_5) (thm_43 B A g_1 f_2 y_3 s_4 x_5 hyp_1)) B A g_1 f_2 y_3 s_4 x_5 hyp_1) B A g_1 f_2 (f_2 x_4) s_3 x_4 hyp_1.

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_45 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_46 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_47 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_46 A s_1 x_2) (thm_46 A s_1 x_2).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_48 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_49 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_48 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_50 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_49 t_1 hyp_1) thm_0.

(; Theorem: |- t ;)

(; dict ;)

def thm_51 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_52 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_51 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_0).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_53 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_50 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_52 t_1 hyp_1).

(; Theorem: |- ((= ((Set.member x) s)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_54 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_53 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.T) ;)

(; dict ;)

def thm_55 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_54 A s_1 x_2) (thm_39 A s_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member x) s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_56 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true thm_45 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_47 A s_1 x_2) (thm_55 A s_1 x_2 hyp_1)).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_57 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_58 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_57 A x_1) (thm_57 A x_1).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_59 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_60 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_59 A) (thm_59 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_61 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_35 A) (thm_60 A).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_62 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_53 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_63 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_1 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_64 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_62 A x_1) (thm_63 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_65 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_57 A x_1) (thm_64 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_66 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B x_1 x_1) hol.true) :=
  B : hol.type => x_1 : hol.term B => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_58 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_61 A) (thm_65 A) x_1)) B x_1.

(; Theorem: |- ((= ((= (f x)) (f x))) Data.Bool.T) ;)

(; dict ;)

def thm_67 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_2 x_1) (f_2 x_1)) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => (B : hol.type => x_1 : hol.term B => thm_66 B x_1) B (f_2 x_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_68 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) (hol.and hol.true hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (hol.and hol.true) (hol.eq B (f_1 x_3) (f_1 x_3)) hol.true (thm_56 A s_2 x_3 hyp_1) (thm_67 A B x_3 f_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_69 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_70 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_69 t_1) (thm_69 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_71 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_72 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_73 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_72 thm_72.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_74 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_71 thm_73.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_75 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_2 t_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_76 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_77 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_78 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_76 q_1 p_2) (thm_77 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_79 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_80 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_81 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_79 p_1) (thm_80 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_82 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_83 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_3 (thm_82 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_84 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_81 p_1) (thm_83 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_85 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_86 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_84 p_2) (thm_85 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_87 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_78 q_1 p_2) (thm_86 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_88 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_89 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_87 q_1 p_2) (thm_88 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_90 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_89 q_1 p_2 hyp_1 q_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_91 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_92 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_93 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_91 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_92 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_94 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_93 q_2 p_1 hyp_1 hyp_2) (thm_91 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_95 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_94 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_96 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_95 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_97 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_90 q_2 p_1 hyp_1 (thm_96 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_98 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_87 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_99 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_100 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_99 x_2 q_3 p_1 hyp_2 (thm_91 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_101 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_100 p_2 x_3 q_1 hyp_1 hyp_3 (thm_92 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_102 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_101 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_103 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_102 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_104 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_98 q_1 p_2) (thm_103 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_105 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_97 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_104 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_106 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_107 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_69 t_1) (thm_75 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_106 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_108 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_109 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_108 t_1) (thm_108 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_110 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_4 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_111 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_112 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_109 t_1) (thm_110 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_111 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_113 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_114 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_113 t_1) (thm_113 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_115 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_5 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_116 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_117 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_114 t_1) (thm_115 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_116 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_118 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_119 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_118 t_1) (thm_118 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_120 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_121 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_122 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_119 t_1) (thm_120 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_121 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_123 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_124 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_123 t_1) (thm_123 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_125 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_7 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_126 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_122 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_124 t_1) (thm_125 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_127 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_117 t_1) (thm_126 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_128 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_112 t_1) (thm_127 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_129 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_107 t_1) (thm_128 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_130 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_129 t_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_131 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_89 q_1 p_2 hyp_1 p_2.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_132 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_93 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_133 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_132 p_2 q_1 hyp_1 hyp_2) (thm_92 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_134 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_133 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_135 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_134 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_136 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_131 q_1 p_2 hyp_1 (thm_135 q_1 p_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_137 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_138 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_74 thm_130 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_137 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_139 : hol.proof (hol.eq hol.bool (hol.and hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_70 t_1) (thm_138 t_1)) hol.true.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) Data.Bool.T) ;)

(; dict ;)

def thm_140 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) (hol.and hol.true hol.true) hol.true (thm_68 B A f_1 s_2 x_3 hyp_1) thm_139.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ;)

(; dict ;)

def thm_141 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.eq hol.bool hol.true (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.SYM hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) hol.true (thm_140 B A f_1 s_2 x_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x))) ;)

(; dict ;)

def thm_142 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.EQ_MP hol.true (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) (thm_141 B A f_1 s_2 x_3 hyp_1) thm_0.

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_143 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x__1_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1) (hol.eq B y_5 (f_3 x__1_6))) (hol.eq A (g_4 y_5) x__1_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 x_2)) x_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x__1_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1) (hol.eq B y_5 (f_3 x__1_6))) (hol.eq A (g_4 y_5) x__1_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => thm_44 B A g_4 f_3 s_1 x_2 hyp_1 (thm_142 B A f_3 s_1 x_2 hyp_2).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_144 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x__1_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1) (hol.eq B y_5 (f_3 x__1_6))) (hol.eq A (g_4 y_5) x__1_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 x_2)) x_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x__1_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1) (hol.eq B y_5 (f_3 x__1_6))) (hol.eq A (g_4 y_5) x__1_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq A (g_4 (f_3 x_2)) x_2) (thm_39 A s_1 x_2 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => thm_143 B A s_1 x_2 f_3 g_4 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_145 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x__1_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_3) (hol.eq B y_5 (f_1 x__1_6))) (hol.eq A (g_2 y_5) x__1_6)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.forall A (x__1_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_3) (hol.eq B y_5 (f_1 x__1_6))) (hol.eq A (g_2 y_5) x__1_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => thm_144 B A s_3 x_4 f_1 g_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_146 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x__1_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_3) (hol.eq B y_4 (f_1 x__1_5))) (hol.eq A (g_2 y_4) x__1_5)))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x__1_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_3) (hol.eq B y_4 (f_1 x__1_5))) (hol.eq A (g_2 y_4) x__1_5)))) => x_4 : hol.term A => thm_145 B A f_1 g_2 s_3 x_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_147 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5)))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5)))) => hol.PROVE_HYP (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5)))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (thm_34 A B g_2 f_1 s_3 hyp_1) (hyp_2 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5)))) => hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (thm_38 B A f_1 g_2 s_3) (thm_146 B A f_1 g_2 s_3 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_148 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) => thm_147 B A f_2 g_1 s_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_149 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) => hyp_1.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_150 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B) (hol.forall B)) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B).

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_151 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.REFL (hol.arr B hol.bool) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))).

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_152 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr B hol.bool) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (thm_151 A B g_1 f_2 s_3) (thm_151 A B g_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) ;)

(; dict ;)

def thm_153 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (thm_150 B) (thm_152 A B g_1 f_2 s_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) ;)

(; dict ;)

def thm_154 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) ;)

(; dict ;)

def thm_155 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (thm_154 B A g_1 f_2 y_3 s_4) (thm_154 B A g_1 f_2 y_3 s_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_156 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) (thm_35 A) (thm_155 B A g_1 f_2 y_3 s_4).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x))) ;)

(; dict ;)

def thm_157 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) => hyp_1.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_158 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.eq B y_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) hyp_1.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_159 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (thm_157 B A f_1 y_2 s_3 x_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) => thm_158 B A f_1 y_2 s_3 x_4 hyp_2).

(; Theorem: |- ((= y) (f x)) ;)

(; dict ;)

def thm_160 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B y_4 (f_3 x_2))) -> hol.proof (hol.eq B y_4 (f_3 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B y_4 (f_3 x_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_97 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B y_4 (f_3 x_2)) hyp_1.

(; Theorem: |- ((= y) (f x)) ;)

(; dict ;)

def thm_161 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B y_4 (f_3 x_2))) -> hol.proof (hol.eq B y_4 (f_3 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B y_4 (f_3 x_2))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B y_4 (f_3 x_2))) (hol.eq B y_4 (f_3 x_2)) (thm_157 B A f_3 y_4 s_1 x_2 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B y_4 (f_3 x_2))) => thm_160 A B s_1 x_2 f_3 y_4 hyp_2).

(; Theorem: |- ((= y) (f x)) ;)

(; dict ;)

def thm_162 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B y_3 (f_2 x_1)) -> hol.proof (hol.eq B y_3 (f_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hyp_1 : hol.proof (hol.eq B y_3 (f_2 x_1)) => hyp_1.

(; Theorem: |- ((= (= (\lambda _10969. ((= (g _10969)) x) y))) (= (\lambda _10969. ((= (g _10969)) x) y))) ;)

(; dict ;)

def thm_163 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) y_1)) (hol.eq hol.bool ((__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) y_1)).

(; Theorem: |- ((= (\lambda _10969. ((= (g _10969)) x) (f x))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_164 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) (f_1 x_2)) (hol.eq A (g_3 (f_1 x_2)) x_2)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => hol.BETA_CONV B hol.bool (__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) (f_1 x_2).

(; Theorem: |- ((= ((= (\lambda _10969. ((= (g _10969)) x) y)) (\lambda _10969. ((= (g _10969)) x) (f x)))) ((= (\lambda _10969. ((= (g _10969)) x) y)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_165 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2) ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) (f_1 x_3))) (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2) (hol.eq A (g_4 (f_1 x_3)) x_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2)) (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2)) ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) (f_1 x_3)) (hol.eq A (g_4 (f_1 x_3)) x_3) (thm_163 A B y_2 x_3 g_4) (thm_164 A B f_1 x_3 g_4).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_166 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= (\lambda _10969. ((= (g _10969)) x) y)) ((= (g y)) x)) ;)

(; dict ;)

def thm_167 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) y_1) (hol.eq A (g_3 y_1) x_2)) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => hol.BETA_CONV B hol.bool (__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) y_1.

(; Theorem: |- ((= (= (\lambda _10969. ((= (g _10969)) x) y))) (= ((= (g y)) x))) ;)

(; dict ;)

def thm_168 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) y_1)) (hol.eq hol.bool (hol.eq A (g_3 y_1) x_2))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10969_4 : hol.term B => hol.eq A (g_3 __10969_4) x_2) y_1) (hol.eq A (g_3 y_1) x_2) thm_166 (thm_167 A B y_1 x_2 g_3).

(; Theorem: |- ((= ((= (g (f x))) x)) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_169 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq A (g_3 (f_2 x_1)) x_1) (hol.eq A (g_3 (f_2 x_1)) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL hol.bool (hol.eq A (g_3 (f_2 x_1)) x_1).

(; Theorem: |- ((= ((= (\lambda _10969. ((= (g _10969)) x) y)) ((= (g (f x))) x))) ((= ((= (g y)) x)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_170 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2) (hol.eq A (g_4 (f_1 x_3)) x_3)) (hol.eq hol.bool (hol.eq A (g_4 y_2) x_3) (hol.eq A (g_4 (f_1 x_3)) x_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2)) (hol.eq hol.bool (hol.eq A (g_4 y_2) x_3)) (hol.eq A (g_4 (f_1 x_3)) x_3) (hol.eq A (g_4 (f_1 x_3)) x_3) (thm_168 A B y_2 x_3 g_4) (thm_169 B A x_3 f_1 g_4).

(; Theorem: |- ((= ((= (\lambda _10969. ((= (g _10969)) x) y)) (\lambda _10969. ((= (g _10969)) x) (f x)))) ((= ((= (g y)) x)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_171 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2) ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) (f_1 x_3))) (hol.eq hol.bool (hol.eq A (g_4 y_2) x_3) (hol.eq A (g_4 (f_1 x_3)) x_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => hol.TRANS hol.bool (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2) ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) (f_1 x_3))) (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2) (hol.eq A (g_4 (f_1 x_3)) x_3)) (hol.eq hol.bool (hol.eq A (g_4 y_2) x_3) (hol.eq A (g_4 (f_1 x_3)) x_3)) (thm_165 A B f_1 y_2 x_3 g_4) (thm_170 A B f_1 y_2 x_3 g_4).

(; Theorem: |- ((= \lambda _10969. ((= (g _10969)) x)) \lambda _10969. ((= (g _10969)) x)) ;)

(; dict ;)

def thm_172 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr B hol.bool) (__10969_3 : hol.term B => hol.eq A (g_2 __10969_3) x_1) (__10969_3 : hol.term B => hol.eq A (g_2 __10969_3) x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => hol.REFL (hol.arr B hol.bool) (__10969_3 : hol.term B => hol.eq A (g_2 __10969_3) x_1).

(; Theorem: |- ((= (\lambda _10969. ((= (g _10969)) x) y)) (\lambda _10969. ((= (g _10969)) x) (f x))) ;)

(; dict ;)

def thm_173 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B y_2 (f_1 x_3)) -> hol.proof (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2) ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) (f_1 x_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B y_2 (f_1 x_3)) => hol.APP_THM B hol.bool (__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) (__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_3) y_2 (f_1 x_3) (thm_172 A B x_3 g_4) (thm_162 A B x_3 f_1 y_2 hyp_1).

(; Theorem: |- ((= ((= (g y)) x)) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_174 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B y_3 (f_1 x_2)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_4 y_3) x_2) (hol.eq A (g_4 (f_1 x_2)) x_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B y_3 (f_1 x_2)) => hol.EQ_MP (hol.eq hol.bool ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_2) y_3) ((__10969_5 : hol.term B => hol.eq A (g_4 __10969_5) x_2) (f_1 x_2))) (hol.eq hol.bool (hol.eq A (g_4 y_3) x_2) (hol.eq A (g_4 (f_1 x_2)) x_2)) (thm_171 A B f_1 y_3 x_2 g_4) (thm_173 A B f_1 y_3 x_2 g_4 hyp_1).

(; Theorem: |- ((= ((= (g (f x))) x)) ((= (g y)) x)) ;)

(; dict ;)

def thm_175 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B y_1 (f_3 x_2)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_4 (f_3 x_2)) x_2) (hol.eq A (g_4 y_1) x_2)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B y_1 (f_3 x_2)) => hol.SYM hol.bool (hol.eq A (g_4 y_1) x_2) (hol.eq A (g_4 (f_3 x_2)) x_2) (thm_174 B A f_3 x_2 y_1 g_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_176 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_177 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (thm_176 B A f_1 g_2 s_3 x_4) (thm_176 B A f_1 g_2 s_3 x_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_178 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_2 (f_1 x_5)) x_5))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_2 (f_1 x_5)) x_5))) => thm_149 B A f_1 g_2 s_3 hyp_1 x_4.

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_179 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_4 (f_3 x_5)) x_5))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 x_2)) x_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_4 (f_3 x_5)) x_5))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_2 (f_1 x_5)) x_5))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4)) (thm_177 B A f_1 g_2 s_3 x_4) (thm_178 B A f_1 g_2 s_3 x_4 hyp_1)) B A f_3 g_4 s_1 x_2 hyp_1 (thm_39 A s_1 x_2 hyp_2).

(; Theorem: |- ((= (g y)) x) ;)

(; dict ;)

def thm_180 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) -> hyp_2 : hol.proof (hol.eq B y_4 (f_1 x_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.eq A (g_5 y_4) x_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) => hyp_2 : hol.proof (hol.eq B y_4 (f_1 x_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.EQ_MP (hol.eq A (g_5 (f_1 x_3)) x_3) (hol.eq A (g_5 y_4) x_3) (thm_175 B A y_4 x_3 f_1 g_5 hyp_2) (thm_179 B A s_2 x_3 f_1 g_5 hyp_1 hyp_3).

(; Theorem: |- ((= (g y)) x) ;)

(; dict ;)

def thm_181 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) -> hyp_2 : hol.proof (hol.eq B y_4 (f_1 x_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.eq A (g_5 y_4) x_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) => hyp_2 : hol.proof (hol.eq B y_4 (f_1 x_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.PROVE_HYP (hol.eq B y_4 (f_1 x_3)) (hol.eq A (g_5 y_4) x_3) (thm_162 A B x_3 f_1 y_4 hyp_2) (hyp_4 : hol.proof (hol.eq B y_4 (f_1 x_3)) => thm_180 B A f_1 s_2 x_3 y_4 g_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((= (g y)) x) ;)

(; dict ;)

def thm_182 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) -> hyp_2 : hol.proof (hol.eq B y_4 (f_1 x_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.eq A (g_5 y_4) x_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) => hyp_2 : hol.proof (hol.eq B y_4 (f_1 x_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq A (g_5 y_4) x_3) (thm_39 A s_2 x_3 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => thm_181 B A f_1 s_2 x_3 y_4 g_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= (g y)) x) ;)

(; dict ;)

def thm_183 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B y_4 (f_1 x_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.eq A (g_5 y_4) x_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B y_4 (f_1 x_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.PROVE_HYP (hol.eq B y_4 (f_1 x_3)) (hol.eq A (g_5 y_4) x_3) (thm_161 A B s_2 x_3 f_1 y_4 hyp_2) (hyp_4 : hol.proof (hol.eq B y_4 (f_1 x_3)) => thm_182 B A f_1 s_2 x_3 y_4 g_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((= (g y)) x) ;)

(; dict ;)

def thm_184 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B y_4 (f_1 x_3))) -> hol.proof (hol.eq A (g_5 y_4) x_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B y_4 (f_1 x_3))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq A (g_5 y_4) x_3) (thm_159 B A f_1 y_4 s_2 x_3 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => thm_183 B A f_1 s_2 x_3 y_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)) ;)

(; dict ;)

def thm_185 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_1 (f_2 x_6)) x_6))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_1 (f_2 x_6)) x_6))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) => thm_184 B A f_2 s_4 x_5 y_3 g_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))) ;)

(; dict ;)

def thm_186 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_2 x_5)) x_5))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_2 x_5)) x_5))) => x_5 : hol.term A => thm_185 B A g_1 f_2 y_3 s_4 x_5 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_187 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) => y_4 : hol.term B => hol.EQ_MP (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (thm_156 B A g_1 f_2 y_4 s_3) (thm_186 B A g_1 f_2 y_4 s_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_188 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) => hol.PROVE_HYP (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) (thm_149 B A f_2 g_1 s_3 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) => hol.EQ_MP (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) (thm_153 A B g_1 f_2 s_3) (thm_187 A B g_1 f_2 s_3 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) ;)

(; dict ;)

def thm_189 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) => thm_188 A B g_2 f_1 s_3 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) ;)

(; dict ;)

def thm_190 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hol.PROP_EXT (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5)))) (hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5)))) => thm_148 A B g_2 f_1 s_3 (thm_34 A B g_2 f_1 s_3 hyp_1)) (hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) => thm_189 B A f_1 g_2 s_3 (thm_149 B A f_1 g_2 s_3 hyp_1)).

(; Theorem: |- (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_191 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => thm_190 B A f_1 g_3 s_2.

(; Theorem: |- ((= (= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))) (= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_192 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_193 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool))) :=
  A : hol.type => B : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_194 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_195 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) (thm_194 B A f_1 g_2 s_3) (thm_194 B A f_1 g_2 s_3).

(; Theorem: |- (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_196 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) -> hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) ;)

(; dict ;)

def thm_197 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_4 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_1 x_5)) x_5))) (hol.forall B (y_5 : hol.term B => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq B y_5 (f_1 x_6))) (hol.eq A (g_4 y_5) x_6)))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_4 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_1 x_5)) x_5))) (hol.forall B (y_5 : hol.term B => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq B y_5 (f_1 x_6))) (hol.eq A (g_4 y_5) x_6)))))) => thm_196 A B f_1 s_3 hyp_1 g_2.

(; Theorem: |- ((= \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) ;)

(; dict ;)

def thm_198 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) => hol.ABS_THM (hol.arr B A) hol.bool (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))) (g_3 : hol.term (hol.arr B A) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_4 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_1 x_5)) x_5))) (hol.forall B (y_5 : hol.term B => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq B y_5 (f_1 x_6))) (hol.eq A (g_4 y_5) x_6)))))) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_2 y_4) x_5))))) (thm_195 B A f_1 g_2 s_3) (thm_197 B A f_1 g_2 s_3 hyp_1)) B A f_1 g_3 s_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_199 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))) (thm_193 A B) (thm_198 A B f_1 s_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))))) ;)

(; dict ;)

def thm_200 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (thm_192 B A f_1 s_2) (thm_199 A B f_1 s_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_201 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) => hol.SYM hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (thm_200 B A f_1 s_2 hyp_1).

(; Theorem: |- ((= (\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y)) \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x)))) ;)

(; dict ;)

def thm_202 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) ((y_4 : hol.term B => __10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq B y_4 (f_2 x_6))) (hol.eq A __10971_5 x_6))) y_1) (__10971_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_1 (f_2 x_5))) (hol.eq A __10971_4 x_5)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.BETA_CONV B (hol.arr A hol.bool) (y_4 : hol.term B => __10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq B y_4 (f_2 x_6))) (hol.eq A __10971_5 x_6))) y_1.

(; Theorem: |- ((= (g y)) (g y)) ;)

(; dict ;)

def thm_203 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq A (g_2 y_1) (g_2 y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => hol.REFL A (g_2 y_1).

(; Theorem: |- ((= ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y))) (\lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) (g y))) ;)

(; dict ;)

def thm_204 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_5 (f_3 x_7))) (hol.eq A __10971_6 x_7))) y_2 (g_1 y_2)) ((__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_2 (f_3 x_6))) (hol.eq A __10971_5 x_6))) (g_1 y_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM A hol.bool ((y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_5 (f_3 x_7))) (hol.eq A __10971_6 x_7))) y_2) (__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_2 (f_3 x_6))) (hol.eq A __10971_5 x_6))) (g_1 y_2) (g_1 y_2) (thm_202 B A y_2 f_3 s_4) (thm_203 B A y_2 g_1).

(; Theorem: |- ((= (\lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) (g y))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_205 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_3 (f_2 x_6))) (hol.eq A __10971_5 x_6))) (g_1 y_3)) (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A (g_1 y_3) x_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_3 (f_2 x_6))) (hol.eq A __10971_5 x_6))) (g_1 y_3).

(; Theorem: |- ((= ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_206 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_5 (f_3 x_7))) (hol.eq A __10971_6 x_7))) y_2 (g_1 y_2)) (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_2 (f_3 x_5))) (hol.eq A (g_1 y_2) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hol.TRANS hol.bool ((y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_5 (f_3 x_7))) (hol.eq A __10971_6 x_7))) y_2 (g_1 y_2)) ((__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_2 (f_3 x_6))) (hol.eq A __10971_5 x_6))) (g_1 y_2)) (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_2 (f_3 x_5))) (hol.eq A (g_1 y_2) x_5))) (thm_204 A B g_1 y_2 f_3 s_4) (thm_205 B A g_1 f_3 y_2 s_4).

(; Theorem: |- ((= \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y))) \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))) ;)

(; dict ;)

def thm_207 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_2 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_1 y_4)) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM B hol.bool (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_2 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_1 y_4)) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (y_4 : hol.term B => thm_206 A B g_1 y_4 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y)))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) ;)

(; dict ;)

def thm_208 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_2 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_1 y_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_2 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_1 y_4)) (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_4 (f_2 x_5))) (hol.eq A (g_1 y_4) x_5))) (thm_150 B) (thm_207 A B g_1 f_2 s_3).

(; Theorem: |- ((= \lambda g. (Data.Bool.! \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y)))) \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))) ;)

(; dict ;)

def thm_209 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4))) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.ABS_THM (hol.arr B A) hol.bool (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4))) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))) (g_3 : hol.term (hol.arr B A) => thm_208 A B g_3 f_1 s_2).

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_210 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4))) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))) (thm_193 A B) (thm_209 A B f_1 s_2).

(; Theorem: |- ((= (= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y)))))) (= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))))) ;)

(; dict ;)

def thm_211 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) thm_166 (thm_210 A B f_1 s_2).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_212 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= y) y) ;)

(; dict ;)

def thm_213 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.eq A y_1 y_1) :=
  A : hol.type => y_1 : hol.term A => hol.REFL A y_1.

(; Theorem: |- ((= ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) y)) (\lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y)) ;)

(; dict ;)

def thm_214 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_5 (f_3 x_7))) (hol.eq A __10971_6 x_7))) y_2 y_1) ((__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_2 (f_3 x_6))) (hol.eq A __10971_5 x_6))) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM A hol.bool ((y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_5 (f_3 x_7))) (hol.eq A __10971_6 x_7))) y_2) (__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_2 (f_3 x_6))) (hol.eq A __10971_5 x_6))) y_1 y_1 (thm_202 B A y_2 f_3 s_4) (thm_213 A y_1).

(; Theorem: |- ((= (\lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))) ;)

(; dict ;)

def thm_215 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_3 (f_2 x_6))) (hol.eq A __10971_5 x_6))) y_1) (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_3 (f_2 x_5))) (hol.eq A y_1 x_5)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_3 (f_2 x_6))) (hol.eq A __10971_5 x_6))) y_1.

(; Theorem: |- ((= ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) y)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))) ;)

(; dict ;)

def thm_216 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_5 (f_3 x_7))) (hol.eq A __10971_6 x_7))) y_2 y_1) (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_2 (f_3 x_5))) (hol.eq A y_1 x_5)))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hol.TRANS hol.bool ((y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq B y_5 (f_3 x_7))) (hol.eq A __10971_6 x_7))) y_2 y_1) ((__10971_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq B y_2 (f_3 x_6))) (hol.eq A __10971_5 x_6))) y_1) (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B y_2 (f_3 x_5))) (hol.eq A y_1 x_5))) (thm_214 A B y_1 y_2 f_3 s_4) (thm_215 B A y_1 f_3 y_2 s_4).

(; Theorem: |- ((= \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) y)) \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))) ;)

(; dict ;)

def thm_217 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_2 x_7))) (hol.eq A __10971_6 x_7))) y_1 y_4) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_1 (f_2 x_5))) (hol.eq A y_4 x_5)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM A hol.bool (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_2 x_7))) (hol.eq A __10971_6 x_7))) y_1 y_4) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_1 (f_2 x_5))) (hol.eq A y_4 x_5))) (y_4 : hol.term A => thm_216 A B y_4 y_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.? \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) y))) (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) ;)

(; dict ;)

def thm_218 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_2 x_7))) (hol.eq A __10971_6 x_7))) y_1 y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_1 (f_2 x_5))) (hol.eq A y_4 x_5))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_2 x_7))) (hol.eq A __10971_6 x_7))) y_1 y_4) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_1 (f_2 x_5))) (hol.eq A y_4 x_5))) (thm_212 A) (thm_217 B A y_1 f_2 s_3).

(; Theorem: |- ((= \lambda y. (Data.Bool.? \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) y))) \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) ;)

(; dict ;)

def thm_219 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_3 y_4)) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.ABS_THM B hol.bool (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_3 y_4)) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (y_3 : hol.term B => thm_218 B A y_3 f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) y)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))))) ;)

(; dict ;)

def thm_220 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_3 y_4))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_3 y_4)) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (thm_150 B) (thm_219 A B f_1 s_2).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) y))))) ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))))) ;)

(; dict ;)

def thm_221 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_3 y_4)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_3 y_4))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (thm_211 A B f_1 s_2) (thm_220 A B f_1 s_2).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y))))) ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y))))) ;)

(; dict ;)

def thm_222 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((r y) (g y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. ((r y) y))))) ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((r y) (g y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. ((r y) y))))) ;)

(; dict ;)

def thm_223 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.forall A (y_3 : hol.term A => r_1 y_3 (g_2 y_3)))) (hol.forall A (y_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 y_2 y_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.forall A (y_3 : hol.term A => r_1 y_3 (g_2 y_3)))) (hol.forall A (y_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 y_2 y_3))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.forall A (y_3 : hol.term A => r_1 y_3 (g_2 y_3)))) (hol.forall A (y_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 y_2 y_3)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y))))) ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((r y) (g y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. ((r y) y))))) ;)

(; dict ;)

def thm_224 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.forall A (y_3 : hol.term A => r_1 y_3 (g_2 y_3)))) (hol.forall A (y_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 y_2 y_3))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.forall A (y_3 : hol.term A => r_1 y_3 (g_2 y_3)))) (hol.forall A (y_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 y_2 y_3)))) (thm_222 B A r_1) (thm_223 B A r_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_225 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) hol.bool) (hol.forall (hol.arr A (hol.arr B hol.bool))) (hol.forall (hol.arr A (hol.arr B hol.bool)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) hol.bool) (hol.forall (hol.arr A (hol.arr B hol.bool))).

(; Theorem: |- ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) ;)

(; dict ;)

def thm_226 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) ;)

(; dict ;)

def thm_227 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (thm_226 B A r_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) ;)

(; dict ;)

def thm_228 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hyp_1 : hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) ;)

(; dict ;)

def thm_229 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hyp_1 : hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) => hol.SYM hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (thm_228 B A r_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x)))))) ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y))))) ;)

(; dict ;)

def thm_230 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.PROP_EXT (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) (hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) => thm_227 B A r_1 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) => thm_229 B A r_1 hyp_1).

(; Theorem: |- ((= \lambda r. ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x)))))) \lambda r. ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y))))) ;)

(; dict ;)

def thm_231 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr A (hol.arr B hol.bool)) hol.bool (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_230 B A r_1).

(; Theorem: |- ((= (Data.Bool.! \lambda r. ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))))) (Data.Bool.! \lambda r. ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))))) ;)

(; dict ;)

def thm_232 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))))) (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A (hol.arr B hol.bool)) hol.bool) hol.bool (hol.forall (hol.arr A (hol.arr B hol.bool))) (hol.forall (hol.arr A (hol.arr B hol.bool))) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3))))) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) (thm_225 B A) (thm_231 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y))))) ;)

(; dict ;)

def thm_233 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))))) (hol.forall (hol.arr A (hol.arr B hol.bool)) (r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3))))) (thm_232 B A) (thm_8 B A).

(; Theorem: |- ((= (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) ;)

(; dict ;)

def thm_234 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_233 B A r_1.

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((r y) (g y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. ((r y) y)))) ;)

(; dict ;)

def thm_235 : B : hol.type -> A : hol.type -> r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.forall A (y_3 : hol.term A => r_1 y_3 (g_2 y_3)))) (hol.forall A (y_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 y_2 y_3)))) :=
  B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_2 : hol.term (hol.arr A B) => hol.forall A (x_3 : hol.term A => r_1 x_3 (f_2 x_3)))) (hol.forall A (x_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 x_2 y_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.forall A (y_3 : hol.term A => r_1 y_3 (g_2 y_3)))) (hol.forall A (y_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (y_3 : hol.term B => r_1 y_2 y_3)))) (thm_224 B A r_1) (thm_234 B A r_1).

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((r y) (g y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. ((r y) y)))) ;)

(; dict ;)

def thm_236 : A : hol.type -> B : hol.type -> r_1 : hol.term (hol.arr B (hol.arr A hol.bool)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => r_1 y_3 (g_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => r_1 y_2 y_3)))) :=
  A : hol.type => B : hol.type => r_1 : hol.term (hol.arr B (hol.arr A hol.bool)) => (B : hol.type => A : hol.type => r_1 : hol.term (hol.arr A (hol.arr B hol.bool)) => thm_235 B A r_1) A B r_1.

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) (g y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. ((\lambda y. \lambda _10971. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= _10971) x))) y) y)))) ;)

(; dict ;)

def thm_237 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_3 y_4)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => (A : hol.type => B : hol.type => r_1 : hol.term (hol.arr B (hol.arr A hol.bool)) => thm_236 A B r_1) A B (y_3 : hol.term B => __10971_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A __10971_4 x_5))).

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))))) ;)

(; dict ;)

def thm_238 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_4 (g_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => (y_5 : hol.term B => __10971_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A __10971_6 x_7))) y_3 y_4)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) (thm_221 A B f_1 s_2) (thm_237 A B f_1 s_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))))) ;)

(; dict ;)

def thm_239 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (thm_192 B A f_1 s_2) (thm_238 A B f_1 s_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x))))))) ;)

(; dict ;)

def thm_240 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) (thm_239 B A f_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) ;)

(; dict ;)

def thm_241 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) -> hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) => hyp_1.

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_242 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_243 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (thm_242 B A f_1 s_2) (thm_242 B A f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_244 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (thm_35 A) (thm_243 B A f_1 s_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_245 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.REFL (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_246 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.TRANS (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (thm_245 B A f_1 s_2 x_3) (thm_245 B A f_1 s_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_247 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (thm_35 A) (thm_246 B A f_1 s_2 x_3).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_248 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => hyp_1.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_249 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) hyp_1.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_250 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (thm_248 B A f_1 y_2 s_3 x_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => thm_249 B A f_1 y_2 s_3 x_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_251 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_97 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_252 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) (thm_248 B A f_2 y_4 s_3 x_1 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) => thm_251 B A x_1 f_2 s_3 y_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_253 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) => hyp_1.

(; Theorem: |- ((Set.member y) s) ;)

(; dict ;)

def thm_254 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.eq B (f_2 x_1) (f_2 y_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) hyp_1.

(; Theorem: |- ((Set.member y) s) ;)

(; dict ;)

def thm_255 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (thm_253 B A x_1 f_2 s_3 y_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) => thm_254 B A x_1 f_2 s_3 y_4 hyp_2).

(; Theorem: |- ((= (f x)) (f y)) ;)

(; dict ;)

def thm_256 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq B (f_4 x_3) (f_4 y_2))) -> hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq B (f_4 x_3) (f_4 y_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_97 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq B (f_4 x_3) (f_4 y_2)) hyp_1.

(; Theorem: |- ((= (f x)) (f y)) ;)

(; dict ;)

def thm_257 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq B (f_4 x_3) (f_4 y_2))) -> hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq B (f_4 x_3) (f_4 y_2))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq B (f_4 x_3) (f_4 y_2))) (hol.eq B (f_4 x_3) (f_4 y_2)) (thm_253 B A x_3 f_4 s_1 y_2 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq B (f_4 x_3) (f_4 y_2))) => thm_256 A B s_1 y_2 x_3 f_4 hyp_2).

(; Theorem: |- ((Set.member y) s) ;)

(; dict ;)

def thm_258 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) => hyp_1.

(; Theorem: |- ((= (f x)) (f y)) ;)

(; dict ;)

def thm_259 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_260 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_261 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_260 q_2 p_1 hyp_2) (thm_91 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_262 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_261 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_263 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_262 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_264 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_263 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_265 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_266 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_267 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_265 A P_1) (thm_266 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_268 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_269 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_9 A) (thm_268 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_270 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_267 A P_1) (thm_269 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_271 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_264 A P_1 (thm_270 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_272 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_273 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_271 A P_1 (thm_272 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_274 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_273 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_275 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_276 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_274 A Q_2 P_1 hyp_2 (thm_275 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_277 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_276 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_278 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_277 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x_1. ((Data.Bool.==> (\lambda y. (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y) x'))) x_1)) ((= x) y)))) ((Data.Bool.==> (Data.Bool.? \lambda y. (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y) x'))))) ((= x) y))) ;)

(; dict ;)

def thm_279 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall A (x__1_5 : hol.term A => hol.imp ((y_6 : hol.term A => hol.forall A (x_27_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_7))) (hol.eq A y_6 x_27_7))) x__1_5) (hol.eq A x_2 y_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6)))) (hol.eq A x_2 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_278 A Q_1 P_2) A (hol.eq A x_2 y_1) (y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))).

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y') x'))) ;)

(; dict ;)

def thm_280 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_5))) (hol.eq A y_27_1 x_27_5))) -> hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_5))) (hol.eq A y_27_1 x_27_5))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_5))) (hol.eq A y_27_1 x_27_5))) => hyp_1.

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_281 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= ((= ((Set.member y) s)) Data.Bool.T)) ((= ((Set.member y) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_282 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member y) s)) Data.Bool.T)) ((= ((Set.member y) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_283 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) (thm_282 A s_1 y_2) (thm_282 A s_1 y_2).

(; Theorem: |- ((= ((Set.member y) s)) ((= ((Set.member y) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_284 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => (t_1 : hol.term hol.bool => thm_53 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1).

(; Theorem: |- ((= ((Set.member y) s)) Data.Bool.T) ;)

(; dict ;)

def thm_285 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) (thm_284 A s_1 y_2) (thm_258 A s_1 y_2 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member y) s))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_286 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1)) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true thm_45 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_1) hol.true) (thm_283 A s_1 y_2) (thm_285 A s_1 y_2 hyp_1)).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_287 : B : hol.type -> hol.proof (hol.eq (hol.arr B (hol.arr B hol.bool)) (hol.eq B) (hol.eq B)) :=
  B : hol.type => hol.REFL (hol.arr B (hol.arr B hol.bool)) (hol.eq B).

(; Theorem: |- ((= (= (f x))) (= (f y))) ;)

(; dict ;)

def thm_288 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (f_3 x_2)) (hol.eq B (f_3 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (f_3 x_2) (f_3 y_1) (thm_287 B) (thm_259 A B y_1 x_2 f_3 hyp_1).

(; Theorem: |- ((= (f y)) (f y)) ;)

(; dict ;)

def thm_289 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (f_2 y_1) (f_2 y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL B (f_2 y_1).

(; Theorem: |- ((= ((= (f x)) (f y))) ((= (f y)) (f y))) ;)

(; dict ;)

def thm_290 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) (f_3 y_1)) (hol.eq B (f_3 y_1) (f_3 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.APP_THM B hol.bool (hol.eq B (f_3 x_2)) (hol.eq B (f_3 y_1)) (f_3 y_1) (f_3 y_1) (thm_288 A B y_1 x_2 f_3 hyp_1) (thm_289 A B y_1 f_3).

(; Theorem: |- ((= ((= (f y)) (f y))) Data.Bool.T) ;)

(; dict ;)

def thm_291 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_2 y_1) (f_2 y_1)) hol.true) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => (B : hol.type => x_1 : hol.term B => thm_66 B x_1) B (f_2 y_1).

(; Theorem: |- ((= ((= (f x)) (f y))) Data.Bool.T) ;)

(; dict ;)

def thm_292 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) (f_3 y_1)) hol.true) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.TRANS hol.bool (hol.eq B (f_3 x_2) (f_3 y_1)) (hol.eq B (f_3 y_1) (f_3 y_1)) hol.true (thm_290 A B y_1 x_2 f_3 hyp_1) (thm_291 A B y_1 f_3).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_293 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 y_4)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) (hol.and hol.true hol.true)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 y_4)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3)) (hol.and hol.true) (hol.eq B (f_2 x_1) (f_2 y_4)) hol.true (thm_286 A s_3 y_4 hyp_2) (thm_292 A B y_4 x_1 f_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) Data.Bool.T) ;)

(; dict ;)

def thm_294 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 y_4)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) hol.true) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 y_4)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) (hol.and hol.true hol.true) hol.true (thm_293 B A x_1 f_2 s_3 y_4 hyp_1 hyp_2) thm_139.

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_295 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 y_4)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) (hol.imp hol.true)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 y_4)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) (hol.eq B (f_2 x_1) (f_2 y_4))) hol.true thm_281 (thm_294 B A x_1 f_2 s_3 y_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((= y') y)) ((= y') y)) ;)

(; dict ;)

def thm_296 : A : hol.type -> y_1 : hol.term A -> y_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A y_27_2 y_1) (hol.eq A y_27_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => y_27_2 : hol.term A => hol.REFL hol.bool (hol.eq A y_27_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ((= y') y))) ((Data.Bool.==> Data.Bool.T) ((= y') y))) ;)

(; dict ;)

def thm_297 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5)) (hol.imp hol.true (hol.eq A y_27_1 y_5))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5)))) (hol.imp hol.true) (hol.eq A y_27_1 y_5) (hol.eq A y_27_1 y_5) (thm_295 B A x_2 f_3 s_4 y_5 hyp_1 hyp_2) (thm_296 A y_5 y_27_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_298 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_299 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_298 t_1) (thm_298 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_300 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_301 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_300 thm_300.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_302 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_71 thm_301.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_303 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_10 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_304 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_305 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_298 t_1) (thm_303 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_304 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_306 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_307 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_306 t_1) (thm_306 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_308 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_11 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_309 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_310 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_307 t_1) (thm_308 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_309 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_311 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_312 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_311 t_1) (thm_311 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_313 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_12 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_314 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_315 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_312 t_1) (thm_313 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_314 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_316 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_317 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_316 t_1) (thm_316 t_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_318 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_319 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_318 thm_318.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_320 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_71 thm_319.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_321 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_53 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_322 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_13 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_323 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_321 t_1) (thm_322 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_324 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_166 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_316 t_1) (thm_323 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_325 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_326 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_324 t_1) thm_325.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_327 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_326 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_328 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_327 t_1) thm_325.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_329 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_330 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_317 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_320 thm_328 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_329 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_331 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_332 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_331 t_1) (thm_331 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_333 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_14 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_334 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_330 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_332 t_1) (thm_333 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_335 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_315 t_1) (thm_334 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_336 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_310 t_1) (thm_335 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_337 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_305 t_1) (thm_336 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_338 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_337 t_1.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_339 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_340 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_302 thm_338 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_339 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= y') y))) ((= y') y)) ;)

(; dict ;)

def thm_341 : A : hol.type -> y_1 : hol.term A -> y_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq A y_27_2 y_1)) (hol.eq A y_27_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => y_27_2 : hol.term A => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_299 t_1) (thm_340 t_1)) (hol.eq A y_27_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ((= y') y))) ((= y') y)) ;)

(; dict ;)

def thm_342 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5)) (hol.eq A y_27_1 y_5)) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) => hol.TRANS hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5)) (hol.imp hol.true (hol.eq A y_27_1 y_5)) (hol.eq A y_27_1 y_5) (thm_297 B A y_27_1 x_2 f_3 s_4 y_5 hyp_1 hyp_2) (thm_341 A y_5 y_27_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ((= y') y)))) (Data.Bool.==> ((= y') y))) ;)

(; dict ;)

def thm_343 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5))) (hol.imp (hol.eq A y_27_1 y_5))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5)) (hol.eq A y_27_1 y_5) thm_281 (thm_342 B A y_27_1 x_2 f_3 s_4 y_5 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x))))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_344 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3)))) (hol.imp hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) hol.true thm_281 (thm_140 B A f_1 s_2 x_3 hyp_1).

(; Theorem: |- ((= ((= y') x)) ((= y') x)) ;)

(; dict ;)

def thm_345 : A : hol.type -> x_1 : hol.term A -> y_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A y_27_2 x_1) (hol.eq A y_27_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => y_27_2 : hol.term A => hol.REFL hol.bool (hol.eq A y_27_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x))) ((Data.Bool.==> Data.Bool.T) ((= y') x))) ;)

(; dict ;)

def thm_346 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) (f_2 x_4))) (hol.eq A y_27_1 x_4)) (hol.imp hol.true (hol.eq A y_27_1 x_4))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) (f_2 x_4)))) (hol.imp hol.true) (hol.eq A y_27_1 x_4) (hol.eq A y_27_1 x_4) (thm_344 B A f_2 s_3 x_4 hyp_1) (thm_345 A x_4 y_27_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= y') x))) ((= y') x)) ;)

(; dict ;)

def thm_347 : A : hol.type -> x_1 : hol.term A -> y_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq A y_27_2 x_1)) (hol.eq A y_27_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => y_27_2 : hol.term A => (t_1 : hol.term hol.bool => thm_303 t_1) (hol.eq A y_27_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x))) ((= y') x)) ;)

(; dict ;)

def thm_348 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) (f_2 x_4))) (hol.eq A y_27_1 x_4)) (hol.eq A y_27_1 x_4)) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.TRANS hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) (f_2 x_4))) (hol.eq A y_27_1 x_4)) (hol.imp hol.true (hol.eq A y_27_1 x_4)) (hol.eq A y_27_1 x_4) (thm_346 B A y_27_1 f_2 s_3 x_4 hyp_1) (thm_347 A x_4 y_27_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x)))) (Data.Bool.==> ((= y') x))) ;)

(; dict ;)

def thm_349 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) (f_2 x_4))) (hol.eq A y_27_1 x_4))) (hol.imp (hol.eq A y_27_1 x_4))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) (f_2 x_4))) (hol.eq A y_27_1 x_4)) (hol.eq A y_27_1 x_4) thm_281 (thm_348 B A y_27_1 f_2 s_3 x_4 hyp_1).

(; Theorem: |- ((= ((= x) y)) ((= x) y)) ;)

(; dict ;)

def thm_350 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq A x_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x))) ((= x) y))) ((Data.Bool.==> ((= y') x)) ((= x) y))) ;)

(; dict ;)

def thm_351 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> y_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B (f_3 x_5) (f_3 x_5))) (hol.eq A y_27_2 x_5)) (hol.eq A x_5 y_1)) (hol.imp (hol.eq A y_27_2 x_5) (hol.eq A x_5 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => y_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B (f_3 x_5) (f_3 x_5))) (hol.eq A y_27_2 x_5))) (hol.imp (hol.eq A y_27_2 x_5)) (hol.eq A x_5 y_1) (hol.eq A x_5 y_1) (thm_349 B A y_27_2 f_3 s_4 x_5 hyp_1) (thm_350 A y_1 x_5).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ((= y') y))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x))) ((= x) y)))) ((Data.Bool.==> ((= y') y)) ((Data.Bool.==> ((= y') x)) ((= x) y)))) ;)

(; dict ;)

def thm_352 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5)) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) (hol.eq B (f_3 x_2) (f_3 x_2))) (hol.eq A y_27_1 x_2)) (hol.eq A x_2 y_5))) (hol.imp (hol.eq A y_27_1 y_5) (hol.imp (hol.eq A y_27_1 x_2) (hol.eq A x_2 y_5)))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5))) (hol.imp (hol.eq A y_27_1 y_5)) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) (hol.eq B (f_3 x_2) (f_3 x_2))) (hol.eq A y_27_1 x_2)) (hol.eq A x_2 y_5)) (hol.imp (hol.eq A y_27_1 x_2) (hol.eq A x_2 y_5)) (thm_343 B A y_27_1 x_2 f_3 s_4 y_5 hyp_1 hyp_3) (thm_351 B A y_5 y_27_1 f_3 s_4 x_2 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= y') y)) ((Data.Bool.==> ((= y') x)) ((= x) y)))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ((= y') y))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x))) ((= x) y)))) ;)

(; dict ;)

def thm_353 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> y_4 : hol.term A -> y_27_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_1 x_3) (f_1 y_4)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A y_27_5 y_4) (hol.imp (hol.eq A y_27_5 x_3) (hol.eq A x_3 y_4))) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4))) (hol.eq A y_27_5 y_4)) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) (hol.eq A y_27_5 x_3)) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => y_4 : hol.term A => y_27_5 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_1 x_3) (f_1 y_4)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) => hol.SYM hol.bool (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4))) (hol.eq A y_27_5 y_4)) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) (hol.eq A y_27_5 x_3)) (hol.eq A x_3 y_4))) (hol.imp (hol.eq A y_27_5 y_4) (hol.imp (hol.eq A y_27_5 x_3) (hol.eq A x_3 y_4))) (thm_352 B A y_27_5 x_3 f_1 s_2 y_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y'))) (= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y'))) ;)

(; dict ;)

def thm_354 : A : hol.type -> y_27_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1)) (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1))) :=
  A : hol.type => y_27_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1)).

(; Theorem: |- ((= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y)) ((Data.Bool.==> ((= y) x)) ((= x) y))) ;)

(; dict ;)

def thm_355 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool ((__10973_3 : hol.term A => hol.imp (hol.eq A __10973_3 x_2) (hol.eq A x_2 y_1)) y_1) (hol.imp (hol.eq A y_1 x_2) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.BETA_CONV A hol.bool (__10973_3 : hol.term A => hol.imp (hol.eq A __10973_3 x_2) (hol.eq A x_2 y_1)) y_1.

(; Theorem: |- ((= ((= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y')) (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y))) ((= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y')) ((Data.Bool.==> ((= y) x)) ((= x) y)))) ;)

(; dict ;)

def thm_356 : A : hol.type -> y_27_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_2)) (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2)))) :=
  A : hol.type => y_27_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1)) (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1)) ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_2) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2)) (thm_354 A y_27_1 y_2 x_3) (thm_355 A y_2 x_3).

(; Theorem: |- ((= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y')) ((Data.Bool.==> ((= y') x)) ((= x) y))) ;)

(; dict ;)

def thm_357 : A : hol.type -> y_27_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) (hol.imp (hol.eq A y_27_1 x_3) (hol.eq A x_3 y_2))) :=
  A : hol.type => y_27_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.BETA_CONV A hol.bool (__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1.

(; Theorem: |- ((= (= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y'))) (= ((Data.Bool.==> ((= y') x)) ((= x) y)))) ;)

(; dict ;)

def thm_358 : A : hol.type -> y_27_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1)) (hol.eq hol.bool (hol.imp (hol.eq A y_27_1 x_3) (hol.eq A x_3 y_2)))) :=
  A : hol.type => y_27_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) (hol.imp (hol.eq A y_27_1 x_3) (hol.eq A x_3 y_2)) thm_166 (thm_357 A y_27_1 y_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> ((= y) x)) ((= x) y))) ((Data.Bool.==> ((= y) x)) ((= x) y))) ;)

(; dict ;)

def thm_359 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A y_2 x_1) (hol.eq A x_1 y_2)) (hol.imp (hol.eq A y_2 x_1) (hol.eq A x_1 y_2))) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hol.REFL hol.bool (hol.imp (hol.eq A y_2 x_1) (hol.eq A x_1 y_2)).

(; Theorem: |- ((= ((= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y')) ((Data.Bool.==> ((= y) x)) ((= x) y)))) ((= ((Data.Bool.==> ((= y') x)) ((= x) y))) ((Data.Bool.==> ((= y) x)) ((= x) y)))) ;)

(; dict ;)

def thm_360 : A : hol.type -> y_27_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2))) (hol.eq hol.bool (hol.imp (hol.eq A y_27_1 x_3) (hol.eq A x_3 y_2)) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2)))) :=
  A : hol.type => y_27_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1)) (hol.eq hol.bool (hol.imp (hol.eq A y_27_1 x_3) (hol.eq A x_3 y_2))) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2)) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2)) (thm_358 A y_27_1 y_2 x_3) (thm_359 A x_3 y_2).

(; Theorem: |- ((= ((= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y')) (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y))) ((= ((Data.Bool.==> ((= y') x)) ((= x) y))) ((Data.Bool.==> ((= y) x)) ((= x) y)))) ;)

(; dict ;)

def thm_361 : A : hol.type -> y_27_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_2)) (hol.eq hol.bool (hol.imp (hol.eq A y_27_1 x_3) (hol.eq A x_3 y_2)) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2)))) :=
  A : hol.type => y_27_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_2)) (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2))) (hol.eq hol.bool (hol.imp (hol.eq A y_27_1 x_3) (hol.eq A x_3 y_2)) (hol.imp (hol.eq A y_2 x_3) (hol.eq A x_3 y_2))) (thm_356 A y_27_1 y_2 x_3) (thm_360 A y_27_1 y_2 x_3).

(; Theorem: |- ((= \lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y))) \lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y))) ;)

(; dict ;)

def thm_362 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (__10973_3 : hol.term A => hol.imp (hol.eq A __10973_3 x_2) (hol.eq A x_2 y_1)) (__10973_3 : hol.term A => hol.imp (hol.eq A __10973_3 x_2) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL (hol.arr A hol.bool) (__10973_3 : hol.term A => hol.imp (hol.eq A __10973_3 x_2) (hol.eq A x_2 y_1)).

(; Theorem: |- ((= y') y) ;)

(; dict ;)

def thm_363 : A : hol.type -> y_1 : hol.term A -> y_27_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_27_2 y_1) -> hol.proof (hol.eq A y_27_2 y_1) :=
  A : hol.type => y_1 : hol.term A => y_27_2 : hol.term A => hyp_1 : hol.proof (hol.eq A y_27_2 y_1) => hyp_1.

(; Theorem: |- ((= (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y')) (\lambda _10973. ((Data.Bool.==> ((= _10973) x)) ((= x) y)) y)) ;)

(; dict ;)

def thm_364 : A : hol.type -> y_27_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_27_1 y_2) -> hol.proof (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1) ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_2)) :=
  A : hol.type => y_27_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A y_27_1 y_2) => hol.APP_THM A hol.bool (__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) (__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_3) (hol.eq A x_3 y_2)) y_27_1 y_2 (thm_362 A y_2 x_3) (thm_363 A y_2 y_27_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= y') x)) ((= x) y))) ((Data.Bool.==> ((= y) x)) ((= x) y))) ;)

(; dict ;)

def thm_365 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> y_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_27_3 y_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A y_27_3 x_2) (hol.eq A x_2 y_1)) (hol.imp (hol.eq A y_1 x_2) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => y_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A y_27_3 y_1) => hol.EQ_MP (hol.eq hol.bool ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_2) (hol.eq A x_2 y_1)) y_27_3) ((__10973_4 : hol.term A => hol.imp (hol.eq A __10973_4 x_2) (hol.eq A x_2 y_1)) y_1)) (hol.eq hol.bool (hol.imp (hol.eq A y_27_3 x_2) (hol.eq A x_2 y_1)) (hol.imp (hol.eq A y_1 x_2) (hol.eq A x_2 y_1))) (thm_361 A y_27_3 y_1 x_2) (thm_364 A y_27_3 y_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= y) x)) ((= x) y))) ((Data.Bool.==> ((= y') x)) ((= x) y))) ;)

(; dict ;)

def thm_366 : A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> y_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_27_1 y_3) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A y_3 x_2) (hol.eq A x_2 y_3)) (hol.imp (hol.eq A y_27_1 x_2) (hol.eq A x_2 y_3))) :=
  A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => y_3 : hol.term A => hyp_1 : hol.proof (hol.eq A y_27_1 y_3) => hol.SYM hol.bool (hol.imp (hol.eq A y_27_1 x_2) (hol.eq A x_2 y_3)) (hol.imp (hol.eq A y_3 x_2) (hol.eq A x_2 y_3)) (thm_365 A y_3 x_2 y_27_1 hyp_1).

(; Theorem: |- ((= (= (\lambda _10975. ((= x) _10975) y))) (= (\lambda _10975. ((= x) _10975) y))) ;)

(; dict ;)

def thm_367 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1)) (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1)).

(; Theorem: |- ((= (\lambda _10975. ((= x) _10975) x)) ((= x) x)) ;)

(; dict ;)

def thm_368 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool ((__10975_2 : hol.term A => hol.eq A x_1 __10975_2) x_1) (hol.eq A x_1 x_1)) :=
  A : hol.type => x_1 : hol.term A => hol.BETA_CONV A hol.bool (__10975_2 : hol.term A => hol.eq A x_1 __10975_2) x_1.

(; Theorem: |- ((= ((= (\lambda _10975. ((= x) _10975) y)) (\lambda _10975. ((= x) _10975) x))) ((= (\lambda _10975. ((= x) _10975) y)) ((= x) x))) ;)

(; dict ;)

def thm_369 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) x_2)) (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) (hol.eq A x_2 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1)) (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1)) ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) x_2) (hol.eq A x_2 x_2) (thm_367 A y_1 x_2) (thm_368 A x_2).

(; Theorem: |- ((= (\lambda _10975. ((= x) _10975) y)) ((= x) y)) ;)

(; dict ;)

def thm_370 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.BETA_CONV A hol.bool (__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1.

(; Theorem: |- ((= (= (\lambda _10975. ((= x) _10975) y))) (= ((= x) y))) ;)

(; dict ;)

def thm_371 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1)) (hol.eq hol.bool (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) (hol.eq A x_2 y_1) thm_166 (thm_370 A y_1 x_2).

(; Theorem: |- ((= ((= x) x)) ((= x) x)) ;)

(; dict ;)

def thm_372 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq A x_1 x_1)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq A x_1 x_1).

(; Theorem: |- ((= ((= (\lambda _10975. ((= x) _10975) y)) ((= x) x))) ((= ((= x) y)) ((= x) x))) ;)

(; dict ;)

def thm_373 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) (hol.eq A x_2 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1)) (hol.eq hol.bool (hol.eq A x_2 y_1)) (hol.eq A x_2 x_2) (hol.eq A x_2 x_2) (thm_371 A y_1 x_2) (thm_372 A x_2).

(; Theorem: |- ((= ((= (\lambda _10975. ((= x) _10975) y)) (\lambda _10975. ((= x) _10975) x))) ((= ((= x) y)) ((= x) x))) ;)

(; dict ;)

def thm_374 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) x_2)) (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) (hol.eq A x_2 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 x_2)) (thm_369 A y_1 x_2) (thm_373 A y_1 x_2).

(; Theorem: |- ((= \lambda _10975. ((= x) _10975)) \lambda _10975. ((= x) _10975)) ;)

(; dict ;)

def thm_375 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (__10975_2 : hol.term A => hol.eq A x_1 __10975_2) (__10975_2 : hol.term A => hol.eq A x_1 __10975_2)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL (hol.arr A hol.bool) (__10975_2 : hol.term A => hol.eq A x_1 __10975_2).

(; Theorem: |- ((= y) x) ;)

(; dict ;)

def thm_376 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_2 x_1) -> hol.proof (hol.eq A y_2 x_1) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq A y_2 x_1) => hyp_1.

(; Theorem: |- ((= (\lambda _10975. ((= x) _10975) y)) (\lambda _10975. ((= x) _10975) x)) ;)

(; dict ;)

def thm_377 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_1 x_2) -> hol.proof (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A y_1 x_2) => hol.APP_THM A hol.bool (__10975_3 : hol.term A => hol.eq A x_2 __10975_3) (__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1 x_2 (thm_375 A x_2) (thm_376 A x_2 y_1 hyp_1).

(; Theorem: |- ((= ((= x) y)) ((= x) x)) ;)

(; dict ;)

def thm_378 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_1 x_2) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A y_1 x_2) => hol.EQ_MP (hol.eq hol.bool ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) y_1) ((__10975_3 : hol.term A => hol.eq A x_2 __10975_3) x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 x_2)) (thm_374 A y_1 x_2) (thm_377 A y_1 x_2 hyp_1).

(; Theorem: |- ((= ((= x) x)) ((= x) y)) ;)

(; dict ;)

def thm_379 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_1 x_2) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A y_1 x_2) => hol.SYM hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 x_2) (thm_378 A y_1 x_2 hyp_1).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_380 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_1 x_2) -> hol.proof (hol.eq A x_2 y_1) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A y_1 x_2) => hol.EQ_MP (hol.eq A x_2 x_2) (hol.eq A x_2 y_1) (thm_379 A y_1 x_2 hyp_1) (thm_63 A x_2).

(; Theorem: |- ((Data.Bool.==> ((= y) x)) ((= x) y)) ;)

(; dict ;)

def thm_381 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hol.proof (hol.imp (hol.eq A y_2 x_1) (hol.eq A x_1 y_2)) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq A y_2 x_1) => thm_380 A y_2 x_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= y') x)) ((= x) y)) ;)

(; dict ;)

def thm_382 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> y_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_27_3 y_1) -> hol.proof (hol.imp (hol.eq A y_27_3 x_2) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => y_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A y_27_3 y_1) => hol.EQ_MP (hol.imp (hol.eq A y_1 x_2) (hol.eq A x_2 y_1)) (hol.imp (hol.eq A y_27_3 x_2) (hol.eq A x_2 y_1)) (thm_366 A y_27_3 x_2 y_1 hyp_1) (thm_381 A x_2 y_1).

(; Theorem: |- ((Data.Bool.==> ((= y') y)) ((Data.Bool.==> ((= y') x)) ((= x) y))) ;)

(; dict ;)

def thm_383 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> y_27_3 : hol.term A -> hol.proof (hol.imp (hol.eq A y_27_3 y_2) (hol.imp (hol.eq A y_27_3 x_1) (hol.eq A x_1 y_2))) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => y_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A y_27_3 y_2) => thm_382 A y_2 x_1 y_27_3 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ((= y') y))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x))) ((= x) y))) ;)

(; dict ;)

def thm_384 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) -> hol.proof (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5)) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) (hol.eq B (f_3 x_2) (f_3 x_2))) (hol.eq A y_27_1 x_2)) (hol.eq A x_2 y_5))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_5)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) => hol.EQ_MP (hol.imp (hol.eq A y_27_1 y_5) (hol.imp (hol.eq A y_27_1 x_2) (hol.eq A x_2 y_5))) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5)) (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) (hol.eq B (f_3 x_2) (f_3 x_2))) (hol.eq A y_27_1 x_2)) (hol.eq A x_2 y_5))) (thm_353 B A f_3 s_4 x_2 y_5 y_27_1 hyp_1 hyp_2 hyp_3) (thm_383 A x_2 y_5 y_27_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y)))) ((= y') y)) ;)

(; dict ;)

def thm_385 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_27_1 x_27_6))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_4) (hol.eq B (f_3 x_2) (f_3 y_5))) (hol.eq A y_27_1 y_5)) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_27_1 x_27_6))) => thm_280 B A y_27_1 x_2 f_3 s_4 hyp_1 y_5.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x))) ((= x) y)) ;)

(; dict ;)

def thm_386 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> y_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_5) (f_3 x_27_6))) (hol.eq A y_27_2 x_27_6))) -> hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_4) -> hol.proof (hol.imp (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq B (f_3 x_5) (f_3 x_5))) (hol.eq A y_27_2 x_5)) (hol.eq A x_5 y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => y_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_5) (f_3 x_27_6))) (hol.eq A y_27_2 x_27_6))) => hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_4) => thm_384 B A y_27_2 x_5 f_3 s_4 y_1 hyp_2 hyp_3 hyp_4 (thm_385 B A y_27_2 x_5 f_3 s_4 y_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ((= y') x)) ;)

(; dict ;)

def thm_387 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3) (hol.eq B (f_2 x_4) (f_2 x_27_5))) (hol.eq A y_27_1 x_27_5))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) (f_2 x_4))) (hol.eq A y_27_1 x_4)) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3) (hol.eq B (f_2 x_4) (f_2 x_27_5))) (hol.eq A y_27_1 x_27_5))) => thm_280 B A y_27_1 x_4 f_2 s_3 hyp_1 x_4.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_388 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3) (hol.eq B (f_2 x_5) (f_2 x_27_6))) (hol.eq A y_27_1 x_27_6))) -> hyp_2 : hol.proof (hol.eq B (f_2 x_5) (f_2 y_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3) (hol.eq B (f_2 x_5) (f_2 x_27_6))) (hol.eq A y_27_1 x_27_6))) => hyp_2 : hol.proof (hol.eq B (f_2 x_5) (f_2 y_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) => thm_386 B A y_4 y_27_1 f_2 s_3 x_5 hyp_1 hyp_2 hyp_3 hyp_4 (thm_387 B A y_27_1 f_2 s_3 x_5 hyp_1).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_389 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3) (hol.eq B (f_2 x_5) (f_2 x_27_6))) (hol.eq A y_27_1 x_27_6))) -> hyp_2 : hol.proof (hol.eq B (f_2 x_5) (f_2 y_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3) (hol.eq B (f_2 x_5) (f_2 x_27_6))) (hol.eq A y_27_1 x_27_6))) => hyp_2 : hol.proof (hol.eq B (f_2 x_5) (f_2 y_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) => hol.PROVE_HYP (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3) (hol.eq B (f_2 x_5) (f_2 x_27_6))) (hol.eq A y_27_1 x_27_6))) (hol.eq A x_5 y_4) (thm_280 B A y_27_1 x_5 f_2 s_3 hyp_1) (hyp_5 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3) (hol.eq B (f_2 x_5) (f_2 x_27_6))) (hol.eq A y_27_1 x_27_6))) => thm_388 B A y_27_1 f_2 s_3 y_4 x_5 hyp_5 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y') x')))) ((= x) y)) ;)

(; dict ;)

def thm_390 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> y_27_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_5) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_5) -> hol.proof (hol.imp (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_5) (hol.eq B (f_4 x_3) (f_4 x_27_6))) (hol.eq A y_27_2 x_27_6))) (hol.eq A x_3 y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => y_27_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_5) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_5) => hyp_4 : hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_5) (hol.eq B (f_4 x_3) (f_4 x_27_6))) (hol.eq A y_27_2 x_27_6))) => thm_389 B A y_27_2 f_4 s_5 y_1 x_3 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((= (\lambda y. (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y) x'))) y')) (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y') x')))) ;)

(; dict ;)

def thm_391 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))) y_27_1) (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_5))) (hol.eq A y_27_1 x_27_5)))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))) y_27_1.

(; Theorem: |- (\lambda y. (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y) x'))) y') ;)

(; dict ;)

def thm_392 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))) y_27_1) -> hol.proof ((y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))) y_27_1) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))) y_27_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y') x'))) ;)

(; dict ;)

def thm_393 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))) y_27_1) -> hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_5))) (hol.eq A y_27_1 x_27_5))) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))) y_27_1) => hol.EQ_MP ((y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6))) y_27_1) (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_5))) (hol.eq A y_27_1 x_27_5))) (thm_391 B A y_27_1 x_2 f_3 s_4) (thm_392 B A y_27_1 x_2 f_3 s_4 hyp_1).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_394 : B : hol.type -> A : hol.type -> y_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof ((y_6 : hol.term A => hol.forall A (x_27_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_3) (hol.eq B (f_2 x_5) (f_2 x_27_7))) (hol.eq A y_6 x_27_7))) y_27_1) -> hyp_2 : hol.proof (hol.eq B (f_2 x_5) (f_2 y_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => y_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof ((y_6 : hol.term A => hol.forall A (x_27_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_3) (hol.eq B (f_2 x_5) (f_2 x_27_7))) (hol.eq A y_6 x_27_7))) y_27_1) => hyp_2 : hol.proof (hol.eq B (f_2 x_5) (f_2 y_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_3) => thm_390 B A y_4 y_27_1 x_5 f_2 s_3 hyp_2 hyp_3 hyp_4 (thm_393 B A y_27_1 x_5 f_2 s_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda y. (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y) x'))) y')) ((= x) y)) ;)

(; dict ;)

def thm_395 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> y_27_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_5) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_5) -> hol.proof (hol.imp ((y_6 : hol.term A => hol.forall A (x_27_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_5) (hol.eq B (f_4 x_3) (f_4 x_27_7))) (hol.eq A y_6 x_27_7))) y_27_2) (hol.eq A x_3 y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => y_27_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_5) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_5) => hyp_4 : hol.proof ((y_6 : hol.term A => hol.forall A (x_27_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_5) (hol.eq B (f_4 x_3) (f_4 x_27_7))) (hol.eq A y_6 x_27_7))) y_27_2) => thm_394 B A y_27_2 f_4 s_5 y_1 x_3 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda y'. ((Data.Bool.==> (\lambda y. (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y) x'))) y')) ((= x) y))) ;)

(; dict ;)

def thm_396 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_4) -> hol.proof (hol.forall A (y_27_5 : hol.term A => hol.imp ((y_6 : hol.term A => hol.forall A (x_27_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_7))) (hol.eq A y_6 x_27_7))) y_27_5) (hol.eq A x_2 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_4) => y_27_5 : hol.term A => thm_395 B A y_1 y_27_5 x_2 f_3 s_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y) x'))))) ((= x) y)) ;)

(; dict ;)

def thm_397 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_4) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4) (hol.eq B (f_3 x_2) (f_3 x_27_6))) (hol.eq A y_5 x_27_6)))) (hol.eq A x_2 y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 s_4) => thm_279 B A y_1 x_2 f_3 s_4 (thm_396 B A y_1 x_2 f_3 s_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda y. (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x') s)) ((= (f x)) (f x')))) ((= y) x')))) ;)

(; dict ;)

def thm_398 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3) (hol.eq B (f_2 x_1) (f_2 x_27_5))) (hol.eq A y_4 x_27_5)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3) (hol.eq B (f_2 x_1) (f_2 x_27_5))) (hol.eq A y_4 x_27_5)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_27_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3) (hol.eq B (f_2 x_1) (f_2 x_27_5))) (hol.eq A y_4 x_27_5)))) => hyp_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_399 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2) (hol.eq B (f_1 x_4) (f_1 x_27_6))) (hol.eq A y_5 x_27_6)))) -> hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2) (hol.eq B (f_1 x_4) (f_1 x_27_6))) (hol.eq A y_5 x_27_6)))) => hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) => thm_397 B A y_3 x_4 f_1 s_2 hyp_2 hyp_3 hyp_4 (thm_398 B A x_4 f_1 s_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda y. (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x_1) s)) ((= (f x)) (f x_1)))) ((= y) x_1)))) ;)

(; dict ;)

def thm_400 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq B y_4 (f_2 x_6))) (hol.eq A y_5 x_6))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x__1_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_3) (hol.eq B (f_2 x_1) (f_2 x__1_5))) (hol.eq A y_4 x__1_5)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq B y_4 (f_2 x_6))) (hol.eq A y_5 x_6))))) => thm_241 A B f_2 s_3 hyp_1 (f_2 x_1).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_401 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) => (hyp_5 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_27_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2) (hol.eq B (f_1 x_4) (f_1 x_27_6))) (hol.eq A y_5 x_27_6)))) => thm_399 B A f_1 s_2 y_3 x_4 hyp_5 hyp_2 hyp_3 hyp_4) (thm_400 B A x_4 f_1 s_2 hyp_1).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_402 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) => hol.PROVE_HYP (hol.eq B (f_1 x_4) (f_1 y_3)) (hol.eq A x_4 y_3) (thm_259 A B y_3 x_4 f_1 hyp_2) (hyp_5 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => thm_401 B A f_1 s_2 y_3 x_4 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_403 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq A x_4 y_3) (thm_258 A s_2 y_3 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) => thm_402 B A f_1 s_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_404 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) => hol.PROVE_HYP (hol.eq B (f_1 x_4) (f_1 y_3)) (hol.eq A x_4 y_3) (thm_257 A B s_2 y_3 x_4 f_1 hyp_2) (hyp_5 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => thm_403 B A f_1 s_2 y_3 x_4 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_405 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq A x_4 y_3) (thm_255 B A x_4 f_1 s_2 y_3 hyp_2) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) => thm_404 B A f_1 s_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_406 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A x_4 y_3) (thm_39 A s_2 x_4 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => thm_405 B A f_1 s_2 y_3 x_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_407 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3))) (hol.eq A x_4 y_3) (thm_252 B A x_4 f_1 s_2 y_3 hyp_2) (hyp_4 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3))) => thm_406 B A f_1 s_2 y_3 x_4 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_408 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3)))) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 s_2) (hol.eq B (f_1 x_4) (f_1 y_3)))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A x_4 y_3) (thm_250 B A f_1 y_3 s_2 x_4 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => thm_407 B A f_1 s_2 y_3 x_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)) ;)

(; dict ;)

def thm_409 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_6 : hol.term A => hol.forall A (x_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq B y_5 (f_1 x_7))) (hol.eq A y_6 x_7))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => thm_408 B A f_1 s_3 y_2 x_4 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_410 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq B y_4 (f_1 x_6))) (hol.eq A y_5 x_6))))) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.forall A (x_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq B y_4 (f_1 x_6))) (hol.eq A y_5 x_6))))) => y_4 : hol.term A => thm_409 B A f_1 y_4 s_2 x_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_411 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) => x_3 : hol.term A => hol.EQ_MP (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (thm_247 B A f_1 s_2 x_3) (thm_410 B A f_1 s_2 x_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_412 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) => hol.PROVE_HYP (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (thm_241 A B f_1 s_2 hyp_1) (hyp_2 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (thm_244 B A f_1 s_2) (thm_411 B A f_1 s_2 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_413 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) => thm_412 B A f_1 s_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_414 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => hyp_1.

(; Theorem: |- ((= \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) ;)

(; dict ;)

def thm_415 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr B hol.bool) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))).

(; Theorem: |- ((= \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) ;)

(; dict ;)

def thm_416 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr B hol.bool) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (thm_415 A B f_1 s_2) (thm_415 A B f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))))) ;)

(; dict ;)

def thm_417 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))) (thm_150 B) (thm_416 A B f_1 s_2).

(; Theorem: |- ((= (\lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))) (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x)))) ;)

(; dict ;)

def thm_418 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2)))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2))).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x)))) (\lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))) (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) ;)

(; dict ;)

def thm_419 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hol.SYM hol.bool ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2)))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) (thm_418 B A f_1 y_2 s_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x))) ;)

(; dict ;)

def thm_420 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x))) ;)

(; dict ;)

def thm_421 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)) (thm_420 B A f_1 y_2 s_3) (thm_420 B A f_1 y_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x)))) ;)

(; dict ;)

def thm_422 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)) (thm_35 A) (thm_421 B A f_1 y_2 s_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_423 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_424 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (thm_423 B A f_1 y_2 s_3 x_4) (thm_423 B A f_1 y_2 s_3 x_4).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_425 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) => thm_414 B A f_1 s_2 hyp_1 x_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)) ;)

(; dict ;)

def thm_426 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => thm_425 B A f_1 s_3 x_4 hyp_1 y_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) s)) ((Data.Bool./\ ((Set.member x) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (f x))))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x)) ;)

(; dict ;)

def thm_427 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)))) (f_3 x_1)))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 s_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (thm_424 B A f_1 y_2 s_3 x_4) (thm_426 B A f_1 y_2 s_3 x_4 hyp_1)) B A f_1 y_2 s_3 x_4 hyp_1) B A f_3 x_1 s_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) hyp_1.

(; Theorem: |- ((= Set.member) Set.member) ;)

(; dict ;)

def thm_428 : A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)))) :=
  A : hol.type => hol.REFL (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))).

(; Theorem: |- ((= select) select) ;)

(; dict ;)

def thm_429 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) A) (hol.select A).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member z) s))) (Data.Bool./\ ((Set.member z) s))) ;)

(; dict ;)

def thm_430 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)).

(; Theorem: |- ((= (= (f z))) (= (f z))) ;)

(; dict ;)

def thm_431 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (f_2 z_1)) (hol.eq B (f_2 z_1))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (hol.eq B (f_2 z_1)).

(; Theorem: |- ((= ((= (f z)) y)) ((= (f z)) (f x))) ;)

(; dict ;)

def thm_432 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B y_2 (f_4 x_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_4 z_3) y_2) (hol.eq B (f_4 z_3) (f_4 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => y_2 : hol.term B => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B y_2 (f_4 x_1)) => hol.APP_THM B hol.bool (hol.eq B (f_4 z_3)) (hol.eq B (f_4 z_3)) y_2 (f_4 x_1) (thm_431 A B z_3 f_4) (thm_162 A B x_1 f_4 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))) ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))) ;)

(; dict ;)

def thm_433 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4)) (hol.eq B (f_3 z_5) y_2) (hol.eq B (f_3 z_5) (f_3 x_1)) (thm_430 A s_4 z_5) (thm_432 A B x_1 y_2 z_5 f_3 hyp_1).

(; Theorem: |- ((= \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))) \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))) ;)

(; dict ;)

def thm_434 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hol.proof (hol.eq (hol.arr A hol.bool) (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)) (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hol.ABS_THM A hol.bool (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)) (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1))) (z_5 : hol.term A => thm_433 B A x_1 y_2 f_3 s_4 z_5 hyp_1).

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) ;)

(; dict ;)

def thm_435 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hol.proof (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hol.APP_THM (hol.arr A hol.bool) A (hol.select A) (hol.select A) (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)) (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1))) (thm_429 A) (thm_434 B A x_1 y_2 f_3 s_4 hyp_1).

(; Theorem: |- ((= (Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) ;)

(; dict ;)

def thm_436 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hol.APP_THM A (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) (thm_428 A) (thm_435 B A x_1 y_2 f_3 s_4 hyp_1).

(; Theorem: |- ((= s) s) ;)

(; dict ;)

def thm_437 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset A) s_1 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (Set_2Eset A) s_1.

(; Theorem: |- ((= ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) s)) ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ;)

(; dict ;)

def thm_438 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) s_4)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1))))) s_4 s_4 (thm_436 B A x_1 y_2 f_3 s_4 hyp_1) (thm_437 A s_4).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) s))) (Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s))) ;)

(; dict ;)

def thm_439 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) s_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) s_4) thm_45 (thm_438 B A x_1 y_2 f_3 s_4 hyp_1).

(; Theorem: |- ((= f) f) ;)

(; dict ;)

def thm_440 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) f_1 f_1) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr A B) f_1.

(; Theorem: |- ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) ;)

(; dict ;)

def thm_441 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B y_2 (f_4 x_1)) -> hol.proof (hol.eq B (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) y_2)))) (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) (f_4 x_1)))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B y_2 (f_4 x_1)) => hol.APP_THM A B f_4 f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) y_2))) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) (f_4 x_1)))) (thm_440 B A f_4) (thm_435 B A x_1 y_2 f_4 s_3 hyp_1).

(; Theorem: |- ((= (= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))))) (= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))))) ;)

(; dict ;)

def thm_442 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B y_2 (f_4 x_1)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) y_2))))) (hol.eq B (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) (f_4 x_1))))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B y_2 (f_4 x_1)) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) y_2)))) (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) (f_4 x_1))))) (thm_287 B) (thm_441 A B x_1 y_2 s_3 f_4 hyp_1).

(; Theorem: |- ((= (f x)) (f x)) ;)

(; dict ;)

def thm_443 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (f_2 x_1) (f_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL B (f_2 x_1).

(; Theorem: |- ((= ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (f x))) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x))) ;)

(; dict ;)

def thm_444 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B y_2 (f_4 x_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) y_2)))) (f_4 x_1)) (hol.eq B (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) (f_4 x_1))))) (f_4 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B y_2 (f_4 x_1)) => hol.APP_THM B hol.bool (hol.eq B (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) y_2))))) (hol.eq B (f_4 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_4 z_5) (f_4 x_1)))))) (f_4 x_1) (f_4 x_1) (thm_442 A B x_1 y_2 s_3 f_4 hyp_1) (thm_443 A B x_1 f_4).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (f x)))) ((Data.Bool./\ Data.Bool.T) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x)))) ;)

(; dict ;)

def thm_445 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) y_1)))) (f_2 x_4))) (hol.and hol.true (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) (f_2 x_4))))) (f_2 x_4)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.and hol.true) (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) y_1)))) (f_2 x_4)) (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) (f_2 x_4))))) (f_2 x_4)) (thm_56 A s_3 x_4 hyp_2) (thm_444 A B x_4 y_1 s_3 f_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x)))) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x))) ;)

(; dict ;)

def thm_446 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.eq B (f_3 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) (hol.eq B (f_3 z_4) (f_3 x_1))))) (f_3 x_1))) (hol.eq B (f_3 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) (hol.eq B (f_3 z_4) (f_3 x_1))))) (f_3 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_75 t_1) (hol.eq B (f_3 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) (hol.eq B (f_3 z_4) (f_3 x_1))))) (f_3 x_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (f x)))) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x))) ;)

(; dict ;)

def thm_447 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) y_1)))) (f_2 x_4))) (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) (f_2 x_4))))) (f_2 x_4))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) y_1)))) (f_2 x_4))) (hol.and hol.true (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) (f_2 x_4))))) (f_2 x_4))) (hol.eq B (f_2 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_2 z_5) (f_2 x_4))))) (f_2 x_4)) (thm_445 B A y_1 f_2 s_3 x_4 hyp_1 hyp_2) (thm_446 A B x_4 s_3 f_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) s)) ((Data.Bool./\ ((Set.member x) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (f x))))) ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x)))) ;)

(; dict ;)

def thm_448 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)))) (f_3 x_1)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1))))) (f_3 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)))) (f_3 x_1))) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1))))) (f_3 x_1)) (thm_439 B A x_1 y_2 f_3 s_4 hyp_1) (thm_447 B A y_2 f_3 s_4 x_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x)))) ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) s)) ((Data.Bool./\ ((Set.member x) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (f x))))) ;)

(; dict ;)

def thm_449 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B y_1 (f_3 x_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_2)))) s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_2))))) (f_3 x_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_1))) s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_1)))) (f_3 x_2))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B y_1 (f_3 x_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) => hol.SYM hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_1))) s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_1)))) (f_3 x_2)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_2)))) s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_2))))) (f_3 x_2))) (thm_448 B A x_2 y_1 f_3 s_4 hyp_1 hyp_2).

(; Theorem: |- ((= (\lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))) (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x)))) ;)

(; dict ;)

def thm_450 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))).

(; Theorem: |- ((= (= (\lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))) (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))))) (= ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x))))) ;)

(; dict ;)

def thm_451 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))))) (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1))) thm_166 (thm_450 B A x_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) ;)

(; dict ;)

def thm_452 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))).

(; Theorem: |- ((= ((= (\lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))) (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) ((= ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x)))) (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) ;)

(; dict ;)

def thm_453 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))))) (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) (thm_451 B A x_1 f_2 s_3) (thm_452 B A x_1 f_2 s_3).

(; Theorem: |- ((= (= (p (select p)))) (= (p (select p)))) ;)

(; dict ;)

def thm_454 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (p_1 (hol.select A p_1))) (hol.eq hol.bool (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (p_1 (hol.select A p_1))).

(; Theorem: |- ((= ((= Data.Bool.?) \lambda p. (p (select p)))) ((= Data.Bool.?) \lambda p. (p (select p)))) ;)

(; dict ;)

def thm_455 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)))) :=
  A : hol.type => hol.REFL hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))).

(; Theorem: |- ((= ((= Data.Bool.?) \lambda p. (p (select p)))) ((= Data.Bool.?) \lambda p. (p (select p)))) ;)

(; dict ;)

def thm_456 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)))) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (thm_455 A) (thm_455 A).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_457 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) p_1 p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) p_1.

(; Theorem: |- ((= (Data.Bool.? p)) (\lambda p. (p (select p)) p)) ;)

(; dict ;)

def thm_458 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1 p_1 (hol.EQ_MP (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2))) (thm_456 A) (thm_15 A)) (thm_457 A p_1).

(; Theorem: |- ((= (\lambda p. (p (select p)) p)) (p (select p))) ;)

(; dict ;)

def thm_459 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1.

(; Theorem: |- ((= \lambda p. (\lambda p. (p (select p)) p)) \lambda p. (p (select p))) ;)

(; dict ;)

def thm_460 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) :=
  A : hol.type => hol.ABS_THM (hol.arr A hol.bool) hol.bool (p_1 : hol.term (hol.arr A hol.bool) => (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)) (p_1 : hol.term (hol.arr A hol.bool) => thm_459 A p_1).

(; Theorem: |- ((= (\lambda p. (\lambda p. (p (select p)) p) p)) (\lambda p. (p (select p)) p)) ;)

(; dict ;)

def thm_461 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) (p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1 p_1 (thm_460 A) (thm_457 A p_1).

(; Theorem: |- ((= (= (\lambda p. (\lambda p. (p (select p)) p) p))) (= (\lambda p. (p (select p)) p))) ;)

(; dict ;)

def thm_462 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1)) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) thm_166 (thm_461 A p_1).

(; Theorem: |- ((= ((= (\lambda p. (\lambda p. (p (select p)) p) p)) (\lambda p. (p (select p)) p))) ((= (\lambda p. (p (select p)) p)) (p (select p)))) ;)

(; dict ;)

def thm_463 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1)) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1)) (thm_462 A p_1) (thm_459 A p_1).

(; Theorem: |- ((= (Data.Bool.? p)) (p (select p))) ;)

(; dict ;)

def thm_464 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1)) (thm_458 A p_1) (hol.EQ_MP (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => (p_3 : hol.term (hol.arr A hol.bool) => p_3 (hol.select A p_3)) p_2) p_1) ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1)) (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => p_2 (hol.select A p_2)) p_1) (p_1 (hol.select A p_1))) (thm_463 A p_1) (thm_461 A p_1)).

(; Theorem: |- ((= ((= (p (select p))) (Data.Bool.? p))) ((= (p (select p))) (p (select p)))) ;)

(; dict ;)

def thm_465 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) (hol.eq hol.bool (p_1 (hol.select A p_1)) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1))) (hol.eq hol.bool (p_1 (hol.select A p_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1)) (thm_454 A p_1) (thm_464 A p_1).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_466 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_1 x_1) hol.true) :=
  x_1 : hol.term hol.bool => (A : hol.type => x_1 : hol.term A => thm_64 A x_1) hol.bool x_1.

(; Theorem: |- ((= ((= (p (select p))) (p (select p)))) Data.Bool.T) ;)

(; dict ;)

def thm_467 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (p_1 (hol.select A p_1))) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (x_1 : hol.term hol.bool => thm_466 x_1) (p_1 (hol.select A p_1)).

(; Theorem: |- ((= ((= (p (select p))) (Data.Bool.? p))) Data.Bool.T) ;)

(; dict ;)

def thm_468 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) (hol.eq hol.bool (p_1 (hol.select A p_1)) (p_1 (hol.select A p_1))) hol.true (thm_465 A p_1) (thm_467 A p_1).

(; Theorem: |- ((= Data.Bool.T) ((= (p (select p))) (Data.Bool.? p))) ;)

(; dict ;)

def thm_469 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) hol.true (thm_468 A p_1).

(; Theorem: |- ((= (p (select p))) (Data.Bool.? p)) ;)

(; dict ;)

def thm_470 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP hol.true (hol.eq hol.bool (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) (thm_469 A p_1) thm_0.

(; Theorem: |- ((= (\lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))) (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) ;)

(; dict ;)

def thm_471 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_470 A p_1) A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x)))) (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) ;)

(; dict ;)

def thm_472 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (thm_453 B A x_1 f_2 s_3) (thm_471 B A x_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x)))) ;)

(; dict ;)

def thm_473 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) (thm_472 B A x_1 f_2 s_3).

(; Theorem: |- ((= (\lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))) x)) ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) ;)

(; dict ;)

def thm_474 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) x_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.eq B (f_2 x_1) (f_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) x_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f x)))) (\lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))) x)) ;)

(; dict ;)

def thm_475 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) (hol.eq B (f_1 z_4) (f_1 x_3))) x_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.SYM hol.bool ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) (hol.eq B (f_1 z_4) (f_1 x_3))) x_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.eq B (f_1 x_3) (f_1 x_3))) (thm_474 B A x_3 f_1 s_2).

(; Theorem: |- (\lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))) x) ;)

(; dict ;)

def thm_476 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) -> hol.proof ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) => hol.EQ_MP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (hol.eq B (f_2 x_1) (f_2 x_1))) ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) x_1) (thm_475 B A f_2 s_3 x_1) (thm_142 B A f_2 s_3 x_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_477 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_270 A P_1).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_478 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_275 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_479 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_480 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_478 A Q_3 x_1 P_2 hyp_2 (thm_479 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_481 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_480 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_482 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_481 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_483 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_477 A P_2) (thm_482 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))) ;)

(; dict ;)

def thm_484 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) x_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_483 A x_1 P_2 hyp_1) A x_1 (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))) ;)

(; dict ;)

def thm_485 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) => hol.PROVE_HYP ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) (thm_476 B A x_1 f_2 s_3 hyp_1) (hyp_2 : hol.proof ((z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))) x_1) => thm_484 B A x_1 f_2 s_3 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x))))) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) (f x)))))) (f x))) ;)

(; dict ;)

def thm_486 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1)))) s_3) (hol.eq B (f_2 (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_2 z_4) (f_2 x_1))))) (f_2 x_1))) (thm_473 B A x_1 f_2 s_3) (thm_485 B A x_1 f_2 s_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Set.member (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) s)) ((Data.Bool./\ ((Set.member x) s)) ((= (f (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y))))) (f x)))) ;)

(; dict ;)

def thm_487 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)))) (f_3 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hol.EQ_MP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1)))) s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) (f_3 x_1))))) (f_3 x_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B (f_3 (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2)))) (f_3 x_1)))) (thm_449 B A y_2 x_1 f_3 s_4 hyp_1 hyp_2) (thm_486 B A x_1 f_3 s_4 hyp_2).

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x) ;)

(; dict ;)

def thm_488 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) -> hyp_2 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) => hyp_2 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => thm_427 B A x_1 y_2 f_3 s_4 hyp_1 (thm_487 B A x_1 y_2 f_3 s_4 hyp_2 hyp_3).

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x) ;)

(; dict ;)

def thm_489 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) -> hyp_2 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) => hyp_2 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hol.PROVE_HYP (hol.eq B y_2 (f_3 x_1)) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) (thm_162 A B x_1 f_3 y_2 hyp_2) (hyp_4 : hol.proof (hol.eq B y_2 (f_3 x_1)) => thm_488 B A x_1 y_2 f_3 s_4 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x) ;)

(; dict ;)

def thm_490 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) -> hyp_2 : hol.proof (hol.eq B y_2 (f_3 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) => hyp_2 : hol.proof (hol.eq B y_2 (f_3 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) (thm_39 A s_4 x_1 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => thm_489 B A x_1 y_2 f_3 s_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x) ;)

(; dict ;)

def thm_491 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B y_2 (f_3 x_1))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B y_2 (f_3 x_1))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hol.PROVE_HYP (hol.eq B y_2 (f_3 x_1)) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) (thm_160 A B s_4 x_1 f_3 y_2 hyp_2) (hyp_4 : hol.proof (hol.eq B y_2 (f_3 x_1)) => thm_490 B A x_1 y_2 f_3 s_4 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x) ;)

(; dict ;)

def thm_492 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B y_2 (f_3 x_1))) -> hol.proof (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_4) (hol.eq B (f_3 x__1_5) (f_3 y_6)))) (hol.eq A x__1_5 y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq B y_2 (f_3 x_1))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (hol.eq B (f_3 z_5) y_2))) x_1) (thm_158 B A f_3 y_2 s_4 x_1 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => thm_491 B A x_1 y_2 f_3 s_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x)) ;)

(; dict ;)

def thm_493 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_3) (hol.eq B (f_1 x__1_5) (f_1 y_6)))) (hol.eq A x__1_5 y_6)))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x__1_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 s_3) (hol.eq B (f_1 x__1_5) (f_1 y_6)))) (hol.eq A x__1_5 y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) => thm_492 B A x_4 y_2 f_1 s_3 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) x))) ;)

(; dict ;)

def thm_494 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_1 x__1_4) (f_1 y_5)))) (hol.eq A x__1_4 y_5)))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_1 x__1_4) (f_1 y_5)))) (hol.eq A x__1_4 y_5)))) => x_4 : hol.term A => thm_493 B A f_1 y_2 s_3 x_4 hyp_1.

(; Theorem: |- (\lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))) (select \lambda z. ((Data.Bool./\ ((Set.member z) s)) ((= (f z)) y)))) ;)

(; dict ;)

def thm_495 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_1 x__1_4) (f_1 y_5)))) (hol.eq A x__1_4 y_5)))) -> hol.proof ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_1 x__1_4) (f_1 y_5)))) (hol.eq A x__1_4 y_5)))) => hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2)))) (thm_419 B A f_1 y_2 s_3) (hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B y_2 (f_1 x_4))) (hol.eq A (hol.select A (z_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_3) (hol.eq B (f_1 z_5) y_2))) x_4))) (thm_422 B A f_1 y_2 s_3) (thm_494 B A f_1 y_2 s_3 hyp_1)).

(; Theorem: |- (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))) ;)

(; dict ;)

def thm_496 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2)))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_483 A x_1 P_2 hyp_1) A (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2))) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))) ;)

(; dict ;)

def thm_497 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_1 x__1_4) (f_1 y_5)))) (hol.eq A x__1_4 y_5)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_1 x__1_4) (f_1 y_5)))) (hol.eq A x__1_4 y_5)))) => hol.PROVE_HYP ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5)))) (thm_495 B A f_1 y_2 s_3 hyp_1) (hyp_2 : hol.proof ((y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B y_2 (f_1 x_5))) (hol.eq A y_4 x_5))) (hol.select A (z_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (hol.eq B (f_1 z_4) y_2)))) => thm_496 B A f_1 y_2 s_3 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) ;)

(; dict ;)

def thm_498 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x__1_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x__1_3) (f_1 y_4)))) (hol.eq A x__1_3 y_4)))) -> hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x__1_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x__1_3) (f_1 y_4)))) (hol.eq A x__1_3 y_4)))) => y_3 : hol.term B => thm_497 B A f_1 y_3 s_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x))))) ;)

(; dict ;)

def thm_499 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) -> hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => hol.PROVE_HYP (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (thm_414 B A f_1 s_2 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => hol.EQ_MP (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (thm_417 A B f_1 s_2) (thm_498 A B f_1 s_2 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))))) ;)

(; dict ;)

def thm_500 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => thm_499 A B f_1 s_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= y) x)))))) ;)

(; dict ;)

def thm_501 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.PROP_EXT (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) (hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5))))) => thm_413 A B f_1 s_2 (thm_241 A B f_1 s_2 hyp_1)) (hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => thm_500 B A f_1 s_2 (thm_414 B A f_1 s_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x)))) ((= (g y)) x)))))) ;)

(; dict ;)

def thm_502 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_3 (f_1 x_5))) (hol.eq A y_4 x_5)))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (thm_240 B A f_1 s_2) (thm_501 B A f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_503 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (thm_201 B A f_1 s_2 hyp_1) (thm_502 B A f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_504 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.PROVE_HYP (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (hol.EQ_MP (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) (thm_33 A B f_1 s_2) (thm_191 A B f_1 s_2)) (hyp_1 : hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))) (hol.forall B (y_4 : hol.term B => hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B y_4 (f_1 x_5))) (hol.eq A (g_3 y_4) x_5)))))) => thm_503 B A f_1 s_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_505 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => thm_504 B A f_1 s_2.

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_506 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) (thm_29 B A f_1) (thm_505 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; thm ;)

def thm_507 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))))) (thm_25 B A) (thm_506 B A).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))))) \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))))) ;)

(; dict ;)

def thm_508 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))))) \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))))) ;)

(; dict ;)

def thm_509 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (thm_508 B A) (thm_508 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))))) ;)

(; dict ;)

def thm_510 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (thm_22 B A) (thm_509 B A).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))) \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))) ;)

(; dict ;)

def thm_511 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))) \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))) ;)

(; dict ;)

def thm_512 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (thm_511 B A f_1) (thm_511 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))))) ;)

(; dict ;)

def thm_513 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (thm_26 A) (thm_512 B A f_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_514 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B))) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))) \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))) ;)

(; dict ;)

def thm_515 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (Set_2Eset B) hol.bool) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))) \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))) ;)

(; dict ;)

def thm_516 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr (Set_2Eset B) hol.bool) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))) (thm_515 A B f_1 s_2) (thm_515 A B f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))) (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))) ;)

(; dict ;)

def thm_517 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))) (thm_514 B) (thm_516 A B f_1 s_2).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))) (Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_518 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 s_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))) thm_45 (thm_504 B A f_1 s_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ;)

(; dict ;)

def thm_519 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ;)

(; dict ;)

def thm_520 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (thm_519 A B f_1 s_2 t_3) (thm_519 A B f_1 s_2 t_3).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))) ;)

(; dict ;)

def thm_521 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_16 B A f_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ;)

(; dict ;)

def thm_522 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => thm_521 B A f_1 s_2.

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_523 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => thm_522 A B f_1 s_2 t_3.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ;)

(; dict ;)

def thm_524 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4)))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (thm_518 B A f_2 s_3) ((A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.EQ_MP (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (thm_520 A B f_1 s_2 t_3) (thm_523 A B f_1 s_2 t_3)) A B f_2 s_3 t_1).

(; Theorem: |- ((= (= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))))) (= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))) ;)

(; dict ;)

def thm_525 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4))))))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4)))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) thm_166 (thm_524 B A t_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_526 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ;)

(; dict ;)

def thm_527 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4))))))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (thm_525 B A t_1 f_2 s_3) (thm_526 A B f_2 s_3 t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ;)

(; dict ;)

def thm_528 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (thm_527 B A t_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) (Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_529 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4))))).

(; Theorem: |- ((= (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_530 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_1) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_3) (hol.eq B (f_2 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => hol.BETA_CONV (hol.arr B A) hol.bool (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_1.

(; Theorem: |- ((= \lambda g. (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)) \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_531 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_1 (g_5 y_6)) y_6)))) g_4) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.ABS_THM (hol.arr B A) hol.bool (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_1 (g_5 y_6)) y_6)))) g_4) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))) (g_4 : hol.term (hol.arr B A) => thm_530 A B g_4 f_1 s_2 t_3).

(; Theorem: |- ((= (Data.Bool.? \lambda g. (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_532 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_1 (g_5 y_6)) y_6)))) g_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_1 (g_5 y_6)) y_6)))) g_4) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))) (thm_193 A B) (thm_531 A B f_1 s_2 t_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)))) ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ;)

(; dict ;)

def thm_533 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (thm_529 A B f_2 s_3) (thm_532 A B f_2 s_3 t_1).

(; Theorem: |- ((= (= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g))))) (= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))) ;)

(; dict ;)

def thm_534 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) thm_166 (thm_533 A B t_1 f_2 s_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g))) ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_535 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_4) (hol.eq B (f_3 (g_5 y_6)) y_6)))) g_1)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6))))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_4) (hol.eq B (f_3 (g_5 y_6)) y_6)))) g_1) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) (thm_529 A B f_3 s_4) (thm_530 A B g_1 f_3 s_4 t_2).

(; Theorem: |- ((= \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g))) \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_536 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM (hol.arr B A) hol.bool (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => thm_535 A B g_4 t_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ;)

(; dict ;)

def thm_537 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (thm_193 A B) (thm_536 A B t_1 f_2 s_3).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g))))) ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))) ;)

(; dict ;)

def thm_538 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (thm_534 A B t_1 f_2 s_3) (thm_537 A B t_1 f_2 s_3).

(; Theorem: |- ((= ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x))))) ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x))))) ;)

(; dict ;)

def thm_539 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))).

(; Theorem: |- ((= ((= ((Data.Bool./\ p) (Data.Bool.? \lambda g. (q g)))) (Data.Bool.? \lambda g. ((Data.Bool./\ p) (q g))))) ((= ((Data.Bool./\ p) (Data.Bool.? \lambda g. (q g)))) (Data.Bool.? \lambda g. ((Data.Bool./\ p) (q g))))) ;)

(; dict ;)

def thm_540 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => q_1 g_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => hol.and p_2 (q_1 g_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => q_1 g_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => hol.and p_2 (q_1 g_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => q_1 g_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => hol.and p_2 (q_1 g_3)))).

(; Theorem: |- ((= ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x))))) ((= ((Data.Bool./\ p) (Data.Bool.? \lambda g. (q g)))) (Data.Bool.? \lambda g. ((Data.Bool./\ p) (q g))))) ;)

(; dict ;)

def thm_541 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => q_1 g_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => hol.and p_2 (q_1 g_3))))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => q_1 g_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => hol.and p_2 (q_1 g_3)))) (thm_539 A q_1 p_2) (thm_540 A q_1 p_2).

(; Theorem: |- (Data.Bool.! \lambda q. ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x))))) ;)

(; dict ;)

def thm_542 : A : hol.type -> p_1 : hol.term hol.bool -> hol.proof (hol.forall (hol.arr A hol.bool) (q_2 : hol.term (hol.arr A hol.bool) => hol.eq hol.bool (hol.and p_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_1 (q_2 x_3))))) :=
  A : hol.type => p_1 : hol.term hol.bool => thm_17 A p_1.

(; Theorem: |- ((= ((Data.Bool./\ p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ p) (q x)))) ;)

(; dict ;)

def thm_543 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_542 A p_2 q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) (Data.Bool.? \lambda g. (q g)))) (Data.Bool.? \lambda g. ((Data.Bool./\ p) (q g)))) ;)

(; dict ;)

def thm_544 : A : hol.type -> q_1 : hol.term (hol.arr A hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => q_1 g_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => hol.and p_2 (q_1 g_3)))) :=
  A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => q_1 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and p_2 (q_1 x_3)))) (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => q_1 g_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (g_3 : hol.term A => hol.and p_2 (q_1 g_3)))) (thm_541 A q_1 p_2) (thm_543 A q_1 p_2).

(; Theorem: |- ((= ((Data.Bool./\ p) (Data.Bool.? \lambda g. (q g)))) (Data.Bool.? \lambda g. ((Data.Bool./\ p) (q g)))) ;)

(; dict ;)

def thm_545 : A : hol.type -> B : hol.type -> q_1 : hol.term (hol.arr (hol.arr B A) hol.bool) -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => q_1 g_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.and p_2 (q_1 g_3)))) :=
  A : hol.type => B : hol.type => q_1 : hol.term (hol.arr (hol.arr B A) hol.bool) => p_2 : hol.term hol.bool => (A : hol.type => q_1 : hol.term (hol.arr A hol.bool) => p_2 : hol.term hol.bool => thm_544 A q_1 p_2) (hol.arr B A) q_1 p_2.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)))) ;)

(; dict ;)

def thm_546 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => (A : hol.type => B : hol.type => q_1 : hol.term (hol.arr (hol.arr B A) hol.bool) => p_2 : hol.term hol.bool => thm_545 A B q_1 p_2) A B (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ;)

(; dict ;)

def thm_547 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => (g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) ((g_5 : hol.term (hol.arr B A) => hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_2 (g_5 y_6)) y_6)))) g_4)))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) (thm_538 A B t_1 f_2 s_3) (thm_546 A B t_1 f_2 s_3).

(; Theorem: |- ((= (= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))) (= (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))) ;)

(; dict ;)

def thm_548 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) thm_166 (thm_547 A B t_1 f_2 s_3).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ((= (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ;)

(; dict ;)

def thm_549 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (thm_548 A B t_1 f_2 s_3) (thm_526 A B f_2 s_3 t_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ;)

(; dict ;)

def thm_550 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (thm_549 A B t_1 f_2 s_3).

(; Theorem: |- ((= ((= \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ((= \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_551 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))).

(; Theorem: |- ((= ((= \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ((= \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_552 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (thm_551 A B t_1 f_2 s_3) (thm_551 A B t_1 f_2 s_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_553 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) -> hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_554 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_555 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) => hol.PROVE_HYP (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (thm_553 A B f_1 s_2 g_3 t_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) => thm_554 A B f_1 s_2 g_3 t_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_556 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5))))) -> hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_97 p_1 q_2 hyp_1) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_557 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5))))) -> hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5))))) => hol.PROVE_HYP (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5))))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) (thm_553 A B f_3 s_1 g_2 t_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5))))) => thm_556 A B s_1 g_2 f_3 t_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_558 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_559 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) -> hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_560 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_561 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) => hol.PROVE_HYP (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (thm_559 A B s_1 g_2 f_3 t_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) => thm_560 A B s_1 g_2 f_3 t_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_562 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_97 p_1 q_2 hyp_1) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_563 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5)))) => hol.PROVE_HYP (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5)))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))) (thm_559 A B s_4 g_3 f_2 t_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5)))) => thm_562 B A t_1 f_2 g_3 s_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_564 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4))) => hyp_1.

(; Theorem: |- ((= (\lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) g)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_565 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) g_1) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr B A) hol.bool (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) g_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) (\lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) g)) ;)

(; dict ;)

def thm_566 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_1 x_5)) x_5))) g_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hol.SYM hol.bool ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_1 x_5)) x_5))) g_2) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_2 (f_1 x_4)) x_4))) (thm_565 A B g_2 f_1 s_3).

(; Theorem: |- (\lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) g) ;)

(; dict ;)

def thm_567 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) -> hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) g_1) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) => hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) g_1) (thm_566 B A f_2 g_1 s_3) (thm_149 B A f_2 g_1 s_3 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_568 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) g_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) g_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_483 A x_1 P_2 hyp_1) (hol.arr B A) g_1 (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_569 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_1 (f_2 x_4)) x_4))) => hol.PROVE_HYP ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) g_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (thm_567 A B g_1 f_2 s_3 hyp_1) (hyp_2 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) g_1) => thm_568 A B g_1 f_2 s_3 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_570 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) -> hol.proof (hol.eq hol.bool (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_571 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))) -> hol.proof (hol.eq hol.bool (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.eq hol.bool (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))))) (thm_569 A B g_3 f_1 s_2 hyp_1) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) => thm_570 A B f_1 s_2 g_3 t_4 hyp_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_572 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hol.REFL (hol.arr B hol.bool) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_573 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hol.TRANS (hol.arr B hol.bool) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (thm_572 A B f_1 s_2 g_3 t_4) (thm_572 A B f_1 s_2 g_3 t_4).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_574 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (thm_150 B) (thm_573 A B f_1 s_2 g_3 t_4).

(; Theorem: |- ((Set.member y) t) ;)

(; dict ;)

def thm_575 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_576 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_577 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (thm_576 A B s_1 g_2 t_3 y_4) (thm_576 A B s_1 g_2 t_3 y_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)) ;)

(; dict ;)

def thm_578 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) => thm_558 A B s_1 g_2 t_3 hyp_1 y_4.

(; Theorem: |- ((Set.member (g y)) s) ;)

(; dict ;)

def thm_579 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (thm_577 A B s_1 g_2 t_3 y_4) (thm_578 A B s_1 g_2 t_3 y_4 hyp_1)) A B s_2 g_4 t_1 y_3 hyp_1 (thm_575 B t_1 y_3 hyp_2).

(; Theorem: |- ((= ((= (f (g y))) y)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_580 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) -> hol.proof (hol.eq hol.bool (hol.eq B (f_4 (g_3 y_2)) y_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2) hyp_1.

(; Theorem: |- ((= ((= (f (g y))) y)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_581 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (hol.eq hol.bool (hol.eq B (f_5 (g_4 y_3)) y_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_5 (g_4 y_3)) y_3))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq hol.bool (hol.eq B (f_5 (g_4 y_3)) y_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_5 (g_4 y_3)) y_3))) (thm_579 B A t_1 s_2 y_3 g_4 hyp_1 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) => thm_580 A B s_2 y_3 g_4 f_5 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_582 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_583 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (thm_582 A B g_1 f_2 t_3 y_4) (thm_582 A B g_1 f_2 t_3 y_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_584 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_2 (g_1 y_5)) y_5))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_2 (g_1 y_5)) y_5))) => thm_564 A B g_1 f_2 t_3 hyp_1 y_4.

(; Theorem: |- ((= (f (g y))) y) ;)

(; dict ;)

def thm_585 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_4 (g_3 y_5)) y_5))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) -> hol.proof (hol.eq B (f_4 (g_3 y_2)) y_2) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_4 (g_3 y_5)) y_5))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) => (A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_2 (g_1 y_5)) y_5))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (thm_583 A B g_1 f_2 t_3 y_4) (thm_584 A B g_1 f_2 t_3 y_4 hyp_1)) A B g_3 f_4 t_1 y_2 hyp_1 (thm_575 B t_1 y_2 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_586 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.eq B (f_2 (g_5 y_6)) y_6))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.eq B (f_2 (g_5 y_6)) y_6))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) => hol.EQ_MP (hol.eq B (f_2 (g_5 y_4)) y_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4)) (thm_581 A B t_1 s_3 y_4 g_5 f_2 hyp_2 hyp_3) (thm_585 A B t_1 y_4 g_5 f_2 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_587 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.eq B (f_2 (g_5 y_6)) y_6))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.eq B (f_2 (g_5 y_6)) y_6))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4)) (thm_575 B t_1 y_4 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) => thm_586 B A t_1 f_2 s_3 y_4 g_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_588 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.eq B (f_1 (g_3 y_6)) y_6))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.eq B (f_1 (g_3 y_6)) y_6))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => thm_587 B A t_4 f_1 s_2 y_5 g_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_589 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) => y_5 : hol.term B => thm_588 A B f_1 s_2 g_3 t_4 y_5 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_590 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) -> hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) => hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => hol.EQ_MP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (thm_571 A B f_3 s_4 g_1 t_2 hyp_1) (hol.EQ_MP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) (thm_574 A B f_3 s_4 g_1 t_2) (thm_589 A B f_3 s_4 g_1 t_2 hyp_2 hyp_3)).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_591 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) -> hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) => hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (thm_149 B A f_3 g_1 s_4 hyp_1) (hyp_4 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) => thm_590 A B g_1 t_2 f_3 s_4 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_592 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) -> hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) => hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (thm_564 A B g_1 f_3 t_2 hyp_2) (hyp_4 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) => thm_591 A B g_1 t_2 f_3 s_4 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_593 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) -> hyp_3 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => hyp_3 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (thm_563 B A t_2 f_3 g_1 s_4 hyp_3) (hyp_4 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))) => thm_592 A B g_1 t_2 f_3 s_4 hyp_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_594 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) -> hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (thm_561 A B s_4 g_1 f_3 t_2 hyp_2) (hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) => thm_593 A B g_1 t_2 f_3 s_4 hyp_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_595 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) -> hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (thm_558 A B s_4 g_1 t_2 hyp_1) (hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => thm_594 A B g_1 t_2 f_3 s_4 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_596 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) -> hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))))) => hol.PROVE_HYP (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (thm_557 A B s_4 g_1 f_3 t_2 hyp_2) (hyp_3 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))) => thm_595 A B g_1 t_2 f_3 s_4 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_597 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))))) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (thm_555 A B f_3 s_4 g_1 t_2 hyp_1) (hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) => thm_596 A B g_1 t_2 f_3 s_4 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_598 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hol.proof (hol.imp (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) => thm_597 A B g_3 t_4 f_1 s_2 hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_599 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_600 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_601 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) => hol.PROVE_HYP (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (thm_599 A B g_1 t_2 f_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) => thm_600 A B g_1 t_2 f_3 s_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_602 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_97 p_1 q_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_603 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) => hol.PROVE_HYP (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (thm_599 A B g_3 t_4 f_1 s_2 hyp_1) (hyp_2 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) => thm_602 A B f_1 s_2 g_3 t_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) x)) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ((Data.Bool.==> (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_604 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall (hol.arr B A) (x_5 : hol.term (hol.arr B A) => hol.imp ((g_6 : hol.term (hol.arr B A) => hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq A (g_6 (f_3 x_7)) x_7))) x_5) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_4))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.eq B (f_3 (g_1 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_1 (f_3 x_6)) x_6))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_278 A Q_1 P_2) (hol.arr B A) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))))) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6))).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x))) ;)

(; dict ;)

def thm_605 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_606 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) => hyp_1.

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_607 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => hol.REFL (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_608 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => hol.TRANS (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (thm_607 A B s_1 g_2 t_3) (thm_607 A B s_1 g_2 t_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ;)

(; dict ;)

def thm_609 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_4) s_1)) (thm_150 B) (thm_608 A B s_1 g_2 t_3).

(; Theorem: |- ((= ((= ((Set.member y) t)) Data.Bool.T)) ((= ((Set.member y) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_610 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member y) t)) Data.Bool.T)) ((= ((Set.member y) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_611 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (thm_610 B t_1 y_2) (thm_610 B t_1 y_2).

(; Theorem: |- ((= ((Set.member y) t)) ((= ((Set.member y) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_612 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => (t_1 : hol.term hol.bool => thm_53 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1).

(; Theorem: |- ((= ((Set.member y) t)) Data.Bool.T) ;)

(; dict ;)

def thm_613 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (thm_612 B t_1 y_2) (thm_575 B t_1 y_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member y) t))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_614 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1)) (hol.imp hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true thm_281 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_1) hol.true) (thm_611 B t_1 y_2) (thm_613 B t_1 y_2 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_615 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hol.REFL hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_616 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.imp hol.true (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4)) (hol.imp hol.true) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)) (thm_614 B t_4 y_5 hyp_1) (thm_615 B A f_1 s_2 y_5 g_3).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_617 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => (t_1 : hol.term hol.bool => thm_303 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_618 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.imp hol.true (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)) (thm_616 A B f_1 s_2 g_3 t_4 y_5 hyp_1) (thm_617 B A f_1 s_2 y_5 g_3).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) (Data.Bool.==> ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_619 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)) thm_281 (thm_618 A B f_1 s_2 g_3 t_4 y_5 hyp_1).

(; Theorem: |- ((= ((Set.member (g y)) s)) ((Set.member (g y)) s)) ;)

(; dict ;)

def thm_620 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((Set.member (g y)) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_621 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (thm_619 A B f_1 s_2 g_3 t_4 y_5 hyp_1) (thm_620 B A s_2 y_5 g_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ((Set.member (g y)) s))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_622 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3)) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) => hol.SYM hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3)) (thm_621 A B f_2 s_3 g_5 t_1 y_4 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_623 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) => hyp_1.

(; Theorem: |- ((Set.member (g y)) s) ;)

(; dict ;)

def thm_624 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_136 q_1 p_2 hyp_1) (hol.eq B (f_1 (g_4 y_3)) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) hyp_1.

(; Theorem: |- ((Set.member (g y)) s) ;)

(; dict ;)

def thm_625 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (thm_623 B A f_1 s_2 y_3 g_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) => thm_624 B A f_1 s_2 y_3 g_4 hyp_2).

(; Theorem: |- ((Set.member (g y)) s) ;)

(; dict ;)

def thm_626 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) => hyp_1.

(; Theorem: |- ((Set.member (g y)) s) ;)

(; dict ;)

def thm_627 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (thm_625 B A f_1 s_2 y_3 g_4 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) => thm_626 B A s_2 y_3 g_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ((Set.member (g y)) s)) ;)

(; dict ;)

def thm_628 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) => thm_627 B A f_1 s_2 y_3 g_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((Set.member (g y)) s)) ;)

(; dict ;)

def thm_629 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2)) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2)) (thm_622 B A t_4 f_1 s_2 y_5 g_3 hyp_1) (thm_628 B A f_1 s_2 y_5 g_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_630 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_1 (g_3 y_6)) y_6)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_1 (g_3 y_6)) y_6)))) => thm_606 A B f_1 s_2 g_3 t_4 hyp_1 y_5.

(; Theorem: |- ((Set.member (g y)) s) ;)

(; dict ;)

def thm_631 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_1 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_1 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) => thm_629 A B f_1 s_3 g_5 t_2 y_4 hyp_2 (thm_630 A B f_1 s_3 g_5 t_2 y_4 hyp_1).

(; Theorem: |- ((Set.member (g y)) s) ;)

(; dict ;)

def thm_632 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_1 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_3) (hol.eq B (f_1 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (thm_575 B t_2 y_4 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) => thm_631 B A f_1 t_2 s_3 y_4 g_5 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)) ;)

(; dict ;)

def thm_633 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_1 (g_3 y_6)) y_6)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_1 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => thm_632 B A f_1 t_4 s_2 y_5 g_3 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s))) ;)

(; dict ;)

def thm_634 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) => y_5 : hol.term B => thm_633 A B f_1 s_2 g_3 t_4 y_5 hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_635 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_636 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.eq hol.bool (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (g_2 (f_3 x_5)) x_5)))))) (hol.EQ_MP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) (thm_609 A B s_1 g_2 t_4) (thm_634 A B f_3 s_1 g_2 t_4 hyp_1)) (hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1))) => thm_635 A B s_1 g_2 f_3 t_4 hyp_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_637 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => hol.REFL (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_638 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => hol.TRANS (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (thm_637 A B g_1 f_2 t_3) (thm_637 A B g_1 f_2 t_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_639 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq B (f_2 (g_1 y_4)) y_4)) (thm_150 B) (thm_638 A B g_1 f_2 t_3).

(; Theorem: |- ((= ((= (f (g y))) y)) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_640 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 (g_2 y_1)) y_1) (hol.eq B (f_3 (g_2 y_1)) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (f_3 (g_2 y_1)) y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((= (f (g y))) y))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_641 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.eq B (f_1 (g_3 y_5)) y_5)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)) (hol.eq B (f_1 (g_3 y_5)) y_5))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.eq B (f_1 (g_3 y_5)) y_5) (hol.eq B (f_1 (g_3 y_5)) y_5) (thm_619 A B f_1 s_2 g_3 t_4 y_5 hyp_1) (thm_640 A B y_5 g_3 f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ((= (f (g y))) y))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_642 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4)) (hol.eq B (f_2 (g_5 y_4)) y_4)) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4))) (hol.eq B (f_2 (g_5 y_4)) y_4))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) => hol.SYM hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4))) (hol.eq B (f_2 (g_5 y_4)) y_4)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq B (f_2 (g_5 y_4)) y_4)) (hol.eq B (f_2 (g_5 y_4)) y_4)) (thm_641 A B f_2 s_3 g_5 t_1 y_4 hyp_1).

(; Theorem: |- ((= (f (g y))) y) ;)

(; dict ;)

def thm_643 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2)) -> hol.proof (hol.eq B (f_4 (g_3 y_2)) y_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_97 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2) hyp_1.

(; Theorem: |- ((= (f (g y))) y) ;)

(; dict ;)

def thm_644 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2)) -> hol.proof (hol.eq B (f_4 (g_3 y_2)) y_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2)) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2)) (hol.eq B (f_4 (g_3 y_2)) y_2) (thm_623 B A f_4 s_1 y_2 g_3 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2)) => thm_643 A B s_1 y_2 g_3 f_4 hyp_2).

(; Theorem: |- ((= (f (g y))) y) ;)

(; dict ;)

def thm_645 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 (g_2 y_1)) y_1) -> hol.proof (hol.eq B (f_3 (g_2 y_1)) y_1) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 (g_2 y_1)) y_1) => hyp_1.

(; Theorem: |- ((= (f (g y))) y) ;)

(; dict ;)

def thm_646 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2)) -> hol.proof (hol.eq B (f_4 (g_3 y_2)) y_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) s_1) (hol.eq B (f_4 (g_3 y_2)) y_2)) => hol.PROVE_HYP (hol.eq B (f_4 (g_3 y_2)) y_2) (hol.eq B (f_4 (g_3 y_2)) y_2) (thm_644 A B s_1 y_2 g_3 f_4 hyp_1) (hyp_2 : hol.proof (hol.eq B (f_4 (g_3 y_2)) y_2) => thm_645 A B y_2 g_3 f_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_647 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) (hol.eq B (f_1 (g_4 y_3)) y_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_3) s_2) (hol.eq B (f_1 (g_4 y_3)) y_3)) => thm_646 A B s_2 y_3 g_4 f_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_648 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.eq B (f_1 (g_3 y_5)) y_5)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)) (hol.eq B (f_1 (g_3 y_5)) y_5)) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.eq B (f_1 (g_3 y_5)) y_5)) (thm_642 B A t_4 f_1 s_2 y_5 g_3 hyp_1) (thm_647 B A f_1 s_2 y_5 g_3).

(; Theorem: |- ((= (f (g y))) y) ;)

(; dict ;)

def thm_649 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_5 (g_4 y_6)) y_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) -> hol.proof (hol.eq B (f_5 (g_4 y_3)) y_3) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_5 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) => thm_648 A B f_5 s_1 g_4 t_2 y_3 hyp_2 (thm_630 A B f_5 s_1 g_4 t_2 y_3 hyp_1).

(; Theorem: |- ((= (f (g y))) y) ;)

(; dict ;)

def thm_650 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_5 (g_4 y_6)) y_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) -> hol.proof (hol.eq B (f_5 (g_4 y_3)) y_3) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_5 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) (hol.eq B (f_5 (g_4 y_3)) y_3) (thm_575 B t_2 y_3 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) => thm_649 A B s_1 t_2 y_3 g_4 f_5 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_651 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> y_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_1) (hol.eq B (f_3 (g_2 y_6)) y_6)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => y_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_1) (hol.eq B (f_3 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) => thm_650 A B s_1 t_4 y_5 g_2 f_3 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_652 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) -> hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_3 (g_2 y_5)) y_5))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) => y_5 : hol.term B => thm_651 A B s_1 g_2 f_3 t_4 y_5 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_653 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_654 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_4) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_4) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_3 (f_2 x_5)) x_5))))) (hol.EQ_MP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) (thm_639 A B g_3 f_2 t_1) (thm_652 A B s_4 g_3 f_2 t_1 hyp_1)) (hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_3 y_5)) y_5))) => thm_653 B A t_1 f_2 g_3 s_4 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ;)

(; dict ;)

def thm_655 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ;)

(; dict ;)

def thm_656 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (thm_655 A z_1 x_2) (thm_655 A z_1 x_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x_1. ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) x_1)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z))))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)))) ;)

(; dict ;)

def thm_657 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.forall A (x__1_3 : hol.term A => hol.imp ((y_4 : hol.term A => hol.and (hol.eq A x_2 y_4) (hol.eq A y_4 z_1)) x__1_3) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_2 z_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) (hol.eq A x_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_278 A Q_1 P_2) A (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) (hol.eq A x_2 z_1)) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1)).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z))))) ;)

(; dict ;)

def thm_658 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))) ;)

(; dict ;)

def thm_659 : A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_4)) (hol.eq A x_2 z_4))))) -> hol.proof (hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3)))) :=
  A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_4)) (hol.eq A x_2 z_4))))) => thm_658 A hyp_1 x_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z))) ;)

(; dict ;)

def thm_660 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) -> hol.proof (hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_1) (hol.eq A y_1 z_3)) (hol.eq A x_2 z_3))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) => thm_659 A x_2 hyp_1 y_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)) ;)

(; dict ;)

def thm_661 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) -> hol.proof (hol.imp (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) (hol.eq A x_3 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) => thm_660 A y_2 x_3 hyp_1 z_1.

(; Theorem: |- ((Data.Bool./\ ((= x) y)) ((= y) z)) ;)

(; dict ;)

def thm_662 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) -> hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) => hyp_1.

(; Theorem: |- ((= x) z) ;)

(; dict ;)

def thm_663 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) -> hyp_2 : hol.proof (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2)) -> hol.proof (hol.eq A x_3 z_2) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) => hyp_2 : hol.proof (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2)) => thm_661 A z_2 y_1 x_3 hyp_1 (thm_662 A z_2 y_1 x_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)) ;)

(; dict ;)

def thm_664 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2)) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_3 z_2)) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2)) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) => thm_663 A y_1 z_2 x_3 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z))) ;)

(; dict ;)

def thm_665 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_3 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) => thm_664 A y_2 z_1 x_3 hyp_1.

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) y)) ((Data.Bool./\ ((= x) y)) ((= y) z))) ;)

(; dict ;)

def thm_666 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hol.BETA_CONV A hol.bool (y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1.

(; Theorem: |- (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) y) ;)

(; dict ;)

def thm_667 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) -> hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= x) y)) ((= y) z)) ;)

(; dict ;)

def thm_668 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_1)) y_2) -> hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_1)) y_2) => hol.EQ_MP ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_1)) y_2) (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) (thm_666 A y_2 z_1 x_3) (thm_667 A y_2 z_1 x_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)) ;)

(; dict ;)

def thm_669 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_3 z_2)) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) => thm_665 A z_2 y_1 x_3 (thm_668 A z_2 y_1 x_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) y)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z))) ;)

(; dict ;)

def thm_670 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_3 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) => thm_669 A y_1 z_2 x_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) y)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)))) ;)

(; dict ;)

def thm_671 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.forall A (y_3 : hol.term A => hol.imp ((y_4 : hol.term A => hol.and (hol.eq A x_2 y_4) (hol.eq A y_4 z_1)) y_3) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => y_3 : hol.term A => thm_670 A y_3 z_1 x_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z))) ;)

(; dict ;)

def thm_672 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) (hol.eq A x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => thm_657 A z_1 x_2 (thm_671 A z_1 x_2).

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z))) ;)

(; dict ;)

def thm_673 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)) ;)

(; dict ;)

def thm_674 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) (hol.eq A x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) => thm_672 A z_1 x_2 (thm_673 A z_1 x_2 hyp_1).

(; Theorem: |- ((= x) z) ;)

(; dict ;)

def thm_675 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) -> hol.proof (hol.eq A x_2 z_1) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) => thm_674 A z_1 x_2 hyp_2 (thm_658 A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z)) ;)

(; dict ;)

def thm_676 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) => thm_675 A z_1 x_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ;)

(; dict ;)

def thm_677 : A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_4)) (hol.eq A x_2 z_4))))) -> hol.proof (hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2))) :=
  A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_4)) (hol.eq A x_2 z_4))))) => z_2 : hol.term A => thm_676 A z_2 x_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z)))) ;)

(; dict ;)

def thm_678 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) => x_1 : hol.term A => thm_677 A x_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))))) ;)

(; dict ;)

def thm_679 : A : hol.type -> hol.proof (hol.imp (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) (hol.forall A (x_1 : hol.term A => hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) => thm_678 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z)))) ;)

(; dict ;)

def thm_680 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2)))) :=
  A : hol.type => thm_679 A (thm_18 A).

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ;)

(; dict ;)

def thm_681 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2))) :=
  A : hol.type => x_1 : hol.term A => thm_680 A x_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z)) ;)

(; dict ;)

def thm_682 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => thm_681 A x_2 z_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= (g (f x))) y)) ((= y) x)))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_683 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A (g_3 (f_2 x_1)) y_4) (hol.eq A y_4 x_1))) (hol.eq A (g_3 (f_2 x_1)) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => (A : hol.type => z_1 : hol.term A => x_2 : hol.term A => (A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (thm_656 A z_1 x_2) (thm_682 A z_1 x_2)) A z_1 x_2) A x_1 (g_3 (f_2 x_1)).

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ ((= (g (f x))) y)) ((= y) x)) (h (f x)))) ((Data.Bool./\ ((= (g (f x))) (h (f x)))) ((= (h (f x))) x))) ;)

(; dict ;)

def thm_684 : B : hol.type -> A : hol.type -> h_1 : hol.term (hol.arr B A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_5) (hol.eq A y_5 x_2)) (h_1 (f_3 x_2))) (hol.and (hol.eq A (g_4 (f_3 x_2)) (h_1 (f_3 x_2))) (hol.eq A (h_1 (f_3 x_2)) x_2))) :=
  B : hol.type => A : hol.type => h_1 : hol.term (hol.arr B A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.BETA_CONV A hol.bool (y_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_5) (hol.eq A y_5 x_2)) (h_1 (f_3 x_2)).

(; Theorem: |- ((= ((Data.Bool./\ ((= (g (f x))) (h (f x)))) ((= (h (f x))) x))) (\lambda y. ((Data.Bool./\ ((= (g (f x))) y)) ((= y) x)) (h (f x)))) ;)

(; dict ;)

def thm_685 : B : hol.type -> A : hol.type -> h_1 : hol.term (hol.arr B A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A (g_4 (f_3 x_2)) (h_1 (f_3 x_2))) (hol.eq A (h_1 (f_3 x_2)) x_2)) ((y_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_5) (hol.eq A y_5 x_2)) (h_1 (f_3 x_2)))) :=
  B : hol.type => A : hol.type => h_1 : hol.term (hol.arr B A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.SYM hol.bool ((y_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_5) (hol.eq A y_5 x_2)) (h_1 (f_3 x_2))) (hol.and (hol.eq A (g_4 (f_3 x_2)) (h_1 (f_3 x_2))) (hol.eq A (h_1 (f_3 x_2)) x_2)) (thm_684 B A h_1 x_2 f_3 g_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_686 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_687 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (thm_686 B A t_1 f_2 s_3 x_4) (thm_686 B A t_1 f_2 s_3 x_4).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_688 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)) ;)

(; dict ;)

def thm_689 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) => thm_688 B A t_1 f_2 s_3 hyp_1 x_4.

(; Theorem: |- ((Set.member (f x)) t) ;)

(; dict ;)

def thm_690 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => thm_689 B A t_2 f_4 s_1 x_3 hyp_1 (thm_39 A s_1 x_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((Set.member (f x)) t)) ;)

(; dict ;)

def thm_691 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_1) t_2)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_4) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) => thm_690 A B s_4 t_2 x_1 f_3 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_692 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) => x_4 : hol.term A => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => thm_691 B A x_4 t_1 f_2 s_3 hyp_2 (thm_688 B A t_1 f_2 s_3 hyp_1).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (g y)) (h y)))) \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (g y)) (h y)))) ;)

(; dict ;)

def thm_693 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4)))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => hol.REFL (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (g y)) (h y)))) \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (g y)) (h y)))) ;)

(; dict ;)

def thm_694 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4)))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => hol.TRANS (hol.arr B hol.bool) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))) (thm_693 A B h_1 g_2 t_3) (thm_693 A B h_1 g_2 t_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (g y)) (h y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (g y)) (h y))))) ;)

(; dict ;)

def thm_695 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> g_2 : hol.term (hol.arr B A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => g_2 : hol.term (hol.arr B A) => t_3 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))) (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (hol.eq A (g_2 y_4) (h_1 y_4))) (thm_150 B) (thm_694 A B h_1 g_2 t_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= (g y)) y)) ((= y) (h y))))) ((= (g y)) (h y))) ;)

(; dict ;)

def thm_696 : B : hol.type -> A : hol.type -> h_1 : hol.term (hol.arr B A) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A (g_3 y_2) y_4) (hol.eq A y_4 (h_1 y_2)))) (hol.eq A (g_3 y_2) (h_1 y_2))) :=
  B : hol.type => A : hol.type => h_1 : hol.term (hol.arr B A) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => (A : hol.type => z_1 : hol.term A => x_2 : hol.term A => thm_682 A z_1 x_2) A (h_1 y_2) (g_3 y_2).

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ ((= (g y)) y)) ((= y) (h y))) (h (f (g y))))) ((Data.Bool./\ ((= (g y)) (h (f (g y))))) ((= (h (f (g y)))) (h y)))) ;)

(; dict ;)

def thm_697 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((y_5 : hol.term A => hol.and (hol.eq A (g_4 y_3) y_5) (hol.eq A y_5 (h_2 y_3))) (h_2 (f_1 (g_4 y_3)))) (hol.and (hol.eq A (g_4 y_3) (h_2 (f_1 (g_4 y_3)))) (hol.eq A (h_2 (f_1 (g_4 y_3))) (h_2 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hol.BETA_CONV A hol.bool (y_5 : hol.term A => hol.and (hol.eq A (g_4 y_3) y_5) (hol.eq A y_5 (h_2 y_3))) (h_2 (f_1 (g_4 y_3))).

(; Theorem: |- ((= ((Data.Bool./\ ((= (g y)) (h (f (g y))))) ((= (h (f (g y)))) (h y)))) (\lambda y. ((Data.Bool./\ ((= (g y)) y)) ((= y) (h y))) (h (f (g y))))) ;)

(; dict ;)

def thm_698 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A (g_4 y_3) (h_2 (f_1 (g_4 y_3)))) (hol.eq A (h_2 (f_1 (g_4 y_3))) (h_2 y_3))) ((y_5 : hol.term A => hol.and (hol.eq A (g_4 y_3) y_5) (hol.eq A y_5 (h_2 y_3))) (h_2 (f_1 (g_4 y_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hol.SYM hol.bool ((y_5 : hol.term A => hol.and (hol.eq A (g_4 y_3) y_5) (hol.eq A y_5 (h_2 y_3))) (h_2 (f_1 (g_4 y_3)))) (hol.and (hol.eq A (g_4 y_3) (h_2 (f_1 (g_4 y_3)))) (hol.eq A (h_2 (f_1 (g_4 y_3))) (h_2 y_3))) (thm_697 B A f_1 h_2 y_3 g_4).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((= y) x))) ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_699 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((= y) x))) ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_700 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_699 A y_1 x_2) (thm_699 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_701 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_702 : A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) -> hol.proof (hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) => thm_701 A hyp_1 x_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_703 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) -> hol.proof (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => thm_702 A x_2 hyp_1 y_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_704 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq A x_2 y_1) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hyp_1.

(; Theorem: |- ((= y) x) ;)

(; dict ;)

def thm_705 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) -> hyp_2 : hol.proof (hol.eq A x_1 y_2) -> hol.proof (hol.eq A y_2 x_1) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => hyp_2 : hol.proof (hol.eq A x_1 y_2) => thm_703 A y_2 x_1 hyp_1 (thm_704 A y_2 x_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))))) ((= y) x)) ;)

(; dict ;)

def thm_706 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_1 y_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) (hol.eq A y_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_1 y_2) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => thm_705 A x_1 y_2 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_707 : A : hol.type -> y_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) => x_2 : hol.term A => hyp_2 : hol.proof (hol.eq A x_2 y_1) => thm_706 A x_2 y_1 hyp_2 (thm_701 A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_708 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) -> hol.proof (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => y_1 : hol.term A => thm_707 A y_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))))) ;)

(; dict ;)

def thm_709 : A : hol.type -> hol.proof (hol.imp (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => thm_708 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_710 : A : hol.type -> hol.proof (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)))) :=
  A : hol.type => thm_709 A (thm_19 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_711 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => thm_710 A y_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_712 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_711 A y_1 x_2.

(; Theorem: |- ((Data.Bool.==> ((= (h (f (g y)))) (g y))) ((= (g y)) (h (f (g y))))) ;)

(; dict ;)

def thm_713 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> h_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.eq A (h_4 (f_3 (g_2 y_1))) (g_2 y_1)) (hol.eq A (g_2 y_1) (h_4 (f_3 (g_2 y_1))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => h_4 : hol.term (hol.arr B A) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_700 A y_1 x_2) (thm_712 A y_1 x_2)) A y_1 x_2) A (g_2 y_1) (h_4 (f_3 (g_2 y_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x))) ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x))) ;)

(; dict ;)

def thm_714 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x))) ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x))) ;)

(; dict ;)

def thm_715 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)) (thm_714 B A f_1 h_2 s_3 x_4) (thm_714 B A f_1 h_2 s_3 x_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x)) ;)

(; dict ;)

def thm_716 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (h_2 (f_1 x_5)) x_5))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (h_2 (f_1 x_5)) x_5))) => thm_605 B A f_1 h_2 s_3 hyp_1 x_4.

(; Theorem: |- ((Data.Bool.==> ((Set.member (g y)) s)) ((= (h (f (g y)))) (g y))) ;)

(; dict ;)

def thm_717 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_2 (f_1 x_6)) x_6))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_4) s_3) (hol.eq A (h_2 (f_1 (g_5 y_4))) (g_5 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term B => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_2 (f_1 x_6)) x_6))) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (h_2 (f_1 x_5)) x_5))) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (h_2 (f_1 x_5)) x_5))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4)) (thm_715 B A f_1 h_2 s_3 x_4) (thm_716 B A f_1 h_2 s_3 x_4 hyp_1)) B A f_1 h_2 s_3 x_4 hyp_1) B A f_1 h_2 s_3 (g_5 y_4) hyp_1.

(; Theorem: |- ((= (h (f (g y)))) (g y)) ;)

(; dict ;)

def thm_718 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> h_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_6 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_2) (hol.eq B (f_5 (g_4 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (hol.eq A (h_6 (f_5 (g_4 y_3))) (g_4 y_3)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => h_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_6 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_2) (hol.eq B (f_5 (g_4 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => thm_717 B A f_5 h_6 s_2 y_3 g_4 hyp_1 (thm_631 B A f_5 t_1 s_2 y_3 g_4 hyp_2 hyp_3).

(; Theorem: |- ((= (g y)) (h (f (g y)))) ;)

(; dict ;)

def thm_719 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> h_4 : hol.term (hol.arr B A) -> y_5 : hol.term B -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_4 (f_3 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_3 (g_6 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) -> hol.proof (hol.eq A (g_6 y_5) (h_4 (f_3 (g_6 y_5)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => h_4 : hol.term (hol.arr B A) => y_5 : hol.term B => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_4 (f_3 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_3 (g_6 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) => thm_713 B A y_5 g_6 f_3 h_4 (thm_718 B A t_1 s_2 y_5 g_6 f_3 h_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((= (h (f (g y)))) (h y))) ((Data.Bool./\ ((= (g y)) (h (f (g y))))) ((= (h (f (g y)))) (h y)))) ;)

(; dict ;)

def thm_720 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> h_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A (g_2 y_1) (h_4 (f_3 (g_2 y_1)))) -> hol.proof (hol.eq hol.bool (hol.eq A (h_4 (f_3 (g_2 y_1))) (h_4 y_1)) (hol.and (hol.eq A (g_2 y_1) (h_4 (f_3 (g_2 y_1)))) (hol.eq A (h_4 (f_3 (g_2 y_1))) (h_4 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => h_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A (g_2 y_1) (h_4 (f_3 (g_2 y_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq A (g_2 y_1) (h_4 (f_3 (g_2 y_1)))) (hol.eq A (h_4 (f_3 (g_2 y_1))) (h_4 y_1)) hyp_1.

(; Theorem: |- ((= ((= (h (f (g y)))) (h y))) ((Data.Bool./\ ((= (g y)) (h (f (g y))))) ((= (h (f (g y)))) (h y)))) ;)

(; dict ;)

def thm_721 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> h_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_6 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_2) (hol.eq B (f_5 (g_4 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) -> hol.proof (hol.eq hol.bool (hol.eq A (h_6 (f_5 (g_4 y_3))) (h_6 y_3)) (hol.and (hol.eq A (g_4 y_3) (h_6 (f_5 (g_4 y_3)))) (hol.eq A (h_6 (f_5 (g_4 y_3))) (h_6 y_3)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => h_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_6 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_2) (hol.eq B (f_5 (g_4 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1) => hol.PROVE_HYP (hol.eq A (g_4 y_3) (h_6 (f_5 (g_4 y_3)))) (hol.eq hol.bool (hol.eq A (h_6 (f_5 (g_4 y_3))) (h_6 y_3)) (hol.and (hol.eq A (g_4 y_3) (h_6 (f_5 (g_4 y_3)))) (hol.eq A (h_6 (f_5 (g_4 y_3))) (h_6 y_3)))) (thm_719 B A t_1 s_2 f_5 h_6 y_3 g_4 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof (hol.eq A (g_4 y_3) (h_6 (f_5 (g_4 y_3)))) => thm_720 B A y_3 g_4 f_5 h_6 hyp_4).

(; Theorem: |- ((= h) h) ;)

(; dict ;)

def thm_722 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr B A) h_1 h_1) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => hol.REFL (hol.arr B A) h_1.

(; Theorem: |- ((= (h (f (g y)))) (h y)) ;)

(; dict ;)

def thm_723 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> h_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_1) (hol.eq B (f_5 (g_4 y_7)) y_7)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) -> hol.proof (hol.eq A (h_6 (f_5 (g_4 y_3))) (h_6 y_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => h_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_1) (hol.eq B (f_5 (g_4 y_7)) y_7)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) => hol.APP_THM B A h_6 h_6 (f_5 (g_4 y_3)) y_3 (thm_722 A B h_6) (thm_649 A B s_1 t_2 y_3 g_4 f_5 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= (g y)) (h (f (g y))))) ((= (h (f (g y)))) (h y))) ;)

(; dict ;)

def thm_724 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> h_4 : hol.term (hol.arr B A) -> y_5 : hol.term B -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_4 (f_3 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_3 (g_6 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) -> hol.proof (hol.and (hol.eq A (g_6 y_5) (h_4 (f_3 (g_6 y_5)))) (hol.eq A (h_4 (f_3 (g_6 y_5))) (h_4 y_5))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => h_4 : hol.term (hol.arr B A) => y_5 : hol.term B => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_4 (f_3 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_3 (g_6 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) => hol.EQ_MP (hol.eq A (h_4 (f_3 (g_6 y_5))) (h_4 y_5)) (hol.and (hol.eq A (g_6 y_5) (h_4 (f_3 (g_6 y_5)))) (hol.eq A (h_4 (f_3 (g_6 y_5))) (h_4 y_5))) (thm_721 B A t_1 s_2 y_5 g_6 f_3 h_4 hyp_1 hyp_2 hyp_3) (thm_723 B A s_2 t_1 y_5 g_6 f_3 h_4 hyp_2 hyp_3).

(; Theorem: |- (\lambda y. ((Data.Bool./\ ((= (g y)) y)) ((= y) (h y))) (h (f (g y)))) ;)

(; dict ;)

def thm_725 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> h_4 : hol.term (hol.arr B A) -> y_5 : hol.term B -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_4 (f_3 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_3 (g_6 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) -> hol.proof ((y_7 : hol.term A => hol.and (hol.eq A (g_6 y_5) y_7) (hol.eq A y_7 (h_4 y_5))) (h_4 (f_3 (g_6 y_5)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => h_4 : hol.term (hol.arr B A) => y_5 : hol.term B => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_4 (f_3 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_3 (g_6 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) => hol.EQ_MP (hol.and (hol.eq A (g_6 y_5) (h_4 (f_3 (g_6 y_5)))) (hol.eq A (h_4 (f_3 (g_6 y_5))) (h_4 y_5))) ((y_7 : hol.term A => hol.and (hol.eq A (g_6 y_5) y_7) (hol.eq A y_7 (h_4 y_5))) (h_4 (f_3 (g_6 y_5)))) (thm_698 B A f_3 h_4 y_5 g_6) (thm_724 B A t_1 s_2 f_3 h_4 y_5 g_6 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((= (g y)) y)) ((= y) (h y)))) ;)

(; dict ;)

def thm_726 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> y_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (hol.eq A (g_4 y_3) y_5) (hol.eq A y_5 (h_2 y_3))) (h_2 (f_1 (g_4 y_3)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A (g_4 y_3) y_5) (hol.eq A y_5 (h_2 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => y_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (hol.eq A (g_4 y_3) y_5) (hol.eq A y_5 (h_2 y_3))) (h_2 (f_1 (g_4 y_3)))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_483 A x_1 P_2 hyp_1) A (h_2 (f_1 (g_4 y_3))) (y_5 : hol.term A => hol.and (hol.eq A (g_4 y_3) y_5) (hol.eq A y_5 (h_2 y_3))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((= (g y)) y)) ((= y) (h y)))) ;)

(; dict ;)

def thm_727 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> h_4 : hol.term (hol.arr B A) -> y_5 : hol.term B -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_4 (f_2 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_2 (g_6 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_7 : hol.term A => hol.and (hol.eq A (g_6 y_5) y_7) (hol.eq A y_7 (h_4 y_5)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => h_4 : hol.term (hol.arr B A) => y_5 : hol.term B => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_4 (f_2 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_2 (g_6 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) => hol.PROVE_HYP ((y_7 : hol.term A => hol.and (hol.eq A (g_6 y_5) y_7) (hol.eq A y_7 (h_4 y_5))) (h_4 (f_2 (g_6 y_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_7 : hol.term A => hol.and (hol.eq A (g_6 y_5) y_7) (hol.eq A y_7 (h_4 y_5)))) (thm_725 B A t_1 s_3 f_2 h_4 y_5 g_6 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof ((y_7 : hol.term A => hol.and (hol.eq A (g_6 y_5) y_7) (hol.eq A y_7 (h_4 y_5))) (h_4 (f_2 (g_6 y_5)))) => thm_726 B A f_2 h_4 y_5 g_6 hyp_4).

(; Theorem: |- ((= (g y)) (h y)) ;)

(; dict ;)

def thm_728 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> h_4 : hol.term (hol.arr B A) -> y_5 : hol.term B -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_4 (f_2 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_2 (g_6 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) -> hol.proof (hol.eq A (g_6 y_5) (h_4 y_5)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => h_4 : hol.term (hol.arr B A) => y_5 : hol.term B => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_4 (f_2 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_2 (g_6 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) => thm_696 B A h_4 y_5 g_6 (thm_727 B A t_1 f_2 s_3 h_4 y_5 g_6 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (g y)) (h y)) ;)

(; dict ;)

def thm_729 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> h_4 : hol.term (hol.arr B A) -> y_5 : hol.term B -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_4 (f_2 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_2 (g_6 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) -> hol.proof (hol.eq A (g_6 y_5) (h_4 y_5)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => h_4 : hol.term (hol.arr B A) => y_5 : hol.term B => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_4 (f_2 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_2 (g_6 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq A (g_6 y_5) (h_4 y_5)) (thm_575 B t_1 y_5 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) => thm_728 B A t_1 f_2 s_3 h_4 y_5 g_6 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) t)) ((= (g y)) (h y))) ;)

(; dict ;)

def thm_730 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> h_3 : hol.term (hol.arr B A) -> g_4 : hol.term (hol.arr B A) -> t_5 : hol.term (Set_2Eset B) -> y_6 : hol.term B -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_1 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_2) (hol.eq B (f_1 (g_4 y_7)) y_7)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq A (g_4 y_6) (h_3 y_6))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => h_3 : hol.term (hol.arr B A) => g_4 : hol.term (hol.arr B A) => t_5 : hol.term (Set_2Eset B) => y_6 : hol.term B => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_1 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_2) (hol.eq B (f_1 (g_4 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) => thm_729 B A t_5 f_1 s_2 h_3 y_6 g_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (g y)) (h y)))) ;)

(; dict ;)

def thm_731 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> h_3 : hol.term (hol.arr B A) -> g_4 : hol.term (hol.arr B A) -> t_5 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (h_3 (f_1 x_6)) x_6))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_1 (g_4 y_6)) y_6)))) -> hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq A (g_4 y_6) (h_3 y_6)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => h_3 : hol.term (hol.arr B A) => g_4 : hol.term (hol.arr B A) => t_5 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (h_3 (f_1 x_6)) x_6))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_1 (g_4 y_6)) y_6)))) => y_6 : hol.term B => thm_730 A B f_1 s_2 h_3 g_4 t_5 y_6 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Set.member (f x)) t)) ((= (g (f x))) (h (f x)))) ;)

(; dict ;)

def thm_732 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> h_2 : hol.term (hol.arr B A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term A -> f_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (hol.eq A (h_2 (f_6 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_1) (hol.eq B (f_6 (g_3 y_7)) y_7)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_5) t_4) (hol.eq A (g_3 (f_6 x_5)) (h_2 (f_6 x_5)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => h_2 : hol.term (hol.arr B A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term A => f_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (hol.eq A (h_2 (f_6 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_1) (hol.eq B (f_6 (g_3 y_7)) y_7)))) => hol.EQ_MP (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4) (hol.eq A (g_3 y_7) (h_2 y_7)))) (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_4) (hol.eq A (g_3 y_7) (h_2 y_7)))) (thm_695 A B h_2 g_3 t_4) (thm_731 A B f_6 s_1 h_2 g_3 t_4 hyp_1 hyp_2) (f_6 x_5).

(; Theorem: |- ((Set.member (f x)) t) ;)

(; dict ;)

def thm_733 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) t_1) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) t_1) => hyp_1.

(; Theorem: |- ((= (g (f x))) (h (f x))) ;)

(; dict ;)

def thm_734 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> h_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_4) t_1) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) (h_3 (f_5 x_4))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => h_3 : hol.term (hol.arr B A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_4) t_1) => thm_732 A B s_2 h_3 g_6 t_1 x_4 f_5 hyp_1 hyp_2 (thm_733 A B t_1 x_4 f_5 hyp_3).

(; Theorem: |- ((= (g (f x))) (h (f x))) ;)

(; dict ;)

def thm_735 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> h_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) (h_3 (f_5 x_4))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => h_3 : hol.term (hol.arr B A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) => hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_4) t_1) (hol.eq A (g_6 (f_5 x_4)) (h_3 (f_5 x_4))) ((B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (thm_687 B A t_1 f_2 s_3 x_4) (thm_692 B A t_1 f_2 s_3 (thm_688 B A t_1 f_2 s_3 hyp_1) x_4)) B A t_1 f_5 s_2 x_4 hyp_2 (thm_39 A s_2 x_4 hyp_4)) (hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_4) t_1) => thm_734 B A t_1 s_2 h_3 x_4 f_5 g_6 hyp_1 hyp_3 hyp_5).

(; Theorem: |- ((= ((= (h (f x))) x)) ((Data.Bool./\ ((= (g (f x))) (h (f x)))) ((= (h (f x))) x))) ;)

(; dict ;)

def thm_736 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> h_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A (g_1 (f_3 x_2)) (h_4 (f_3 x_2))) -> hol.proof (hol.eq hol.bool (hol.eq A (h_4 (f_3 x_2)) x_2) (hol.and (hol.eq A (g_1 (f_3 x_2)) (h_4 (f_3 x_2))) (hol.eq A (h_4 (f_3 x_2)) x_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => h_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A (g_1 (f_3 x_2)) (h_4 (f_3 x_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_105 p_1 q_2 hyp_1) (hol.eq A (g_1 (f_3 x_2)) (h_4 (f_3 x_2))) (hol.eq A (h_4 (f_3 x_2)) x_2) hyp_1.

(; Theorem: |- ((= ((= (h (f x))) x)) ((Data.Bool./\ ((= (g (f x))) (h (f x)))) ((= (h (f x))) x))) ;)

(; dict ;)

def thm_737 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> h_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_6 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_2) (hol.eq B (f_5 (g_3 y_7)) y_7)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hol.proof (hol.eq hol.bool (hol.eq A (h_6 (f_5 x_4)) x_4) (hol.and (hol.eq A (g_3 (f_5 x_4)) (h_6 (f_5 x_4))) (hol.eq A (h_6 (f_5 x_4)) x_4))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => h_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_6 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) => hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_2) (hol.eq B (f_5 (g_3 y_7)) y_7)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hol.PROVE_HYP (hol.eq A (g_3 (f_5 x_4)) (h_6 (f_5 x_4))) (hol.eq hol.bool (hol.eq A (h_6 (f_5 x_4)) x_4) (hol.and (hol.eq A (g_3 (f_5 x_4)) (h_6 (f_5 x_4))) (hol.eq A (h_6 (f_5 x_4)) x_4))) (thm_735 B A t_1 s_2 h_6 x_4 f_5 g_3 hyp_1 hyp_2 hyp_3 hyp_4) (hyp_5 : hol.proof (hol.eq A (g_3 (f_5 x_4)) (h_6 (f_5 x_4))) => thm_736 B A g_3 x_4 f_5 h_6 hyp_5).

(; Theorem: |- ((= (h (f x))) x) ;)

(; dict ;)

def thm_738 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> h_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (h_4 (f_3 x_5)) x_5))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq A (h_4 (f_3 x_2)) x_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => h_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (hol.eq A (h_4 (f_3 x_5)) x_5))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => thm_716 B A f_3 h_4 s_1 x_2 hyp_1 (thm_39 A s_1 x_2 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= (g (f x))) (h (f x)))) ((= (h (f x))) x)) ;)

(; dict ;)

def thm_739 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> h_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hol.proof (hol.and (hol.eq A (g_6 (f_5 x_4)) (h_3 (f_5 x_4))) (hol.eq A (h_3 (f_5 x_4)) x_4)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => h_3 : hol.term (hol.arr B A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) => hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hol.EQ_MP (hol.eq A (h_3 (f_5 x_4)) x_4) (hol.and (hol.eq A (g_6 (f_5 x_4)) (h_3 (f_5 x_4))) (hol.eq A (h_3 (f_5 x_4)) x_4)) (thm_737 B A t_1 s_2 g_6 x_4 f_5 h_3 hyp_1 hyp_2 hyp_3 hyp_4) (thm_738 B A s_2 x_4 f_5 h_3 hyp_1 hyp_4).

(; Theorem: |- (\lambda y. ((Data.Bool./\ ((= (g (f x))) y)) ((= y) x)) (h (f x))) ;)

(; dict ;)

def thm_740 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> h_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) -> hol.proof ((y_7 : hol.term A => hol.and (hol.eq A (g_6 (f_5 x_4)) y_7) (hol.eq A y_7 x_4)) (h_3 (f_5 x_4))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => h_3 : hol.term (hol.arr B A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (hol.eq A (h_3 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) => hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_2) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) => hol.EQ_MP (hol.and (hol.eq A (g_6 (f_5 x_4)) (h_3 (f_5 x_4))) (hol.eq A (h_3 (f_5 x_4)) x_4)) ((y_7 : hol.term A => hol.and (hol.eq A (g_6 (f_5 x_4)) y_7) (hol.eq A y_7 x_4)) (h_3 (f_5 x_4))) (thm_685 B A h_3 x_4 f_5 g_6) (thm_739 B A t_1 s_2 h_3 x_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((= (g (f x))) y)) ((= y) x))) ;)

(; dict ;)

def thm_741 : B : hol.type -> A : hol.type -> h_1 : hol.term (hol.arr B A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_5) (hol.eq A y_5 x_2)) (h_1 (f_3 x_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_5) (hol.eq A y_5 x_2))) :=
  B : hol.type => A : hol.type => h_1 : hol.term (hol.arr B A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof ((y_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_5) (hol.eq A y_5 x_2)) (h_1 (f_3 x_2))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_483 A x_1 P_2 hyp_1) A (h_1 (f_3 x_2)) (y_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_5) (hol.eq A y_5 x_2)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((= (g (f x))) y)) ((= y) x))) ;)

(; dict ;)

def thm_742 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_2 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_7 : hol.term A => hol.and (hol.eq A (g_6 (f_5 x_4)) y_7) (hol.eq A y_7 x_4))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_2 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) => hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.PROVE_HYP ((y_7 : hol.term A => hol.and (hol.eq A (g_6 (f_5 x_4)) y_7) (hol.eq A y_7 x_4)) (h_2 (f_5 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_7 : hol.term A => hol.and (hol.eq A (g_6 (f_5 x_4)) y_7) (hol.eq A y_7 x_4))) (thm_740 B A t_1 s_3 h_2 x_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_4) (hyp_5 : hol.proof ((y_7 : hol.term A => hol.and (hol.eq A (g_6 (f_5 x_4)) y_7) (hol.eq A y_7 x_4)) (h_2 (f_5 x_4))) => thm_741 B A h_2 x_4 f_5 g_6 hyp_5).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_743 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_2 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_2 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) => hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => thm_683 B A x_4 f_5 g_6 (thm_742 B A t_1 h_2 s_3 x_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_744 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_2 (f_5 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (h_2 (f_5 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_1))) => hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_39 A s_3 x_4 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => thm_743 B A t_1 h_2 s_3 x_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_745 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> h_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq A (h_2 (f_3 x_7)) x_7))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_5) (hol.eq B (f_3 (g_4 y_7)) y_7)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq A (g_4 (f_3 x_6)) x_6)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => h_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq A (h_2 (f_3 x_7)) x_7))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1))) => hyp_3 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_7) s_5) (hol.eq B (f_3 (g_4 y_7)) y_7)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) => thm_744 B A t_1 h_2 s_5 x_6 f_3 g_4 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_746 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> h_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq A (h_2 (f_3 x_6)) x_6))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))) -> hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_5) (hol.eq B (f_3 (g_4 y_6)) y_6)))) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq A (g_4 (f_3 x_6)) x_6))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => h_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq A (h_2 (f_3 x_6)) x_6))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))) => hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_5) (hol.eq B (f_3 (g_4 y_6)) y_6)))) => x_6 : hol.term A => thm_745 B A t_1 h_2 f_3 g_4 s_5 x_6 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_747 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> t_5 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (h_1 (f_4 x_6)) x_6))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_5))) -> hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) -> hol.proof (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_4 (g_3 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_3 (f_4 x_6)) x_6)))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => t_5 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (h_1 (f_4 x_6)) x_6))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_5))) => hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) => hol.EQ_MP (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_3 (f_4 x_6)) x_6))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_4 (g_3 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_3 (f_4 x_6)) x_6)))) (thm_654 B A t_5 f_4 g_3 s_2 hyp_3) (hol.EQ_MP (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_3 (f_4 x_6)) x_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_3 (f_4 x_6)) x_6))) (thm_38 B A f_4 g_3 s_2) (thm_746 B A t_5 h_1 f_4 g_3 s_2 hyp_1 hyp_2 hyp_3)).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_748 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr B A) -> t_5 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_1 (f_2 x_6)) x_6))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_5))) -> hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) -> hol.proof (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_2 (g_4 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_4 (f_2 x_6)) x_6))))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr B A) => t_5 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_1 (f_2 x_6)) x_6))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_5))) => hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) => hol.EQ_MP (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_2 (g_4 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_4 (f_2 x_6)) x_6)))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_2 (g_4 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_4 (f_2 x_6)) x_6))))) (thm_636 A B s_3 g_4 f_2 t_5 hyp_3) (thm_747 A B h_1 s_3 g_4 f_2 t_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_749 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr B A) -> t_5 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_1 (f_2 x_6)) x_6))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_5))) -> hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) -> hol.proof (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_2 (g_4 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_4 (f_2 x_6)) x_6))))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr B A) => t_5 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_1 (f_2 x_6)) x_6))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_5))) => hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) => hol.PROVE_HYP (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_2 (g_4 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_4 (f_2 x_6)) x_6))))) (thm_606 A B f_2 s_3 g_4 t_5 hyp_3) (hyp_4 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) => thm_748 A B h_1 f_2 s_3 g_4 t_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_750 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr B A) -> t_5 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_1 (f_2 x_6)) x_6))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_5))) -> hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) -> hol.proof (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_2 (g_4 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_4 (f_2 x_6)) x_6))))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr B A) => t_5 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_1 (f_2 x_6)) x_6))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_5))) => hyp_3 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_1 (f_2 x_6)) x_6))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_2 (g_4 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_4 (f_2 x_6)) x_6))))) (thm_605 B A f_2 h_1 s_3 hyp_1) (hyp_4 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (h_1 (f_2 x_6)) x_6))) => thm_749 A B h_1 f_2 s_3 g_4 t_5 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_751 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> h_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_5) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hol.proof (hol.imp (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq A (h_4 (f_3 x_6)) x_6))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_5))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.eq B (f_3 (g_1 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq A (g_1 (f_3 x_6)) x_6)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => h_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_5) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq A (h_4 (f_3 x_6)) x_6))) => thm_750 A B h_4 f_3 s_5 g_1 t_2 hyp_3 hyp_1 hyp_2.

(; Theorem: |- ((= (\lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) h)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x)))) ;)

(; dict ;)

def thm_752 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) h_1) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_1 (f_2 x_4)) x_4)))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr B A) hol.bool (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) h_1.

(; Theorem: |- (\lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) h) ;)

(; dict ;)

def thm_753 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) h_1) -> hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) h_1) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))) h_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (h (f x))) x))) ;)

(; dict ;)

def thm_754 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> h_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_1 x_5)) x_5))) h_2) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => h_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_1 x_5)) x_5))) h_2) => hol.EQ_MP ((g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_1 x_5)) x_5))) h_2) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq A (h_2 (f_1 x_4)) x_4))) (thm_752 A B h_2 f_1 s_3) (thm_753 A B h_2 f_1 s_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_755 : A : hol.type -> B : hol.type -> h_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr B A) -> t_5 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_5))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) -> hyp_3 : hol.proof ((g_6 : hol.term (hol.arr B A) => hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (g_6 (f_2 x_7)) x_7))) h_1) -> hol.proof (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.eq B (f_2 (g_4 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_4 (f_2 x_6)) x_6))))) :=
  A : hol.type => B : hol.type => h_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr B A) => t_5 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_5))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_3) (hol.eq B (f_2 (g_4 y_6)) y_6)))) => hyp_3 : hol.proof ((g_6 : hol.term (hol.arr B A) => hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (hol.eq A (g_6 (f_2 x_7)) x_7))) h_1) => thm_751 B A g_4 t_5 f_2 h_1 s_3 hyp_1 hyp_2 (thm_754 B A f_2 h_1 s_3 hyp_3).

(; Theorem: |- ((Data.Bool.==> (\lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) h)) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_756 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> h_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_5) (hol.eq B (f_4 (g_1 y_6)) y_6)))) -> hol.proof (hol.imp ((g_6 : hol.term (hol.arr B A) => hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq A (g_6 (f_4 x_7)) x_7))) h_3) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_5))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.eq B (f_4 (g_1 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (hol.eq A (g_1 (f_4 x_6)) x_6)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => h_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_5) (hol.eq B (f_4 (g_1 y_6)) y_6)))) => hyp_3 : hol.proof ((g_6 : hol.term (hol.arr B A) => hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (hol.eq A (g_6 (f_4 x_7)) x_7))) h_3) => thm_755 A B h_3 f_4 s_5 g_1 t_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda h. ((Data.Bool.==> (\lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))) h)) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_757 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) -> hol.proof (hol.forall (hol.arr B A) (h_5 : hol.term (hol.arr B A) => hol.imp ((g_6 : hol.term (hol.arr B A) => hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (hol.eq A (g_6 (f_3 x_7)) x_7))) h_5) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_4))) (hol.and (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 t_2) (hol.eq B (f_3 (g_1 y_6)) y_6))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_1 (f_3 x_6)) x_6))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) => h_5 : hol.term (hol.arr B A) => thm_756 A B g_1 t_2 h_5 f_3 s_4 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_758 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5)))) => thm_604 A B g_1 t_2 f_3 s_4 (thm_757 A B g_1 t_2 f_3 s_4 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_759 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.eq A (g_3 (f_1 x_4)) x_4)))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_760 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_5) t_4))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) -> hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) -> hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_5) t_4))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) => hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) => thm_758 A B g_3 t_4 f_1 s_2 hyp_1 hyp_2 (thm_759 A B f_1 s_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_761 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_5) t_4))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) -> hyp_3 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) -> hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_5) t_4))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) => hyp_3 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) (thm_603 A B f_1 s_2 g_3 t_4 hyp_3) (hyp_4 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5)))) => thm_760 A B f_1 s_2 g_3 t_4 hyp_1 hyp_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_762 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_5) t_4))) -> hyp_2 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) -> hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_5) t_4))) => hyp_2 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2) (hol.eq B (f_1 (g_3 y_5)) y_5))))) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_4) (hol.eq B (f_1 (g_3 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_3 (f_1 x_5)) x_5))))) (thm_601 A B g_3 t_4 f_1 s_2 hyp_2) (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (hol.eq A (g_5 (f_1 x_6)) x_6)))) => thm_761 A B f_1 s_2 g_3 t_4 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_763 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) -> hol.proof (hol.imp (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) => hyp_2 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) => thm_762 A B f_3 s_4 g_1 t_2 hyp_1 hyp_2.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_764 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) => hol.PROP_EXT (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))))) (hyp_2 : hol.proof (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.eq B (f_3 (g_1 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.eq A (g_1 (f_3 x_5)) x_5))))) => thm_598 A B f_3 s_4 g_1 t_2 (thm_553 A B f_3 s_4 g_1 t_2 hyp_2)) (hyp_2 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (hol.eq A (g_5 (f_3 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_4) (hol.eq B (f_3 (g_1 y_5)) y_5))))) => thm_763 A B g_1 t_2 f_3 s_4 hyp_1 (thm_599 A B g_1 t_2 f_3 s_4 hyp_2)).

(; Theorem: |- ((= \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_765 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) => hol.ABS_THM (hol.arr B A) hol.bool (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))) (g_4 : hol.term (hol.arr B A) => thm_764 A B g_4 t_1 f_2 s_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_766 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))) (thm_193 A B) (hol.EQ_MP (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5))))) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))) (thm_552 A B t_1 f_2 s_3) (thm_765 A B t_1 f_2 s_3 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_767 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) -> hol.proof (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_5 : hol.term (hol.arr B A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (hol.eq A (g_5 (f_2 x_6)) x_6)))) (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (thm_550 A B t_1 f_2 s_3) (thm_766 A B t_1 f_2 s_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_768 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) => hol.EQ_MP (hol.eq hol.bool (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5))))))) (thm_528 A B t_1 f_2 s_3) (thm_767 A B t_1 f_2 s_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))) ;)

(; dict ;)

def thm_769 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq B (f_2 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_1) (hol.eq B (f_2 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (hol.eq A (g_4 (f_2 x_5)) x_5)))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) => thm_768 B A t_1 f_2 s_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))) ;)

(; dict ;)

def thm_770 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => thm_769 B A t_3 f_1 s_2.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x)))))))))) ;)

(; dict ;)

def thm_771 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))) (thm_517 A B f_1 s_2) (thm_770 A B f_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))))) ;)

(; dict ;)

def thm_772 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5)))))))))) (thm_513 B A f_1) (thm_771 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) s)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((= (g (f x))) x))))))))))) ;)

(; thm ;)

def thm_773 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_4) t_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 s_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2))) (hol.and (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.eq B (f_1 (g_4 y_5)) y_5))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq A (g_4 (f_1 x_5)) x_5))))))))))) (thm_510 B A) (thm_772 B A).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_774 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_775 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (thm_774 B A) (thm_774 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))))) (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_776 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (thm_22 B A) (thm_775 B A).

(; Theorem: |- ((= ((= ((Set.member x) Set.universe)) Data.Bool.T)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_777 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) Set.universe)) Data.Bool.T)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_778 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_777 A x_1) (thm_777 A x_1).

(; Theorem: |- ((= ((Set.member x) Set.universe)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_779 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_53 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))).

(; Theorem: |- ((Set.member x) Set.universe) ;)

(; dict ;)

def thm_780 : A : hol.type -> x_1 : hol.term A -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) :=
  A : hol.type => x_1 : hol.term A => thm_20 A x_1.

(; Theorem: |- ((= ((Set.member x) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_781 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_779 A x_1) (thm_780 A x_1).

(; Theorem: |- ((= ((Set.member x) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_782 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset B))) hol.true) :=
  B : hol.type => x_1 : hol.term B => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_778 A x_1) (thm_781 A x_1)) B x_1.

(; Theorem: |- ((= ((Set.member y) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_783 : B : hol.type -> y_1 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset B))) hol.true) :=
  B : hol.type => y_1 : hol.term B => (B : hol.type => x_1 : hol.term B => thm_782 B x_1) B y_1.

(; Theorem: |- ((= (Data.Bool.==> ((Set.member y) Set.universe))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_784 : B : hol.type -> y_1 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true)) :=
  B : hol.type => y_1 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset B))) hol.true thm_281 (thm_783 B y_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member x) Set.universe))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_785 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true thm_45 (thm_781 A x_1).

(; Theorem: |- ((= ((= (f x)) y)) ((= (f x)) y)) ;)

(; dict ;)

def thm_786 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) y_1) (hol.eq B (f_3 x_2) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (f_3 x_2) y_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))) ((Data.Bool./\ Data.Bool.T) ((= (f x)) y))) ;)

(; dict ;)

def thm_787 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (hol.and hol.true (hol.eq B (f_2 x_3) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.eq B (f_2 x_3) y_1) (hol.eq B (f_2 x_3) y_1) (thm_785 A x_3) (thm_786 A B y_1 x_3 f_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((= (f x)) y))) ((= (f x)) y)) ;)

(; dict ;)

def thm_788 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.eq B (f_3 x_2) y_1)) (hol.eq B (f_3 x_2) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_75 t_1) (hol.eq B (f_3 x_2) y_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))) ((= (f x)) y)) ;)

(; dict ;)

def thm_789 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (hol.eq B (f_2 x_3) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => x_3 : hol.term A => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (hol.and hol.true (hol.eq B (f_2 x_3) y_1)) (hol.eq B (f_2 x_3) y_1) (thm_787 B A y_1 f_2 x_3) (thm_788 A B y_1 x_3 f_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))) \lambda x. ((= (f x)) y)) ;)

(; dict ;)

def thm_790 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1) (x_3 : hol.term A => thm_789 B A y_1 f_2 x_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))) (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_791 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1) (thm_212 A) (thm_790 B A y_1 f_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))) ((Data.Bool.==> Data.Bool.T) (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_792 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (thm_784 B y_2) (thm_791 B A y_2 f_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_793 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_303 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))) (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_794 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (thm_792 A B f_1 y_2) (thm_793 B A y_2 f_1).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))) \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_795 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (y_2 : hol.term B => thm_794 A B f_1 y_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_796 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (thm_150 B) (thm_795 A B f_1).

(; Theorem: |- ((= (= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_797 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) thm_166 (thm_796 A B f_1).

(; Theorem: |- ((= ((Set.member (g y)) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_798 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_1) (Set_2Euniverse (Set_2Eset A))) hol.true) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => (A : hol.type => x_1 : hol.term A => thm_781 A x_1) A (g_2 y_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member (g y)) Set.universe))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_799 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_1) (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_1) (Set_2Euniverse (Set_2Eset A))) hol.true thm_45 (thm_798 B A y_1 g_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))) ((Data.Bool./\ Data.Bool.T) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_800 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_3 y_2)) y_2)) (hol.and hol.true (hol.eq B (f_1 (g_3 y_2)) y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.eq B (f_1 (g_3 y_2)) y_2) (hol.eq B (f_1 (g_3 y_2)) y_2) (thm_799 B A y_2 g_3) (thm_640 A B y_2 g_3 f_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((= (f (g y))) y))) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_801 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.eq B (f_3 (g_2 y_1)) y_1)) (hol.eq B (f_3 (g_2 y_1)) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_75 t_1) (hol.eq B (f_3 (g_2 y_1)) y_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_802 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_3 y_2)) y_2)) (hol.eq B (f_1 (g_3 y_2)) y_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => g_3 : hol.term (hol.arr B A) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_2) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_3 y_2)) y_2)) (hol.and hol.true (hol.eq B (f_1 (g_3 y_2)) y_2)) (hol.eq B (f_1 (g_3 y_2)) y_2) (thm_800 B A f_1 y_2 g_3) (thm_801 A B y_2 g_3 f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y)))) ((Data.Bool.==> Data.Bool.T) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_803 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.imp hol.true (hol.eq B (f_1 (g_2 y_3)) y_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => y_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.eq B (f_1 (g_2 y_3)) y_3) (thm_784 B y_3) (thm_802 B A f_1 y_3 g_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= (f (g y))) y))) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_804 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq B (f_3 (g_2 y_1)) y_1)) (hol.eq B (f_3 (g_2 y_1)) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_303 t_1) (hol.eq B (f_3 (g_2 y_1)) y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y)))) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_805 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.eq B (f_1 (g_2 y_3)) y_3)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => y_3 : hol.term B => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.imp hol.true (hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.eq B (f_1 (g_2 y_3)) y_3) (thm_803 A B f_1 g_2 y_3) (thm_804 A B y_3 g_2 f_1).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y)))) \lambda y. ((= (f (g y))) y)) ;)

(; dict ;)

def thm_806 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => hol.ABS_THM B hol.bool (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3) (y_3 : hol.term B => thm_805 A B f_1 g_2 y_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))))) (Data.Bool.! \lambda y. ((= (f (g y))) y))) ;)

(; dict ;)

def thm_807 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))) (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3) (thm_150 B) (thm_806 A B f_1 g_2).

(; Theorem: |- ((= \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))))) \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))) ;)

(; dict ;)

def thm_808 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr B A) hol.bool (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (g_2 : hol.term (hol.arr B A) => thm_807 A B f_1 g_2).

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_809 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (thm_193 A B) (thm_808 A B f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_810 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))) (thm_797 A B f_1) (thm_809 A B f_1).

(; Theorem: |- ((= (Data.Bool.==> ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y)))))))) (Data.Bool.==> ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_811 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))))))) (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) thm_281 (thm_810 A B f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_812 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))))) ((Data.Bool.==> ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_813 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3))))))) (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (thm_811 A B f_1) (thm_812 A B f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))))) Data.Bool.T) ;)

(; dict ;)

def thm_814 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) hol.true) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_323 t_1) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))))) Data.Bool.T) ;)

(; dict ;)

def thm_815 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) hol.true) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) hol.true (thm_813 A B f_1) (thm_814 A B f_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_816 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) hol.true (thm_815 A B f_1).

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_817 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.imp (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) (thm_816 A B f_1) thm_0.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y))))))) ;)

(; dict ;)

def thm_818 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_4) y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_3 y_4)) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => thm_521 B A f_1 (Set_2Euniverse (Set_2Eset A)).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Data.Bool./\ ((Set.member (g y)) Set.universe)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_819 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 (g_2 y_3)) y_3)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => thm_818 A B f_1 (Set_2Euniverse (Set_2Eset B)).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_820 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => thm_817 A B f_1 (thm_819 A B f_1).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_821 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_820 A B f_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((= (f (g y))) y))))) ;)

(; thm ;)

def thm_822 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3))))) (thm_776 B A) (thm_821 B A).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) \lambda f. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_823 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) \lambda f. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_824 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (thm_823 B A) (thm_823 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_825 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (thm_22 B A) (thm_824 B A).

(; Theorem: |- ((= ((Set.member y) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_826 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset A))) hol.true) :=
  A : hol.type => y_1 : hol.term A => (A : hol.type => x_1 : hol.term A => thm_781 A x_1) A y_1.

(; Theorem: |- ((= (Data.Bool./\ ((Set.member y) Set.universe))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_827 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true)) :=
  A : hol.type => y_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset A))) hol.true thm_45 (thm_826 A y_1).

(; Theorem: |- ((= ((= (f x)) (f y))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_828 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) (f_3 y_1)) (hol.eq B (f_3 x_2) (f_3 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (f_3 x_2) (f_3 y_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y)))) ((Data.Bool./\ Data.Bool.T) ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_829 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_1) (f_2 y_3))) (hol.and hol.true (hol.eq B (f_2 x_1) (f_2 y_3)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => y_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.eq B (f_2 x_1) (f_2 y_3)) (hol.eq B (f_2 x_1) (f_2 y_3)) (thm_827 A y_3) (thm_828 A B y_3 x_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((= (f x)) (f y)))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_830 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.eq B (f_3 x_2) (f_3 y_1))) (hol.eq B (f_3 x_2) (f_3 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_75 t_1) (hol.eq B (f_3 x_2) (f_3 y_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y)))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_831 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_1) (f_2 y_3))) (hol.eq B (f_2 x_1) (f_2 y_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => y_3 : hol.term A => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_1) (f_2 y_3))) (hol.and hol.true (hol.eq B (f_2 x_1) (f_2 y_3))) (hol.eq B (f_2 x_1) (f_2 y_3)) (thm_829 B A x_1 f_2 y_3) (thm_830 A B y_3 x_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((Data.Bool./\ Data.Bool.T) ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_832 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.and hol.true (hol.eq B (f_1 x_3) (f_1 y_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2))) (hol.eq B (f_1 x_3) (f_1 y_2)) (thm_785 A x_3) (thm_831 B A x_3 f_1 y_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_833 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.eq B (f_1 x_3) (f_1 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => x_3 : hol.term A => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.and hol.true (hol.eq B (f_1 x_3) (f_1 y_2))) (hol.eq B (f_1 x_3) (f_1 y_2)) (thm_832 B A f_1 y_2 x_3) (thm_830 A B y_2 x_3 f_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y)))))) (Data.Bool.==> ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_834 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2))))) (hol.imp (hol.eq B (f_1 x_3) (f_1 y_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.eq B (f_1 x_3) (f_1 y_2)) thm_281 (thm_833 B A f_1 y_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))) ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))) ;)

(; dict ;)

def thm_835 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.eq A x_3 y_2)) (hol.imp (hol.eq B (f_1 x_3) (f_1 y_2)) (hol.eq A x_3 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2))))) (hol.imp (hol.eq B (f_1 x_3) (f_1 y_2))) (hol.eq A x_3 y_2) (hol.eq A x_3 y_2) (thm_834 B A f_1 y_2 x_3) (thm_350 A y_2 x_3).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))) ;)

(; dict ;)

def thm_836 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)) (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)) (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)) (y_3 : hol.term A => thm_835 B A f_1 y_3 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))) ;)

(; dict ;)

def thm_837 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))) (hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)) (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)) (thm_35 A) (thm_836 B A f_1 x_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))) ;)

(; dict ;)

def thm_838 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => thm_837 B A f_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) ;)

(; dict ;)

def thm_839 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))) (thm_35 A) (thm_838 B A f_1).

(; Theorem: |- ((= (= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))))) (= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; dict ;)

def thm_840 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) thm_166 (thm_839 B A f_1).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) Set.universe))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_841 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A)))) (hol.imp hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true thm_281 (thm_781 A x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))) ((Data.Bool.==> Data.Bool.T) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_842 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)) (hol.imp hol.true (hol.eq A (g_2 (f_1 x_3)) x_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A)))) (hol.imp hol.true) (hol.eq A (g_2 (f_1 x_3)) x_3) (hol.eq A (g_2 (f_1 x_3)) x_3) (thm_841 A x_3) (thm_169 B A x_3 f_1 g_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= (g (f x))) x))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_843 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq A (g_3 (f_2 x_1)) x_1)) (hol.eq A (g_3 (f_2 x_1)) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => (t_1 : hol.term hol.bool => thm_303 t_1) (hol.eq A (g_3 (f_2 x_1)) x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_844 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)) (hol.eq A (g_2 (f_1 x_3)) x_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)) (hol.imp hol.true (hol.eq A (g_2 (f_1 x_3)) x_3)) (hol.eq A (g_2 (f_1 x_3)) x_3) (thm_842 B A f_1 g_2 x_3) (thm_843 B A x_3 f_1 g_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))) \lambda x. ((= (g (f x))) x)) ;)

(; dict ;)

def thm_845 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)) (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)) (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3) (x_3 : hol.term A => thm_844 B A f_1 g_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))) (Data.Bool.! \lambda x. ((= (g (f x))) x))) ;)

(; dict ;)

def thm_846 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)) (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3) (thm_35 A) (thm_845 B A f_1 g_2).

(; Theorem: |- ((= \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))) \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))) ;)

(; dict ;)

def thm_847 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr B A) hol.bool (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)) (g_2 : hol.term (hol.arr B A) => thm_846 B A f_1 g_2).

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_848 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)) (thm_193 A B) (thm_847 A B f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_849 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))) (thm_840 B A f_1) (thm_848 A B f_1).

(; Theorem: |- ((= (Data.Bool.==> ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))) (Data.Bool.==> ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_850 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) thm_281 (thm_849 B A f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_851 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ((Data.Bool.==> ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_852 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (thm_850 B A f_1) (thm_851 B A f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) Data.Bool.T) ;)

(; dict ;)

def thm_853 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_323 t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) Data.Bool.T) ;)

(; dict ;)

def thm_854 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) hol.true (thm_852 B A f_1) (thm_853 B A f_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_855 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) hol.true (thm_854 B A f_1).

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))) ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_856 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.imp (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (thm_855 B A f_1) thm_0.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_857 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_505 B A f_1 (Set_2Euniverse (Set_2Eset A)).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_858 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_856 B A f_1 (thm_857 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_859 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_858 B A f_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; thm ;)

def thm_860 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (thm_825 B A) (thm_859 B A).

(; Theorem: |- ((= \lambda f. ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) \lambda f. ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_861 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))).

(; Theorem: |- ((= \lambda f. ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) \lambda f. ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_862 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (thm_861 B A) (thm_861 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) (Data.Bool.! \lambda f. ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_863 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (thm_22 B A) (thm_862 B A).

(; Theorem: |- ((= ((Set.member (f x)) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_864 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_1) (Set_2Euniverse (Set_2Eset B))) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => (B : hol.type => x_1 : hol.term B => thm_782 B x_1) B (f_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe))) ((Data.Bool.==> Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_865 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A)))) (hol.imp hol.true) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))) hol.true (thm_841 A x_2) (thm_864 A B x_2 f_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_866 : hol.proof (hol.eq hol.bool (hol.imp hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_303 t_1) hol.true.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe))) Data.Bool.T) ;)

(; dict ;)

def thm_867 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B)))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true hol.true) hol.true (thm_865 B A f_1 x_2) thm_866.

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe))) \lambda x. Data.Bool.T) ;)

(; dict ;)

def thm_868 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B)))) (x_2 : hol.term A => hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B)))) (x_2 : hol.term A => hol.true) (x_2 : hol.term A => thm_867 B A f_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) (Data.Bool.! \lambda x. Data.Bool.T)) ;)

(; dict ;)

def thm_869 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.forall A (x_2 : hol.term A => hol.true))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B)))) (x_2 : hol.term A => hol.true) (thm_35 A) (thm_868 B A f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_870 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_871 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (thm_870 A t_1) (thm_870 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. t)) t) ;)

(; dict ;)

def thm_872 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => thm_21 A t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_873 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.true)) hol.true) :=
  A : hol.type => (A : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (thm_871 A t_1) (thm_872 A t_1)) A t_1) A hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) Data.Bool.T) ;)

(; dict ;)

def thm_874 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.forall A (x_2 : hol.term A => hol.true)) hol.true (thm_869 B A f_1) (thm_873 A).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe))))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_875 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B)))))) (hol.imp hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) hol.true thm_281 (thm_874 B A f_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))))) (Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; dict ;)

def thm_876 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) thm_45 (thm_839 B A f_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_877 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (thm_876 B A f_1) (thm_796 A B f_1).

(; Theorem: |- ((= (= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))))) (= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) ;)

(; dict ;)

def thm_878 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) thm_166 (thm_877 B A f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe))) ((Data.Bool.==> Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_879 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A)))) (hol.imp hol.true hol.true)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => y_2 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A))) hol.true (thm_784 B y_2) (thm_798 B A y_2 g_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe))) Data.Bool.T) ;)

(; dict ;)

def thm_880 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A)))) hol.true) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => y_2 : hol.term B => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A)))) (hol.imp hol.true hol.true) hol.true (thm_879 A B g_1 y_2) thm_866.

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe))) \lambda y. Data.Bool.T) ;)

(; dict ;)

def thm_881 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A)))) (y_2 : hol.term B => hol.true)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => hol.ABS_THM B hol.bool (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A)))) (y_2 : hol.term B => hol.true) (y_2 : hol.term B => thm_880 A B g_1 y_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) (Data.Bool.! \lambda y. Data.Bool.T)) ;)

(; dict ;)

def thm_882 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A))))) (hol.forall B (y_2 : hol.term B => hol.true))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A)))) (y_2 : hol.term B => hol.true) (thm_150 B) (thm_881 A B g_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. t)) t)) ((= (Data.Bool.! \lambda y. t)) t)) ;)

(; dict ;)

def thm_883 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda y. t)) t)) ;)

(; dict ;)

def thm_884 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (thm_870 A t_1) (thm_883 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. t)) t) ;)

(; dict ;)

def thm_885 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (thm_884 A t_1) (thm_872 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. t)) t) ;)

(; dict ;)

def thm_886 : B : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => t_1)) t_1) :=
  B : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_885 A t_1) B t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda y. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_887 : B : hol.type -> hol.proof (hol.eq hol.bool (hol.forall B (y_1 : hol.term B => hol.true)) hol.true) :=
  B : hol.type => (B : hol.type => t_1 : hol.term hol.bool => thm_886 B t_1) B hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) Data.Bool.T) ;)

(; dict ;)

def thm_888 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A))))) hol.true) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => hol.TRANS hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A))))) (hol.forall B (y_2 : hol.term B => hol.true)) hol.true (thm_882 A B g_1) (thm_887 B).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe))))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_889 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A)))))) (hol.and hol.true)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_2) (Set_2Euniverse (Set_2Eset A))))) hol.true thm_45 (thm_888 A B g_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y))) ((Data.Bool.==> Data.Bool.T) ((= (f (g y))) y))) ;)

(; dict ;)

def thm_890 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3)) (hol.imp hol.true (hol.eq B (f_2 (g_1 y_3)) y_3))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true) (hol.eq B (f_2 (g_1 y_3)) y_3) (hol.eq B (f_2 (g_1 y_3)) y_3) (thm_784 B y_3) (thm_640 A B y_3 g_1 f_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y))) ((= (f (g y))) y)) ;)

(; dict ;)

def thm_891 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3)) (hol.eq B (f_2 (g_1 y_3)) y_3)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3)) (hol.imp hol.true (hol.eq B (f_2 (g_1 y_3)) y_3)) (hol.eq B (f_2 (g_1 y_3)) y_3) (thm_890 A B g_1 f_2 y_3) (thm_804 A B y_3 g_1 f_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y))) \lambda y. ((= (f (g y))) y)) ;)

(; dict ;)

def thm_892 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3)) (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3)) (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3) (y_3 : hol.term B => thm_891 A B g_1 f_2 y_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda y. ((= (f (g y))) y))) ;)

(; dict ;)

def thm_893 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3))) (hol.forall B (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3)) (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3) (thm_150 B) (thm_892 A B g_1 f_2).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y))))) (Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_894 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3)))) (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3))) (hol.forall B (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3)) thm_45 (thm_893 A B g_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_895 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_1 (f_2 x_3)) x_3)))) (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_1 (f_2 x_3)) x_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_2 (g_1 y_3)) y_3)))) (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_1 (f_2 x_3)) x_3))) (hol.forall A (x_3 : hol.term A => hol.eq A (g_1 (f_2 x_3)) x_3)) (thm_894 A B g_1 f_2) (thm_846 B A f_2 g_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))) ((Data.Bool./\ Data.Bool.T) ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_896 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.and hol.true (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A)))))) (hol.and hol.true) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))) (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))) (thm_889 A B g_2) (thm_895 A B g_2 f_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_897 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_1 (f_2 x_3)) x_3)))) (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_1 (f_2 x_3)) x_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_75 t_1) (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_2 (g_1 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_1 (f_2 x_3)) x_3))).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_898 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => hol.TRANS hol.bool (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.and hol.true (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))) (thm_896 A B f_1 g_2) (thm_897 A B g_2 f_1).

(; Theorem: |- ((= \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))) \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))) ;)

(; dict ;)

def thm_899 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr B A) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr B A) hol.bool (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))) (g_2 : hol.term (hol.arr B A) => thm_898 A B f_1 g_2).

(; Theorem: |- ((= (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_900 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr B A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool)) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))) (thm_193 A B) (thm_899 A B f_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_901 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))) (thm_878 B A f_1) (thm_900 A B f_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))))) ((Data.Bool.==> Data.Bool.T) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_902 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.imp hol.true (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B)))))) (hol.imp hol.true) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (thm_875 B A f_1) (thm_901 B A f_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_903 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_303 t_1) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_904 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.imp hol.true (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (thm_902 B A f_1) (thm_903 B A f_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))))))) (Data.Bool.==> ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_905 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))))))) (hol.imp (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) thm_281 (thm_904 B A f_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_906 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) ((Data.Bool.==> ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_907 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.imp (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3))))))))) (hol.imp (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (thm_905 B A f_1) (thm_906 B A f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) Data.Bool.T) ;)

(; dict ;)

def thm_908 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_323 t_1) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) Data.Bool.T) ;)

(; dict ;)

def thm_909 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.imp (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) hol.true (thm_907 B A f_1) (thm_908 B A f_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))))) ;)

(; dict ;)

def thm_910 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) hol.true (thm_909 B A f_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_911 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.imp (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (thm_910 B A f_1) thm_0.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) t)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x))))))))) ;)

(; dict ;)

def thm_912 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) t_2))) (hol.eq hol.bool (hol.and (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_4) y_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_2) (hol.eq B (f_1 (g_3 y_4)) y_4))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_3 (f_1 x_4)) x_4))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => thm_771 B A f_1 (Set_2Euniverse (Set_2Eset A)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((Set.member (f x)) Set.universe)))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((Set.member (g y)) Set.universe)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) ((= (f (g y))) y)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.universe)) ((= (g (f x))) x)))))))) ;)

(; dict ;)

def thm_913 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Euniverse (Set_2Eset B))))) (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_3) (Set_2Euniverse (Set_2Eset A))))) (hol.and (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset B))) (hol.eq B (f_1 (g_2 y_3)) y_3))) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq A (g_2 (f_1 x_3)) x_3)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_912 A B f_1 (Set_2Euniverse (Set_2Eset B)).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x))))) ;)

(; dict ;)

def thm_914 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_911 B A f_1 (thm_913 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; dict ;)

def thm_915 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_914 B A f_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda y. ((= (f (g y))) y))) (Data.Bool.! \lambda x. ((= (g (f x))) x)))))) ;)

(; thm ;)

def thm_916 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.and (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_2 : hol.term (hol.arr B A) => hol.and (hol.forall B (y_3 : hol.term B => hol.eq B (f_1 (g_2 y_3)) y_3)) (hol.forall A (x_3 : hol.term A => hol.eq A (g_2 (f_1 x_3)) x_3)))))) (thm_863 B A) (thm_915 B A).
